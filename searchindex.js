Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "develop": [0, 163, 171, 172, 173, 174, 180, 183, 185, 189], "wa": [0, 37, 82, 96, 151, 159, 172, 173, 174, 181, 182, 186, 188, 192], "start": [0, 5, 13, 19, 35, 55, 57, 62, 63, 64, 65, 78, 87, 88, 107, 114, 120, 130, 145, 151, 157, 160, 167, 170, 172, 173, 175, 181, 183, 184, 186, 188], "johann": [0, 162], "heinsoo": [0, 162], "aalto": [0, 68, 187], "univers": [0, 187], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 78, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 95, 96, 97, 100, 101, 103, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 138, 144, 145, 146, 148, 149, 151, 154, 155, 156, 157, 160, 163, 164, 166, 167, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193], "final": [0, 62, 78, 83, 120, 183, 189], "kqc": [0, 93, 96, 105, 107, 156, 158, 159, 163, 164, 166, 169, 170, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 192], "version": [0, 1, 80, 81, 82, 83, 84, 146, 162, 166, 168, 169, 170, 174, 177, 179, 182, 183, 184, 186, 189, 193], "correspond": [0, 17, 19, 26, 37, 62, 78, 82, 84, 87, 88, 117, 120, 125, 145, 149, 150, 151, 155, 164, 166, 170, 171, 174, 177, 178, 181, 183, 187, 188, 190, 191], "v0": [0, 173], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 28, 29, 31, 35, 36, 37, 38, 47, 55, 56, 57, 62, 63, 64, 65, 69, 70, 71, 75, 78, 87, 89, 90, 91, 92, 96, 101, 104, 112, 113, 114, 116, 118, 120, 124, 130, 134, 137, 145, 146, 151, 154, 157, 158, 159, 160, 166, 170, 173, 174, 179, 182, 183, 187, 188], "tag": [0, 155, 163, 166, 170, 191], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "repositori": [0, 144, 166, 168, 170, 173, 174, 177, 187], "sinc": [0, 148, 170, 178, 183, 188], "ha": [0, 5, 20, 23, 36, 37, 38, 56, 62, 70, 83, 87, 88, 92, 96, 101, 109, 120, 144, 148, 151, 156, 157, 160, 166, 169, 170, 173, 174, 178, 181, 182, 183, 184, 186, 188], "been": [0, 62, 83, 120, 152, 166, 174, 182], "see": [0, 2, 19, 37, 62, 78, 83, 95, 97, 101, 104, 113, 116, 120, 122, 123, 124, 125, 126, 160, 163, 164, 166, 169, 170, 173, 174, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 192], "cite": [0, 172], "section": [0, 63, 96, 104, 116, 155, 164, 169, 170, 172, 174, 178, 180, 182, 183, 185, 188, 190], "other": [0, 2, 5, 13, 28, 34, 37, 38, 62, 63, 70, 71, 75, 76, 78, 89, 91, 96, 104, 107, 113, 120, 130, 139, 145, 153, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 177, 178, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193], "author": [0, 162], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 57, 62, 78, 80, 81, 82, 83, 84, 89, 120, 123, 124, 130, 135, 144, 151, 155, 156, 164, 166, 172, 177, 178, 179, 180, 181, 188, 191, 192], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 80, 82, 83, 86, 87, 88, 89, 92, 94, 95, 96, 97, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 151, 152, 164, 166, 167, 169, 173, 174, 178, 180, 182, 184, 186, 187, 188, 189, 190], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 62, 68, 69, 86, 91, 94, 96, 120, 126, 134, 152, 164], "library_descript": [1, 2, 5, 28, 37, 68, 69, 86, 91, 126, 134, 164], "library_path": [1, 2, 5, 28, 37, 68, 69, 86, 91, 126, 134, 152], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 56, 63], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 63], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 63], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 136, 154], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 94, 124, 183], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 179, 181, 182, 183], "produce_qubit": [1, 2, 9, 10, 17, 26, 94, 124, 125], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 86, 91], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 182], "demotwofac": [1, 2, 10, 182], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 62, 65, 83, 84, 87, 88, 89, 92, 96, 120, 130, 135, 148, 156, 157, 171, 178, 187, 188, 189], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 62, 64, 68, 69, 86, 91, 126, 129, 130], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 92, 122, 124, 155, 179, 183], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 94, 124], "quality_factor": [1, 2, 152, 182], "qualityfactor": [1, 2, 18, 83, 152, 182], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 57, 62, 63, 76, 81, 83, 87, 88, 89, 91, 96, 116, 120, 130, 134, 135, 150, 154, 160, 178, 179, 181, 183, 188, 189, 191, 193], "simpl": [1, 2, 13, 83, 85, 113, 120, 130, 131, 166, 182, 186], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 132, 133], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 69, 71, 75, 82, 83, 87, 88, 89, 91, 92, 101, 104, 118, 120, 121, 126, 130, 134, 135, 136, 139, 145, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 166, 168, 170, 172, 177, 180, 181, 182, 187, 189, 190, 192], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 57, 62, 65, 120, 127, 136, 152, 159, 178, 188], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 58, 59, 68, 69, 126, 129, 130], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 58, 59, 62, 63, 64, 68, 69, 74, 75, 78, 82, 83, 84, 85, 91, 95, 96, 97, 100, 103, 108, 116, 120, 121, 122, 123, 124, 125, 126, 129, 130, 137, 143, 144, 148, 151, 152, 154, 158, 159, 164, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 191], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 62], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 183], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 86, 87, 88, 89, 92, 188], "fluxlin": [1, 9, 23, 26, 28, 37, 86, 91, 92, 125], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 82, 128, 144, 160], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 120, 135], "tsv_ellips": [1, 28, 58], "tsvellips": [1, 28, 58, 60], "produce_impl": [1, 28, 37, 58, 60, 164], "create_tsv_connector": [1, 28, 58, 60], "tsv_standard": [1, 28, 58], "tsvstandard": [1, 28, 58, 61], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 62], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 94, 120], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 69, 74, 94, 120, 139, 164, 183], "insert_cel": [1, 26, 28, 37, 75, 94, 120, 125, 139, 151, 164, 181, 183, 188], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 57, 60, 61, 62, 63, 64, 65, 75, 78, 80, 81, 82, 83, 84, 89, 94, 116, 117, 118, 120, 123, 130, 135, 136, 144, 154, 155, 159, 160, 174, 178, 180, 190], "pcell_params_by_nam": [1, 28, 37, 94, 120], "add_port": [1, 28, 37], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 94, 96, 120], "get_lay": [1, 28, 37, 91, 94, 120, 183], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 183], "fingercapacitorsquar": [1, 28, 38, 139, 183], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 62, 113, 148, 178], "smooth_capacitor": [1, 28], "smoothcapacitor": [1, 19, 28, 56, 139], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 57], "rectangular_paramet": [1, 28, 57], "waveguide_composit": [1, 28], "node": [1, 28, 62, 143, 148, 151, 156, 179, 180, 183, 186], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 62, 63, 64, 82, 87, 88, 91, 92, 112, 144, 148, 150, 151, 156, 159, 178, 182, 183], "align": [1, 28, 37, 54, 62, 75, 82, 91, 120, 128, 144, 148, 160, 178, 182, 183], "inst_nam": [1, 9, 10, 28, 37, 62, 75, 120, 148, 160, 183], "angl": [1, 17, 28, 36, 62, 63, 64, 65, 87, 88, 145, 148], "length_befor": [1, 28, 62, 148], "length_incr": [1, 28, 62, 148], "deseri": [1, 28, 62, 146], "nodes_from_str": [1, 28, 62], "waveguidecomposit": [1, 28, 62, 148, 151, 180, 183], "get_segment_cel": [1, 28, 62], "get_segment_length": [1, 28, 62], "produce_fixed_length_waveguid": [1, 28, 62], "snap_point": [1, 28, 62], "check_node_typ": [1, 28, 62], "produce_fixed_length_bend": [1, 28, 62], "waveguide_coplanar": [1, 28, 183], "waveguidecoplanar": [1, 28, 62, 63, 151, 178, 183], "produce_waveguid": [1, 28, 63, 94, 124], "get_corner_data": [1, 28, 63], "produce_end_termin": [1, 28, 63], "is_continu": [1, 28, 63], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 64, 87, 88, 145], "waveguidecoplanarcurv": [1, 28, 64], "create_curve_arc": [1, 28, 64], "produce_curve_termin": [1, 28, 64], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 65], "t_cross_paramet": [1, 28, 65], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 66], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 62, 67], "junction": [1, 5, 9, 10, 13, 23, 26, 81, 87, 88, 89, 90, 91, 118, 120, 125, 129, 130, 131, 159, 160, 164, 172, 174, 183, 187, 188], "manhattan": [1, 5, 10, 13, 23, 26, 68, 69, 71, 89, 91, 125, 130], "produce_manhattan_squid": [1, 68, 70], "produce_tp_smal": [1, 68, 70], "produce_tp_larg": [1, 68, 70], "produce_contact_pad": [1, 68, 70], "manhattan_single_junct": [1, 68], "manhattansinglejunct": [1, 68, 71], "produce_manhattan_junct": [1, 68, 71], "no_squid": [1, 68], "nosquid": [1, 68, 72], "sim": [1, 10, 13, 23, 26, 68, 69, 89, 91, 125, 130, 170, 173, 184, 185, 186, 188, 189], "squid": [1, 10, 13, 23, 26, 68, 69, 70, 72, 73, 86, 89, 90, 91, 92, 118, 125, 130, 160], "layer_config": [1, 172, 183], "default_layer_config": [1, 77, 183], "example_layer_config": [1, 77, 183], "mask": [1, 5, 35, 52, 54, 136, 166, 170, 172, 173, 177, 180, 183, 191], "mask_export": [1, 80], "export_mask_set": [1, 80, 81], "export_design": [1, 80, 81], "export_chip": [1, 80, 81], "export_masks_of_fac": [1, 80, 81], "export_mask": [1, 80, 81], "export_doc": [1, 80, 81], "export_bitmap": [1, 80, 81], "get_mask_layout_full_nam": [1, 80, 81], "export_junction_paramet": [1, 80, 81], "mask_layout": [1, 80, 81, 83, 84, 182], "masklayout": [1, 80, 81, 82, 83, 84], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 59, 62, 69, 75, 80, 81, 82, 83, 84, 94, 95, 96, 97, 108, 114, 116, 117, 120, 122, 123, 124, 125, 130, 135, 144, 145, 152, 154, 155, 156, 158, 160, 164, 170, 172, 173, 178, 179, 181, 182, 183, 187, 188, 189, 190, 192, 193], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 57, 60, 62, 65, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84, 89, 91, 94, 96, 98, 100, 101, 103, 104, 107, 108, 109, 110, 117, 119, 120, 124, 130, 134, 135, 137, 144, 148, 151, 152, 153, 154, 155, 156, 157, 159, 160, 164, 166, 167, 169, 173, 174, 179, 181, 182, 183, 184, 188, 189, 190], "with_grid": [1, 5, 80, 82, 83, 84, 120, 182], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 57, 62, 75, 76, 80, 82, 83, 84, 89, 120, 130, 135, 183], "layers_to_mask": [1, 80, 82, 182], "covered_region_excluded_lay": [1, 80, 82], "chips_map": [1, 80, 82, 83, 84], "align_to": [1, 37, 75, 80, 82, 120, 182, 183], "chips_map_legend": [1, 80, 82, 83], "wafer_rad": [1, 80, 82], "wafer_cent": [1, 80, 82], "chips_map_offset": [1, 80, 82], "wafer_top_flat_length": [1, 80, 82], "wafer_bottom_flat_length": [1, 80, 82], "dice_width": [1, 35, 80, 82], "text_margin": [1, 35, 80, 82], "chip_siz": [1, 80, 82, 182], "edge_clear": [1, 80, 82, 182], "remove_chip": [1, 80, 82], "chip_box_offset": [1, 80, 82], "chip_tran": [1, 80, 82], "mask_name_offset": [1, 80, 82], "mask_name_scal": [1, 80, 82], "mask_name_box_margin": [1, 80, 82], "mask_text_scal": [1, 80, 82], "mask_markers_dict": [1, 80, 82], "mask_marker_offset": [1, 80, 82], "mask_export_lay": [1, 78, 80, 82, 83], "mask_export_density_lay": [1, 80, 82], "submask": [1, 80, 82], "extra_id": [1, 80, 82], "extra_chip": [1, 80, 82], "top_cel": [1, 75, 80, 82, 148, 151, 160, 181, 191], "added_chip": [1, 80, 82], "chips_placed_by_position_label": [1, 80, 82], "chip_copi": [1, 80, 82], "mirror_label": [1, 80, 82], "bbox_face_id": [1, 80, 82, 83, 84], "add_chips_map": [1, 80, 82, 84, 182], "overwrite_chips_by_position_label": [1, 80, 82], "insert_chip": [1, 80, 82], "insert_chip_copy_label": [1, 80, 82], "two_coordinates_to_position_label": [1, 80, 82], "position_label_to_two_coordin": [1, 80, 82], "mask_set": [1, 80, 81, 182], "maskset": [1, 80, 81, 83, 84, 182], "export_drc": [1, 80, 81, 83], "used_chip": [1, 80, 83], "export_path": [1, 80, 83, 105, 156, 182], "add_mask_layout": [1, 80, 83, 182], "add_multi_face_mask_layout": [1, 80, 83, 84], "add_chip": [1, 80, 83, 182], "export": [1, 75, 76, 78, 80, 81, 82, 83, 94, 95, 96, 97, 120, 122, 123, 124, 125, 144, 151, 155, 156, 160, 170, 172, 173, 174, 180, 181, 184, 187, 188, 190, 191, 193], "chips_map_from_box_map": [1, 80, 83], "multi_face_mask_layout": [1, 80], "multifacemasklayout": [1, 80, 83, 84], "qubit": [1, 9, 10, 17, 23, 26, 68, 124, 125, 164, 172, 174, 178, 179, 183, 187, 188, 189], "circular_transmon_single_island": [1, 86], "circulartransmonsingleisland": [1, 86, 87], "concentric_transmon": [1, 86], "concentrictransmon": [1, 86, 88], "double_pad": [1, 86], "doublepad": [1, 86, 89, 90], "double_pads_splin": [1, 86], "doublepadssplin": [1, 86, 90], "produce_squid": [1, 86, 91, 126, 129, 130], "swissmon": [1, 86, 179, 188, 189], "simul": [1, 26, 34, 36, 37, 38, 43, 48, 56, 73, 78, 87, 88, 89, 91, 92, 136, 159, 166, 170, 172, 173, 174, 177, 180, 183, 185, 186, 189, 193], "ansi": [1, 94, 98, 110, 120, 141, 180, 186, 187, 188, 190], "ansys_export": [1, 94, 98, 99, 187, 189], "export_ansys_json": [1, 94, 98, 99, 100], "export_ansys_bat": [1, 94, 98, 99, 100], "export_ansi": [1, 94, 98, 99, 100, 187, 189, 190], "ansys_solut": [1, 94, 98, 99], "ansyssolut": [1, 94, 98, 99, 100, 101], "ansys_tool": [1, 94, 98, 99, 101, 187], "percent_refin": [1, 94, 98, 99, 101, 187], "maximum_pass": [1, 94, 98, 99, 101, 102, 104, 187], "minimum_pass": [1, 94, 98, 99, 101, 102, 104, 187], "minimum_converged_pass": [1, 94, 98, 99, 101, 187], "frequency_unit": [1, 94, 98, 99, 101, 187], "mesh_siz": [1, 94, 98, 99, 101, 102, 104], "simulation_flag": [1, 94, 98, 99, 101, 187], "ansys_project_templ": [1, 94, 98, 99, 101], "get_solution_data": [1, 94, 98, 99, 101, 102, 104], "ansyshfsssolut": [1, 94, 98, 99, 101], "frequenc": [1, 94, 98, 99, 101, 102, 104, 186, 187], "max_delta_": [1, 94, 98, 99, 101, 102, 104, 187], "sweep_en": [1, 94, 98, 99, 101, 187], "sweep_start": [1, 94, 98, 99, 101, 187], "sweep_end": [1, 94, 98, 99, 101, 187], "sweep_count": [1, 94, 98, 99, 101, 187], "sweep_typ": [1, 94, 98, 99, 101, 102, 104, 187], "capacitance_export": [1, 94, 98, 99, 101, 187], "integrate_energi": [1, 94, 98, 99, 101, 102, 104, 187], "integrate_magnetic_flux": [1, 94, 98, 99, 101], "ansysq3dsolut": [1, 94, 98, 99, 101], "percent_error": [1, 94, 98, 99, 101, 102, 104, 187], "ansyseigenmodesolut": [1, 94, 98, 99, 101], "min_frequ": [1, 94, 98, 99, 101, 187], "max_delta_f": [1, 94, 98, 99, 101, 187], "n_mode": [1, 94, 98, 99, 101, 187], "ansyscurrentsolut": [1, 94, 98, 99, 101], "ansysvoltagesolut": [1, 94, 98, 99, 101], "get_ansys_solut": [1, 94, 98, 99, 101], "elmer": [1, 94, 98, 110, 166, 180, 185, 187, 188, 190], "elmer_export": [1, 94, 98, 102, 187, 189], "export_elmer_json": [1, 94, 98, 102, 103], "export_elmer_script": [1, 94, 98, 102, 103], "export_elm": [1, 94, 98, 102, 103, 186, 187, 189, 190], "elmer_solut": [1, 94, 98, 102], "elmersolut": [1, 94, 98, 102, 103, 104], "tool": [1, 55, 63, 94, 96, 98, 102, 104, 120, 155, 170, 171, 172, 174, 178, 179, 180, 187, 188, 189, 192], "max_error_scal": [1, 94, 98, 102, 104], "max_outlier_fract": [1, 94, 98, 102, 104], "is_axisymmetr": [1, 94, 98, 102, 104], "mesh_level": [1, 94, 98, 102, 104], "vtu_output": [1, 94, 98, 102, 104], "elmervectorhelmholtzsolut": [1, 94, 98, 102, 104], "frequency_batch": [1, 94, 98, 102, 104], "london_penetration_depth": [1, 94, 96, 98, 102, 104, 116], "quadratic_approxim": [1, 94, 98, 102, 104], "second_kind_basi": [1, 94, 98, 102, 104], "use_av": [1, 94, 98, 102, 104], "conduct": [1, 94, 98, 102, 104], "nested_iter": [1, 94, 98, 102, 104], "convergence_toler": [1, 94, 98, 102, 104], "max_iter": [1, 94, 98, 102, 104], "elmercapacitancesolut": [1, 94, 98, 102, 104], "p_element_ord": [1, 94, 98, 102, 104], "linear_system_method": [1, 94, 98, 102, 104], "elmercrosssectionsolut": [1, 94, 98, 102, 104], "boundary_condit": [1, 94, 98, 102, 104], "run_inductance_sim": [1, 94, 98, 102, 104], "elmerepr3dsolut": [1, 94, 98, 102, 104, 120], "get_elmer_solut": [1, 94, 98, 102, 104], "sonnet": [1, 94, 98, 180, 190], "parser": [1, 94, 98, 111, 146], "apply_templ": [1, 94, 98, 111, 112], "polygon_head": [1, 94, 98, 111, 112], "symmetri": [1, 94, 98, 111, 112, 161], "box": [1, 5, 18, 19, 35, 52, 55, 75, 82, 83, 91, 94, 96, 98, 104, 111, 112, 116, 117, 120, 121, 128, 130, 147, 150, 155, 159, 174, 178, 179, 180, 182, 183, 190, 191], "refplan": [1, 94, 98, 111, 112], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 62, 65, 87, 88, 89, 91, 92, 94, 95, 97, 98, 104, 109, 111, 112, 113, 120, 121, 122, 123, 124, 125, 130, 155, 159, 178, 179, 180, 183, 187, 189, 190], "control": [1, 17, 90, 94, 98, 111, 112, 113, 139, 145, 146, 157, 167, 168, 169, 170, 173, 183, 184, 186], "polygon": [1, 57, 63, 64, 94, 98, 111, 112, 113, 114, 116, 118, 120, 145, 161, 178, 183, 188, 191], "via": [1, 5, 25, 94, 98, 111, 112, 135, 184, 186, 188], "sonnet_export": [1, 94, 98, 111, 189], "poly_and_edge_indic": [1, 94, 98, 111, 113], "export_sonnet_son": [1, 94, 98, 111, 113, 189], "export_sonnet": [1, 94, 98, 111, 113, 189, 190], "xsection": [1, 94, 96, 98, 120, 177, 180, 187], "xsection_export": [1, 94, 98, 115, 193], "xsection_cal": [1, 94, 98, 115, 116, 193], "create_xsections_from_simul": [1, 94, 98, 115, 116, 193], "separate_signal_layer_shap": [1, 94, 98, 115, 116], "find_layer_by_nam": [1, 94, 98, 115, 116], "free_layer_slot": [1, 94, 98, 115, 116], "visualise_xsection_cut_on_original_layout": [1, 94, 98, 115, 116], "export_and_run": [1, 94, 98, 185], "run_export_script": [1, 94, 98, 105], "run_simul": [1, 94, 98, 105], "export_singular": [1, 94, 98], "remote_export_and_run": [1, 94, 98], "remote_run_onli": [1, 94, 98, 107], "simulation_export": [1, 94, 98, 188, 189], "get_combined_paramet": [1, 94, 98, 108], "copy_content_into_directori": [1, 94, 98, 108], "get_post_process_command_lin": [1, 94, 98, 108], "export_simulation_json": [1, 94, 98, 108], "export_simulation_oa": [1, 94, 98, 108, 189], "sweep_simul": [1, 94, 98, 108, 188], "cross_sweep_simul": [1, 94, 98, 108, 188], "sweep_solut": [1, 94, 98, 108], "cross_sweep_solut": [1, 94, 98, 108], "cross_combin": [1, 94, 98, 108], "simulation_valid": [1, 94, 98], "validate_simul": [1, 94, 98, 109], "simulation_and_solution_types_match": [1, 94, 98, 109], "has_no_ports_when_requir": [1, 94, 98, 109], "has_edgeport_when_forbidden": [1, 94, 98, 109], "flux_integration_layer_exists_if_need": [1, 94, 98, 109], "get_port_nam": [1, 94, 98, 109], "validatesimerror": [1, 94, 98, 109], "solut": [1, 94, 98, 100, 101, 103, 104, 108, 109, 169, 174, 187], "get_paramet": [1, 94, 96, 98, 110, 120], "util": [1, 57, 65, 94, 98, 170, 171, 172, 180, 183, 188, 189], "export_lay": [1, 94, 98, 114], "find_edge_from_point_in_cel": [1, 94, 98, 114], "find_edge_from_point_in_polygon": [1, 94, 98, 114], "get_enclosing_polygon": [1, 94, 98, 114], "airbridges_sim": [1, 94], "airbridgessim": [1, 94, 95], "cross_section_simul": [1, 94, 116], "crosssectionsimul": [1, 94, 96, 103, 116, 187, 188, 190], "register_cell_layers_as_sim_lay": [1, 94, 96], "get_sim_lay": [1, 94, 96], "set_permitt": [1, 94, 96], "get_simulation_data": [1, 94, 96, 120], "empty_simul": [1, 94], "emptysimul": [1, 94, 97], "partition_region": [1, 94, 120], "get_list_of_two": [1, 94, 117], "partitionregion": [1, 94, 104, 117, 120], "limit_box": [1, 94, 117], "limit_fac": [1, 94, 117], "as_dict": [1, 94, 118], "internalport": [1, 94, 118, 120, 159, 188], "get_etch_polygon": [1, 94, 118], "edgeport": [1, 94, 109, 118, 159, 187, 188], "post_process": [1, 94, 100, 103, 108, 189], "postprocess": [1, 94, 100, 103, 108, 119], "get_command_lin": [1, 94, 119], "get_simulation_layer_by_nam": [1, 94, 120], "from_cel": [1, 94, 95, 97, 120, 122, 123, 124, 125, 188, 189], "face_stack_list_of_list": [1, 94, 120], "ith_valu": [1, 94, 120], "face_z_level": [1, 94, 120], "region_from_lay": [1, 94, 120], "simplified_region": [1, 94, 120], "insert_lay": [1, 94, 120], "insert_stacked_up_lay": [1, 94, 120], "insert_layers_between_fac": [1, 94, 120], "create_simulation_lay": [1, 94, 95, 97, 120, 122, 123, 124, 125], "produce_lay": [1, 94, 120], "ground_grid_region": [1, 94, 120], "produce_waveguide_to_port": [1, 94, 120, 183, 188], "etched_lin": [1, 94, 120], "get_port_data": [1, 94, 120], "delete_inst": [1, 94, 120], "visualise_region": [1, 94, 120], "single_element_simul": [1, 94, 188, 189], "get_single_element_sim_class": [1, 94, 121, 159, 188, 189], "single_xmons_full_chip_sim": [1, 94], "singlexmonsfullchipsim": [1, 94, 122], "waveguides_sim": [1, 94], "waveguidessim": [1, 94, 123], "produce_guid": [1, 94, 123], "produce_ground_bump": [1, 94, 123], "xmons_direct_coupling_full_chip_sim": [1, 94], "xmonsdirectcouplingfullchipsim": [1, 94, 124], "produce_launchers_sma8": [1, 94, 124], "xmons_direct_coupling_sim": [1, 94], "xmonsdirectcouplingsim": [1, 94, 125], "test_structur": [1, 172], "junction_test_pad": [1, 126], "junctiontestpad": [1, 13, 91, 126, 129, 130, 131], "junction_test_pads_simpl": [1, 126, 129], "junctiontestpadssimpl": [1, 126, 129, 131], "airbridge_dc": [1, 126], "airbridgedc": [1, 126, 127], "cross_test": [1, 126], "crosstest": [1, 126, 128], "stripes_test": [1, 126], "stripestest": [1, 15, 16, 126, 132], "stripes_test_increasing_width": [1, 126], "stripestestincreasingwidth": [1, 126, 133], "teststructur": [1, 126, 127, 128, 130, 132, 133, 134, 135, 164], "produce_pad": [1, 126, 134], "produce_four_point_pad": [1, 126, 134], "produce_etched_region": [1, 126, 134], "tsv_test_pattern": [1, 126], "tsvtestpattern": [1, 126, 135], "area": [1, 13, 43, 52, 55, 57, 62, 70, 74, 75, 82, 89, 91, 113, 117, 118, 130, 131, 134, 136, 147, 174, 178, 183, 188], "areareceiv": [1, 136, 137], "put": [1, 62, 136, 137, 166, 178, 183], "get_area_and_dens": [1, 136, 137], "count_inst": [1, 136], "count_instances_in_cel": [1, 136, 138], "coupler_lib": [1, 136], "cap_param": [1, 19, 136, 139], "deep_delet": [1, 136], "deep_delete_pcel": [1, 136, 140], "deep_delete_al": [1, 136, 140], "defaults_help": [1, 136], "find_ansys_execut": [1, 136, 141], "depend": [1, 19, 118, 131, 136, 152, 159, 164, 166, 168, 173, 177, 183, 185, 186, 188], "install_kqc_gui_depend": [1, 136, 142], "edit_node_plugin": [1, 136], "editnodeplugin": [1, 136, 143], "create_dialog": [1, 136, 143], "update_node_from_form": [1, 136, 143], "update_form_from_nod": [1, 136, 143], "deselect": [1, 136, 143], "select": [1, 13, 70, 113, 136, 143, 151, 174, 178, 179, 181, 182, 183, 188, 193], "activ": [1, 75, 136, 143, 144, 170, 173, 180, 186, 187], "deactiv": [1, 136, 143], "mouse_click_ev": [1, 136, 143], "mouse_moved_ev": [1, 136, 143], "has_tracking_posit": [1, 136, 143], "tracking_posit": [1, 136, 143], "updat": [1, 37, 120, 136, 143, 164, 168, 173, 177, 178, 181, 187, 193], "editnodepluginfactori": [1, 136, 143], "create_plugin": [1, 136, 143], "export_help": [1, 136, 188, 189], "generate_probepoints_json": [1, 136, 144], "generate_probepoints_from_fil": [1, 136, 144], "create_or_empty_tmp_directori": [1, 105, 136, 144, 189], "get_simulation_directori": [1, 136, 144], "get_active_or_new_layout": [1, 136, 144, 188, 189], "write_commit_reference_fil": [1, 136, 144], "write_export_machine_versions_fil": [1, 136, 144], "open_with_klayout_or_default_appl": [1, 136, 144, 189], "get_klayout_vers": [1, 136, 144], "export_drc_report": [1, 136, 144], "geometry_help": [1, 136], "vector_length_and_direct": [1, 136, 145], "point_shift_along_vector": [1, 136, 145], "get_direct": [1, 136, 145], "get_angl": [1, 136, 145], "get_cell_path_length": [1, 136, 145], "get_object_path_length": [1, 136, 145], "simple_region": [1, 136, 145], "region_with_merged_point": [1, 120, 136, 145], "region_with_merged_polygon": [1, 120, 136, 145], "merge_points_and_match_on_edg": [1, 136, 145], "is_clockwis": [1, 136, 145], "circle_polygon": [1, 136, 145], "arc_point": [1, 136, 145], "bspline_point": [1, 136, 145], "bezier_point": [1, 136, 145], "geometry_json_encod": [1, 136], "geometryjsonencod": [1, 136, 146], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 113, 116, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 139, 141, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 159, 164, 166, 169, 172, 173, 174, 178, 179, 182, 183, 184, 187, 188, 189, 192, 193], "geometryjsondecod": [1, 136, 146], "encode_python_obj_as_dict": [1, 136, 146], "decode_dict_as_python_obj": [1, 136, 146], "groundgrid": [1, 136], "make_grid": [1, 136, 147], "gui_help": [1, 136], "get_nodes_near_posit": [1, 136, 148], "node_to_text": [1, 136, 148], "node_from_text": [1, 136, 148], "replace_nod": [1, 136, 148], "get_all_node_el": [1, 136, 148], "get_valid_node_el": [1, 136, 148], "import_help": [1, 136], "module_from_fil": [1, 136, 149], "label": [1, 5, 35, 37, 65, 75, 82, 120, 136, 156, 163, 182], "labelorigin": [1, 136, 150], "bottomleft": [1, 136, 150], "bottomright": [1, 136, 150], "topleft": [1, 136, 150], "topright": [1, 136, 150], "produce_label": [1, 136, 150], "layout_to_cod": [1, 136], "convert_cells_to_cod": [1, 136, 151], "get_node_param": [1, 136, 151], "extract_pcell_data_from_view": [1, 136, 151], "restore_pcells_to_view": [1, 136, 151], "library_help": [1, 136, 164, 171, 183], "load_librari": [1, 136, 152], "get_library_path": [1, 136, 152], "delete_all_librari": [1, 136, 152], "delete_librari": [1, 136, 152], "element_by_class_nam": [1, 136, 152], "to_module_nam": [1, 136, 152], "to_library_nam": [1, 136, 152], "log_rout": [1, 136], "route_log": [1, 136, 153], "merg": [1, 5, 62, 120, 136, 145, 163, 164, 183], "merge_lay": [1, 136, 154], "convert_child_instances_to_stat": [1, 136, 154], "netlist_extract": [1, 136], "export_cell_netlist": [1, 83, 136, 155], "extract_net": [1, 136, 155], "extract_circuit": [1, 136, 155], "netlist_graph": [1, 136], "network_as_graph": [1, 136, 156], "draw_graph": [1, 136, 156], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 101, 103, 104, 105, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 168, 172, 179, 180, 181, 182, 186, 188, 189, 190, 192, 193], "add_parameters_from": [1, 136, 157, 164, 188], "add_paramet": [1, 136, 157, 164, 188], "pdt": [1, 136, 157, 183], "typedoubl": [1, 136, 157, 183], "typeint": [1, 136, 157], "typelist": [1, 136, 157], "typestr": [1, 136, 157], "typeshap": [1, 136, 157], "typeboolean": [1, 136, 157], "typelay": [1, 136, 157], "typenon": [1, 136, 157], "param": [1, 37, 62, 109, 120, 136, 157, 160, 164, 183], "get_al": [1, 136, 157], "plugin_startup": [1, 136], "register_plugin": [1, 136, 158], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 60, 62, 75, 78, 87, 88, 89, 90, 91, 92, 120, 121, 130, 134, 136, 144, 148, 151, 178, 180, 188], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 37, 38, 52, 54, 57, 60, 62, 63, 64, 67, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 89, 91, 96, 101, 104, 109, 114, 116, 117, 118, 120, 128, 130, 132, 133, 134, 135, 136, 137, 145, 150, 154, 155, 159, 160, 172, 174, 177, 178, 179, 180, 181, 188, 193], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 59, 62, 63, 69, 74, 75, 81, 82, 83, 87, 88, 89, 91, 92, 94, 95, 96, 97, 114, 116, 120, 121, 122, 123, 124, 125, 130, 136, 137, 138, 139, 140, 144, 145, 148, 150, 151, 152, 154, 155, 159, 160, 164, 170, 178, 179, 181, 182, 183, 188, 189, 191], "tran": [1, 5, 9, 10, 37, 64, 75, 82, 120, 134, 136, 159, 160, 188], "rec_level": [1, 37, 75, 120, 136, 159, 183], "dict": [1, 5, 62, 82, 91, 101, 103, 104, 130, 136, 144, 146, 152, 159, 160, 188], "item": [1, 120, 136, 146, 156, 159, 174], "kei": [1, 5, 23, 37, 78, 82, 83, 84, 101, 104, 108, 120, 124, 136, 139, 144, 146, 151, 152, 154, 155, 159, 160, 166, 178, 184, 186], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 62, 63, 67, 75, 78, 81, 82, 83, 87, 88, 89, 92, 96, 101, 104, 113, 116, 118, 120, 124, 130, 136, 144, 146, 148, 150, 151, 152, 154, 155, 157, 159, 160, 164, 166, 172, 177, 178, 179, 181, 183, 187, 188, 193], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 136, 159, 188], "refpointtointernalport": [1, 136, 159], "refpointtoedgeport": [1, 136, 159], "waveguidetosimport": [1, 136, 159, 188], "toward": [1, 62, 120, 136, 159, 188], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 60, 61, 65, 82, 87, 88, 89, 92, 116, 120, 121, 134, 136, 151, 159, 161, 164, 182, 183, 188], "use_internal_port": [1, 120, 136, 159, 188], "waveguide_length": [1, 120, 125, 136, 145, 159, 188], "term1": [1, 57, 62, 63, 120, 124, 136, 159], "turn_radiu": [1, 120, 124, 136, 159], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 56, 57, 62, 65, 67, 78, 89, 90, 120, 124, 130, 135, 136, 145, 159], "over_etch": [1, 120, 136, 159], "junctionsimport": [1, 136, 159, 188], "other_refpoint": [1, 136, 159], "replace_junct": [1, 136], "junctionentri": [1, 136, 160], "extract_junct": [1, 136, 160], "place_junct": [1, 136, 160], "get_tuned_junction_json": [1, 136, 160], "copy_one_layer_of_cel": [1, 136, 160], "replace_squid": [1, 136, 160], "convert_cells_to_stat": [1, 136, 160], "symmetric_polygon": [1, 136, 183], "polygon_with_hsym": [1, 136, 161], "polygon_with_vsym": [1, 136, 161, 183], "polygon_with_sym": [1, 136, 161], "klayout_view": [1, 170, 172, 181], "klayoutview": [1, 75, 170, 180], "layout_view": [1, 75, 181], "focu": [1, 75, 181], "show": [1, 75, 132, 133, 156, 170, 174, 178, 179, 181, 182, 183, 188, 189], "close": [1, 52, 63, 75, 100, 145, 151, 174, 182], "cell_view": [1, 75, 181], "active_cel": [1, 75, 181], "clear_lay": [1, 75], "add_default_lay": [1, 75], "create_top_cel": [1, 75], "export_layers_bitmap": [1, 75], "export_all_layers_bitmap": [1, 75], "export_pcell_png": [1, 75, 181], "get_pixel": [1, 75], "get_active_cell_view": [1, 75], "get_active_layout": [1, 75], "get_active_cel": [1, 75], "missinguilibraryexcept": [1, 75], "resolve_default_layer_info": [1, 75], "layer_clust": [1, 172], "layerclust": [1, 76], "main_lay": [1, 76], "extra_lay": [1, 76], "all_lay": [1, 76], "pya_resolv": [1, 164, 172, 183, 188], "is_standalone_sess": [1, 85], "klayout_executable_command": [1, 85], "run": [1, 62, 75, 78, 85, 100, 103, 104, 105, 107, 116, 119, 142, 144, 166, 167, 169, 170, 171, 172, 173, 174, 177, 179, 180, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193], "argument_pars": [1, 93], "run_kqc": [1, 93], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 83, 86, 87, 88, 89, 90, 91, 92, 95, 96, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 148, 150, 151, 152, 154, 155, 156, 157, 160, 167, 168, 177, 178, 179, 181, 183, 188, 191], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 86, 87, 88, 92, 126, 127, 128, 132, 133, 134, 135], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 104, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 143, 146, 148, 150, 151, 152, 157, 159, 160, 164, 165, 167, 174, 177, 180, 181, 187, 189, 190], "consist": [2, 15, 16, 25, 35, 62, 63, 64, 78, 80, 83, 87, 88, 89, 90, 131, 144, 146, 165, 172, 178, 186, 190], "thei": [2, 3, 6, 28, 62, 68, 78, 82, 84, 87, 88, 96, 114, 145, 154, 156, 160, 164, 166, 174, 181, 183, 187], "ar": [2, 3, 5, 6, 20, 23, 28, 30, 33, 37, 49, 62, 63, 64, 65, 68, 75, 78, 80, 82, 83, 84, 91, 96, 98, 101, 104, 105, 107, 109, 113, 116, 117, 120, 124, 126, 134, 136, 138, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 57, 62, 63, 64, 65, 75, 82, 83, 84, 87, 88, 89, 90, 101, 104, 108, 109, 110, 113, 116, 120, 124, 125, 144, 145, 152, 156, 157, 159, 166, 170, 178, 179, 181, 182, 183, 187, 188, 191], "frame": [2, 5, 35, 49, 82, 178], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 69, 74, 75, 78, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 139, 142, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "alwai": [2, 155, 170, 174, 183, 187], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 87, 88, 89, 92, 95, 96, 97, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 135, 146, 151, 164, 165, 170, 171, 174, 181, 183, 187, 188, 189, 193], "place": [2, 5, 18, 28, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 62, 63, 64, 75, 78, 82, 87, 88, 89, 92, 120, 121, 146, 151, 153, 159, 160, 164, 167, 171, 174, 179, 180, 181, 182, 183, 188, 189], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 57, 62, 76, 83, 84, 89, 100, 103, 109, 113, 116, 120, 130, 135, 144, 145, 157, 160, 164, 167, 169, 170, 171, 173, 174, 178, 179, 181, 182, 183, 184, 187, 188, 191], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 68, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 146, 160, 166, 168, 169, 170, 172, 173, 174, 177, 182, 183, 186, 189], "structur": [2, 5, 28, 68, 118, 126, 127, 130, 131, 134, 135, 156, 160, 170, 171, 172, 174, 180, 182, 187, 191], "after": [2, 13, 28, 62, 63, 70, 71, 78, 82, 89, 100, 103, 108, 116, 120, 121, 130, 157, 166, 169, 174, 177, 179, 181, 182, 183, 186, 189], "ad": [2, 19, 37, 62, 75, 82, 108, 118, 119, 120, 124, 144, 145, 150, 151, 155, 156, 157, 164, 166, 180, 188], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 62, 63, 64, 66, 82, 83, 84, 87, 88, 89, 96, 113, 118, 120, 123, 139, 147, 150, 178, 179, 180, 183, 187, 188], "grid": [2, 5, 18, 35, 37, 55, 62, 63, 64, 66, 82, 83, 84, 120, 134, 147, 150, 151, 178, 179, 180, 183], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 62, 63, 64, 75, 76, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 104, 107, 108, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 139, 144, 145, 146, 147, 148, 150, 152, 154, 159, 160, 164, 166, 167, 169, 170, 171, 173, 177, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 57, 62, 63, 64, 89, 120, 130, 134, 135, 147, 150, 153, 154, 172, 178, 182, 183], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 57, 62, 63, 68, 69, 74, 75, 78, 80, 81, 83, 84, 86, 87, 88, 95, 96, 97, 104, 108, 109, 113, 116, 117, 118, 120, 122, 123, 124, 125, 131, 144, 145, 146, 148, 151, 156, 159, 160, 162, 164, 166, 169, 170, 171, 173, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 57, 62, 63, 64, 65, 69, 74, 82, 91, 104, 116, 118, 120, 122, 124, 130, 131, 134, 139, 148, 150, 171, 182, 183, 186, 188, 189, 191, 193], "document": [2, 80, 81, 83, 94, 126, 164, 165, 168, 170, 171, 173, 174, 177, 178, 181, 182, 183, 191], "gener": [2, 5, 13, 30, 37, 55, 60, 63, 68, 69, 74, 75, 80, 82, 83, 84, 86, 89, 91, 96, 105, 116, 120, 126, 130, 145, 147, 148, 151, 155, 157, 160, 166, 167, 170, 172, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 193], "descript": [2, 126, 157, 164, 183, 191], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 168, 170, 171, 173, 176, 177, 187, 188], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 104, 105, 109, 110, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 143, 145, 146, 150, 157, 159, 160, 164, 177, 182, 183, 186, 187, 188], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 62, 63, 64, 75, 78, 82, 83, 84, 91, 101, 103, 104, 108, 109, 116, 120, 121, 127, 131, 139, 144, 145, 146, 148, 151, 155, 156, 157, 159, 160, 161, 164, 169, 170, 173, 174, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193], "On": [3, 6, 169, 173, 179, 183, 184, 185], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 57, 64, 81, 82, 90, 96, 114, 116, 118, 120, 159, 174, 179, 182, 183, 188], "straight": [3, 6, 26, 45, 47, 57, 62, 63, 66, 91, 120, 125, 183], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 57, 82, 117, 120, 130, 135, 160, 161, 193], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 57, 62, 63, 64, 65, 66, 67, 87, 88, 89, 92, 96, 118, 120, 123, 125, 145, 148, 151, 155, 156, 159, 179, 180, 183, 187, 188], "cross": [3, 6, 23, 57, 65, 96, 104, 108, 116, 128, 172, 178, 180, 183, 188, 190], "multipl": [3, 6, 62, 78, 83, 84, 87, 88, 116, 144, 154, 156, 160, 164, 169, 172, 174, 178, 181, 182, 183, 186, 188, 191], "time": [3, 6, 37, 100, 103, 104, 108, 113, 116, 159, 167, 172, 173, 174, 179, 181, 182, 184, 186, 188], "There": [3, 6, 23, 90, 131, 132, 133, 164, 167, 170, 173, 178, 182, 183, 184, 186, 187, 188], "right": [3, 6, 19, 23, 29, 37, 57, 67, 81, 82, 116, 118, 120, 159, 174, 178, 179, 181, 182, 183, 188], "likewis": [3, 6], "do": [3, 6, 37, 62, 78, 104, 120, 151, 165, 166, 169, 170, 171, 179, 181, 182, 183, 185, 186, 187, 188, 189], "ani": [3, 6, 19, 62, 63, 69, 74, 75, 83, 84, 95, 96, 97, 104, 120, 121, 122, 123, 124, 125, 131, 148, 152, 158, 163, 164, 169, 170, 174, 175, 178, 182, 183, 186, 187, 188, 189, 190], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 57, 62, 63, 64, 75, 82, 87, 88, 89, 90, 93, 114, 116, 120, 124, 125, 127, 130, 135, 144, 145, 151, 154, 156, 159, 161, 167, 171, 172, 178, 180, 181, 183, 186, 188, 191], "In": [3, 43, 62, 75, 78, 83, 95, 97, 108, 116, 120, 122, 123, 124, 125, 145, 164, 166, 169, 174, 177, 178, 179, 181, 182, 183, 187, 188, 189], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 57, 60, 61, 62, 63, 64, 65, 72, 73, 82, 87, 88, 89, 90, 91, 92, 118, 120, 130, 134, 135, 145, 155, 159, 179, 182, 188], "arrai": [3, 5, 25, 82, 83, 131, 146, 191], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 57, 82, 83, 84, 96, 101, 116, 120, 130, 144, 155, 160, 164, 169, 171, 172, 177, 178, 182, 183, 186, 187, 188, 189], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 82, 89, 91, 92, 101, 104, 112, 116, 118, 120, 123, 124, 125, 128, 130, 132, 133, 139, 145, 147, 148, 151, 154, 159, 178, 179, 183, 187, 188], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 60, 62, 63, 65, 69, 70, 71, 75, 82, 87, 88, 89, 91, 92, 116, 118, 120, 124, 125, 127, 128, 130, 132, 133, 134, 135, 159, 183, 188], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 83, 87, 88, 89, 92, 127, 128, 131, 132, 133, 135, 138, 148, 151, 154, 183, 188], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 87, 88, 89, 92, 112, 118, 127, 128, 131, 132, 133, 135, 151, 157, 164, 181, 186], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 78, 87, 88, 89, 90, 91, 92, 96, 100, 116, 120, 127, 128, 131, 132, 133, 134, 135, 144, 146, 153, 155, 157, 160, 164, 171, 172, 179, 180, 182, 184, 186, 187, 188, 193], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 92, 94, 95, 96, 97, 100, 103, 104, 116, 117, 118, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 137, 142, 143, 145, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 164, 166, 167, 169, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 57, 62, 63, 64, 82, 87, 88, 89, 90, 95, 101, 104, 107, 112, 114, 116, 118, 120, 123, 127, 128, 130, 132, 133, 135, 145, 146, 148], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 62, 64, 65, 78, 80, 83, 87, 88, 89, 90, 95, 101, 104, 113, 116, 117, 118, 120, 123, 127, 128, 130, 132, 133, 135, 138, 139, 144, 145, 146, 147, 156, 160, 163, 183, 186, 187, 188], "pair": [3, 6, 13, 17, 54, 130, 146, 148, 151, 159, 177, 178], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 62, 65, 67, 87, 88, 89, 92, 101, 104, 120, 124, 128, 130, 135, 145, 147, 148, 162, 169, 170, 173, 186, 187, 188], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 57, 62, 64, 78, 80, 83, 84, 87, 88, 89, 90, 96, 100, 103, 108, 109, 116, 120, 144, 145, 146, 151, 153, 154, 155, 157, 158, 159, 163, 164, 166, 169, 170, 173, 178, 180, 181, 183, 186, 187, 188, 189, 190], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 56, 57, 62, 71, 72, 87, 88, 89, 92, 95, 101, 104, 116, 120, 123, 130, 135, 147, 157, 174, 186, 187], "full": [4, 5, 64, 75, 78, 85, 117, 145, 151, 156, 170, 172, 174, 178, 183, 185, 186, 188, 191], "4": [4, 5, 13, 17, 18, 19, 23, 83, 87, 88, 104, 116, 120, 128, 130, 131, 145, 150, 157, 173, 174, 188], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 57, 62, 127], "n_step": 4, "increment": [4, 5, 13, 62, 133, 148, 160], "step": [4, 13, 15, 16, 62, 130, 145, 147, 160, 169, 173, 174, 179, 181, 182, 184], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 62, 67, 70, 71, 83, 87, 88, 89, 101, 104, 112, 116, 117, 120, 125, 130, 132, 133, 137, 145, 150, 151, 156, 157, 168, 174, 179, 182, 183, 184, 186, 187, 188, 193], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 87, 88, 89, 91, 92, 96, 104, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 161, 178, 179, 181, 187, 192], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 56, 57, 62, 69, 71, 81, 83, 87, 89, 91, 100, 103, 108, 120, 121, 125, 130, 151, 152, 157, 170, 171, 174, 180, 182, 183, 184, 186, 190, 191], "2000": [4, 19, 104, 127, 183], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 87, 88, 89, 91, 92, 96, 101, 104, 116, 117, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 144, 145, 147, 164, 168, 170, 172, 183, 187], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 74, 87, 88, 89, 91, 92, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 159, 183], "pixel": [5, 7, 75, 145, 191], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 62, 63, 64, 150, 178, 179, 183], "dice": [5, 7, 35, 82], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 57, 62, 63, 72, 73, 82, 88, 89, 90, 104, 113, 114, 116, 117, 118, 120, 123, 124, 134, 145, 147, 159, 171, 178, 188], "option": [5, 23, 32, 37, 57, 62, 82, 83, 84, 92, 101, 104, 107, 113, 118, 120, 131, 139, 151, 155, 166, 171, 173, 178, 179, 182, 183, 184, 186, 189, 193], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 60, 62, 63, 65, 75, 81, 82, 83, 84, 87, 88, 89, 92, 96, 103, 105, 107, 108, 116, 120, 137, 145, 146, 148, 151, 152, 154, 157, 160, 164, 165, 166, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 62, 68, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 100, 103, 105, 107, 108, 116, 120, 121, 128, 132, 133, 135, 137, 144, 146, 148, 150, 154, 155, 156, 159, 160, 164, 167, 168, 169, 170, 171, 172, 177, 178, 181, 182, 183, 186, 188, 189, 191, 193], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 57, 60, 61, 62, 178], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 56, 57, 60, 61, 62, 63, 78, 89, 92, 104, 116, 118, 120, 125, 128, 130, 132, 133, 134, 135, 137, 145, 147, 155, 172, 178, 187, 188], "librari": [5, 28, 31, 37, 41, 45, 52, 59, 62, 69, 75, 89, 90, 91, 92, 130, 134, 148, 152, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 191, 192], "superconduct": [5, 37, 116, 134, 172], "quantum": [5, 28, 37, 68, 134, 172, 191], "circuit": [5, 28, 37, 134, 155, 172, 183, 191], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 62, 63, 64, 69, 87, 88, 89, 91, 92, 96, 120, 130, 144, 145, 146, 151, 159, 163, 183, 184, 186, 188, 191], "static": [5, 37, 54, 62, 63, 64, 75, 82, 83, 120, 154, 160, 178, 179], "chip_cel": [5, 81, 82], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 62, 63, 64, 65, 75, 76, 82, 83, 85, 87, 88, 89, 91, 92, 96, 100, 101, 103, 104, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 124, 130, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 156, 157, 159, 160, 161, 181, 182, 183, 188], "dictionari": [5, 23, 37, 57, 65, 78, 82, 83, 84, 96, 101, 104, 108, 110, 118, 120, 124, 139, 146, 152, 154, 155, 156, 157, 159, 183, 188], "assign": [5, 178, 183], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 62, 75, 76, 78, 81, 82, 83, 84, 87, 88, 89, 91, 92, 94, 96, 98, 100, 103, 104, 108, 109, 110, 116, 117, 118, 119, 120, 121, 125, 137, 143, 144, 145, 146, 148, 154, 155, 157, 159, 160, 164, 170, 172, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193], "junction_typ": [5, 9, 10, 13, 23, 26, 69, 70, 71, 72, 73, 74, 89, 91, 125, 130, 160, 188], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 57, 70, 71, 88, 89, 92, 127, 129, 130, 131, 134, 183, 188], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 57, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 82, 83, 89, 91, 96, 101, 104, 105, 107, 108, 119, 120, 121, 123, 125, 130, 131, 135, 139, 144, 146, 148, 151, 152, 153, 155, 156, 159, 182, 183], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 57, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 78, 83, 85, 89, 91, 92, 104, 109, 113, 116, 118, 120, 121, 122, 125, 130, 131, 135, 137, 138, 139, 144, 145, 146, 148, 151, 155, 157, 160, 170, 171, 178, 180, 185, 187, 188, 193], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 62, 63, 65, 67, 69, 74, 75, 78, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 95, 96, 97, 98, 100, 101, 103, 104, 105, 107, 108, 113, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 134, 139, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193], "optic": [5, 15, 16, 128, 132, 133, 172, 191], "lithographi": [5, 15, 16, 120, 128, 132, 133, 191], "call": [5, 37, 56, 62, 83, 95, 96, 97, 108, 116, 117, 120, 122, 123, 124, 125, 137, 146, 152, 154, 155, 164, 171, 174, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191], "overrid": [5, 13, 82, 84, 95, 96, 97, 118, 120, 122, 123, 124, 125, 130, 164, 166, 184], "set": [5, 19, 37, 57, 62, 75, 80, 81, 83, 84, 96, 101, 104, 105, 113, 116, 118, 120, 124, 144, 159, 163, 164, 166, 169, 170, 171, 172, 178, 179, 183, 184, 186, 187, 188, 189], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 62, 63, 75, 78, 81, 83, 87, 88, 89, 91, 92, 96, 101, 104, 116, 117, 118, 119, 120, 121, 128, 130, 131, 132, 133, 135, 144, 145, 146, 149, 150, 152, 154, 157, 159, 160, 164, 166, 182, 183, 186, 187, 188, 190], "pya": [5, 37, 52, 62, 78, 82, 83, 85, 91, 116, 117, 120, 134, 145, 146, 148, 155, 157, 159, 161, 168, 182, 183, 188], "dbox": [5, 75, 91, 116, 117, 120, 182, 183, 188], "within": [5, 34, 36, 37, 38, 43, 48, 56, 62, 87, 88, 89, 92, 104, 131, 160, 170, 171, 177, 190, 192], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 57, 62, 75, 78, 83, 84, 89, 120, 123, 130, 135, 144, 145, 156, 165, 170, 180, 181, 182, 192], "where": [5, 17, 19, 23, 34, 36, 37, 38, 43, 48, 56, 57, 62, 63, 64, 69, 74, 82, 83, 84, 87, 88, 89, 92, 96, 100, 103, 104, 105, 108, 113, 116, 117, 119, 120, 124, 144, 148, 150, 151, 154, 155, 159, 160, 164, 169, 173, 178, 181, 182, 183, 184, 186, 187, 188, 190], "frame_paramet": 5, "r0": [5, 37, 120, 134], "dtran": [5, 52, 64, 82, 121, 161, 183, 188], "toler": [5, 63, 104, 114, 120, 145, 154], "004": [5, 120, 154], "base_metal_gap": [5, 78, 154, 183], "combin": [5, 37, 96, 108, 120, 154, 172, 188], "three": [5, 17, 68, 120, 154, 170, 173, 177, 181, 182, 183, 186, 188], "subtract": [5, 52, 120, 134, 154], "insert": [5, 28, 35, 37, 57, 62, 75, 82, 91, 120, 130, 134, 146, 154, 159, 170, 178, 180, 188], "oper": [5, 37, 62, 144, 154, 169, 170, 173, 178, 186], "base_metal_gap_wo_grid": [5, 91, 128, 130, 132, 133, 154, 155, 174, 178, 183], "base_metal_addit": [5, 154, 183], "ground_grid": [5, 154, 183], "info": [5, 107, 113, 120, 153, 154, 166, 186], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 62, 63, 64, 65, 70, 71, 87, 88, 89, 92, 117, 120, 130, 134, 135, 139, 145, 154, 159, 183, 188], "ignor": [5, 83, 91, 120, 145, 154, 159, 169, 186], "while": [5, 23, 37, 78, 154, 155, 166, 171, 173, 174, 186], "\u00b5m": [5, 17, 35, 57, 62, 72, 73, 87, 88, 89, 91, 113, 120, 154], "possibli": [5, 52, 160, 174, 182, 183], "befor": [5, 37, 62, 63, 75, 83, 117, 120, 148, 158, 169, 178, 189], "get": [5, 62, 75, 96, 116, 137, 146, 155, 157, 164, 166, 167, 169, 170, 171, 172, 173, 177, 181, 184], "specifi": [5, 31, 32, 33, 37, 49, 62, 75, 82, 83, 84, 96, 104, 116, 118, 120, 144, 145, 146, 148, 149, 153, 155, 156, 157, 160, 166, 167, 177, 182, 184, 188, 189], "correctli": [5, 37, 63, 82, 178, 183], "resolv": [5, 82, 168, 183], "integ": [5, 6, 7, 10, 16, 19, 82, 118, 120, 145, 146, 188], "filter_layer_list": 5, "transform": [5, 37, 52, 64, 75, 82, 91, 120, 121, 130, 134, 145, 159, 183], "filter_region": 5, "tupl": [5, 23, 37, 62, 63, 64, 75, 82, 83, 100, 103, 105, 108, 116, 120, 124, 137, 144, 146, 148, 151, 157], "layer_nam": [5, 37, 75, 81, 96, 116, 120], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 62, 63, 65, 87, 88, 89, 104, 120, 124, 125, 128, 134, 135, 145, 148], "filter": [5, 107, 171], "region": [5, 37, 38, 52, 62, 82, 104, 116, 117, 120, 134, 145, 147], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 62, 75, 78, 82, 100, 103, 113, 118, 120, 124, 141, 150, 151, 156, 159, 160, 169, 170, 171, 173, 174, 178, 179, 181, 187, 188, 189], "rotat": [5, 37, 43, 62, 75, 82, 91, 120, 182, 183], "repeat": [5, 119], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 62, 63, 64, 65, 75, 76, 80, 82, 83, 84, 87, 88, 89, 90, 92, 100, 101, 103, 104, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 130, 135, 137, 144, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 166, 169, 170, 174, 177, 179, 183, 187, 188, 189, 190], "dpoint": [5, 37, 62, 63, 75, 82, 91, 114, 116, 118, 120, 134, 144, 145, 148, 150, 155, 159, 182, 183, 188, 193], "degre": [5, 17, 36, 43, 62, 65, 82, 87, 88, 91, 104, 145, 182, 183], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 62, 63, 75, 76, 78, 87, 88, 89, 92, 95, 96, 97, 104, 116, 117, 118, 120, 121, 122, 123, 124, 125, 142, 144, 146, 155, 157, 159, 160, 164, 165, 166, 167, 169, 170, 171, 173, 174, 178, 179, 181, 182, 183, 188, 192], "fill": [5, 96, 113, 163, 174, 178, 179, 183], "bump": [5, 32, 41, 43, 57, 62, 120, 123, 163, 188], "coordin": [5, 17, 37, 55, 62, 64, 75, 82, 89, 104, 116, 120, 134, 156, 159, 182], "mai": [5, 28, 37, 62, 75, 82, 83, 96, 118, 120, 152, 154, 155, 156, 160, 164, 166, 167, 169, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 185, 186], "post": [5, 37, 108, 116, 119, 187, 189, 190], "sampleholder_typ": [5, 14, 183], "launcher_assign": 5, "none": [5, 26, 31, 35, 37, 41, 45, 52, 59, 62, 69, 75, 81, 82, 83, 84, 85, 91, 96, 100, 101, 103, 105, 107, 108, 109, 114, 116, 117, 118, 119, 120, 121, 124, 125, 130, 134, 137, 139, 144, 145, 146, 151, 152, 155, 156, 157, 159, 160, 186, 188], "enabl": [5, 56, 62, 101, 104, 117, 120, 124, 153, 172, 173, 178, 179, 183, 187], "typic": [5, 13, 25, 29, 32, 37, 38, 57, 62, 68, 89, 120, 130, 135, 139, 152, 155, 183, 188, 189, 190], "sampl": [5, 8, 18, 90, 124, 145], "holder": [5, 8, 18, 124], "size": [5, 29, 36, 38, 43, 56, 62, 67, 75, 82, 83, 87, 88, 104, 118, 120, 145, 150, 156, 178, 182, 183], "self": [5, 37, 57, 62, 65, 69, 74, 82, 83, 91, 95, 96, 97, 120, 122, 123, 124, 125, 146, 165, 177, 183, 186, 188], "accordingli": [5, 37, 183], "wrapper": [5, 75, 124, 164], "around": [5, 19, 29, 35, 36, 37, 38, 52, 63, 64, 75, 82, 120, 144, 145, 150, 164, 172, 177, 178, 179, 182, 188], "configur": [5, 13, 20, 27, 43, 75, 77, 78, 82, 109, 130, 131, 164, 171, 180], "mean": [5, 29, 36, 38, 43, 55, 56, 57, 62, 63, 67, 78, 116, 117, 120, 163, 164, 182, 183, 188], "index": [5, 19, 37, 62, 63, 64, 78, 114, 118, 120, 148, 159, 160, 170, 172, 183], "head": [5, 48, 124], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 57, 62, 63, 64, 65, 68, 70, 71, 75, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 101, 104, 105, 107, 108, 114, 116, 118, 120, 122, 123, 124, 125, 130, 134, 137, 138, 141, 144, 145, 148, 149, 150, 152, 153, 155, 157, 159, 160, 163, 164, 166, 167, 169, 170, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193], "n": [5, 13, 25, 29, 32, 37, 38, 57, 62, 64, 87, 88, 89, 112, 120, 130, 135, 145, 146, 155, 171, 183, 186, 187], "launcher_typ": [5, 183], "launcher_width": [5, 20, 183], "launcher_gap": [5, 20, 183], "launcher_ind": [5, 20, 183], "pad_pitch": [5, 183], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 183], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 62, 87, 88, 89, 92, 121, 157, 160, 163, 164, 166, 169, 170, 171, 173, 174, 178, 179, 181, 183, 184, 188, 189, 192], "equal": [5, 117, 145, 151, 156, 187], "distribut": [5, 62, 84, 173], "overridden": [5, 95, 96, 97, 120, 122, 123, 124, 125], "desir": [5, 37, 62, 63, 91, 150, 170, 178, 182, 184, 187, 188], "per": [5, 38, 56, 62, 65, 131, 164, 186, 187], "disabl": [5, 13, 37, 70, 75, 89, 117, 120, 130, 159, 178, 179, 181], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 62, 75, 83, 84, 87, 88, 89, 91, 92, 95, 96, 97, 101, 104, 105, 107, 116, 119, 120, 121, 122, 123, 124, 125, 130, 148, 157, 166, 173, 182, 183, 188, 189, 190], "If": [5, 37, 62, 65, 75, 84, 95, 96, 97, 101, 104, 105, 107, 116, 117, 120, 121, 122, 123, 124, 125, 134, 144, 145, 146, 151, 152, 153, 155, 156, 159, 160, 162, 165, 166, 167, 169, 170, 171, 173, 174, 175, 178, 181, 182, 183, 186, 188, 191, 192, 193], "neither": [5, 75], "rf": [5, 43, 171, 183], "most": [5, 114, 146, 148, 159, 164, 173, 174, 177, 178, 179, 181, 183, 186, 188, 191], "top": [5, 6, 19, 33, 41, 57, 75, 78, 82, 95, 96, 97, 116, 117, 120, 122, 123, 124, 125, 144, 151, 159, 160, 164, 178, 179, 181, 182, 183, 188, 191], "clockwis": [5, 13, 19, 35, 57, 82, 114, 145, 182], "order": [5, 19, 23, 57, 62, 63, 96, 104, 114, 116, 120, 145, 146, 164, 166, 178, 187, 188], "x": [5, 17, 34, 55, 62, 63, 82, 87, 88, 91, 104, 114, 116, 134, 144, 148, 155, 156, 167, 173, 178, 180, 182, 183, 186, 187, 188, 189], "y": [5, 13, 55, 62, 82, 91, 104, 112, 114, 116, 130, 134, 144, 148, 155, 156, 167, 182, 187, 188, 189], "your": [5, 52, 96, 100, 103, 118, 120, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 183, 184, 189], "For": [5, 19, 23, 28, 37, 62, 78, 82, 91, 104, 120, 144, 146, 148, 151, 152, 156, 157, 158, 160, 164, 166, 170, 171, 173, 174, 178, 179, 181, 183, 186, 187, 188, 189], "exampl": [5, 28, 37, 62, 75, 76, 78, 83, 104, 120, 146, 152, 156, 160, 164, 166, 169, 170, 171, 173, 174, 178, 180, 182, 184, 186, 187, 188, 189, 193], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 57, 62, 123, 144, 178, 182, 183, 188], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 62, 75, 83, 85, 87, 88, 89, 91, 92, 101, 114, 120, 121, 130, 144, 145, 151, 155, 157, 159, 160, 164, 167, 169, 173, 174, 177, 178, 180, 182, 183, 184, 190, 192], "axi": [5, 13, 17, 24, 63, 87, 88, 91, 104, 130, 144, 160, 161], "rang": [5, 56, 146], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 57, 59, 62, 63, 74, 89, 90, 91, 104, 112, 120, 123, 125, 128, 130, 132, 133, 135, 145, 179, 183, 188, 189], "delta_i": 5, "x0": 5, "y0": 5, "float": [5, 17, 62, 82, 101, 104, 112, 114, 116, 118, 120, 137, 146, 148, 187, 188], "separ": [5, 13, 37, 70, 71, 75, 83, 89, 90, 96, 104, 116, 120, 130, 146, 148, 151, 152, 154, 171, 173, 174, 178, 179, 183, 184, 188, 189], "along": [5, 57, 104, 160, 193], "dimens": [5, 20, 75, 117, 120, 167, 187, 188], "displac": [5, 91, 183], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 57, 62, 63, 64, 65, 66, 67, 70, 71, 75, 82, 83, 89, 91, 120, 122, 123, 124, 130, 134, 135, 153], "make": [5, 28, 41, 82, 83, 84, 85, 100, 103, 104, 120, 157, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 181, 182, 183, 184, 188, 189, 193], "plane": [5, 36, 38, 39, 52, 87, 88, 120, 178, 179, 182, 183], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 57, 62, 63, 64, 65, 66, 67, 70, 71, 75, 81, 82, 83, 89, 91, 96, 100, 101, 103, 104, 105, 107, 112, 113, 117, 118, 119, 120, 122, 123, 130, 135, 145, 146, 150, 151, 152, 156, 159, 160, 182, 183, 186, 188], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 57, 62, 63, 65, 87, 88, 89, 120, 130, 135, 159], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 56, 57, 63, 83, 84, 101, 135, 145, 166, 167, 181, 188], "silicon": [5, 25, 120, 135, 183, 188, 191], "with_face1_gnd_tsv": 5, "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 57, 62, 96, 123, 124, 125, 128, 130, 132, 133, 148, 150, 152, 170], "300": [5, 6, 48, 49, 57, 87, 88, 120], "edge_from_tsv": 5, "clearanc": [5, 52, 62, 82], "550": [5, 17, 120], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 75, 82, 95, 96, 97, 108, 116, 120, 122, 123, 124, 125, 144, 145, 148, 152, 156, 160, 164, 169, 173, 174, 178, 183, 188, 189], "250": [5, 88, 90], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 120, 188], "bump_grid_spac": 5, "120": [5, 87, 88, 92, 163, 165], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 174, 188, 191], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 57, 62, 63, 64, 65, 75, 78, 80, 81, 82, 83, 84, 87, 88, 90, 92, 96, 101, 104, 116, 120, 125, 131, 134, 144, 145, 148, 151, 152, 154, 155, 156, 160, 164, 169, 170, 171, 174, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193], "1500": [5, 35], "1000": [5, 17, 18, 48, 57, 75, 78, 104, 120, 183], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 187], "squar": [5, 12, 24, 35, 38, 52, 82, 83, 134, 151, 170, 174, 183], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 56, 62, 70, 74, 82, 89, 91, 101, 104, 116, 120, 125, 130, 131, 135, 145, 150, 157, 168, 169, 172, 183, 184, 186, 187, 188], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 81, 82, 91, 130, 150, 160, 161, 182], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 57, 62, 63, 70, 71, 75, 82, 83, 84, 89, 96, 100, 101, 104, 105, 107, 113, 120, 122, 123, 124, 130, 138, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 159, 164, 179, 181, 182, 183, 186, 187, 188], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 57, 62, 92, 135, 183], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 57, 59, 62, 67, 70, 71, 82, 89, 120, 130, 135, 150, 183, 188, 189], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 82], "copi": [5, 35, 37, 62, 82, 108, 151, 161, 164, 183, 184, 189, 190], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 117, 174, 187, 188], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 59, 61, 62, 91, 124, 125, 135, 145, 148, 153, 173, 174], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 63, 83, 89, 90, 108, 114, 119, 120, 132, 133, 135, 145, 148, 163, 167, 169, 170, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 57, 62, 63, 64, 66, 67, 70, 71, 89, 92, 96, 104, 116, 117, 118, 120, 123, 130, 134, 135, 183, 187, 188], "addit": [5, 13, 29, 35, 37, 49, 62, 63, 64, 66, 67, 70, 71, 78, 82, 89, 95, 97, 104, 116, 119, 120, 122, 123, 124, 125, 130, 163, 166, 178, 182, 183, 187], "bound": [5, 35, 55, 62, 82, 91, 117, 120, 130, 147, 150, 155, 178], "10000": [5, 18, 35, 96, 120, 182], "bump_typ": [5, 32, 41, 43, 57, 62], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 57, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 89, 91, 101, 125, 130, 131, 135, 157, 164, 170, 187], "tsv_type": [5, 25, 59, 60, 61, 135], "ellips": [5, 25, 59, 60, 135], "bottom": [6, 33, 41, 57, 72, 73, 78, 82, 116, 117, 120, 159, 164, 179, 182, 183, 188], "transmiss": [6, 18, 63, 135], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 64, 82, 87, 88, 92, 104, 116, 120, 125, 145, 150, 157, 166, 168, 169, 173, 174, 187, 188], "crossing_length": 6, "400": [6, 17, 57, 87, 88, 120, 183], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 60, 61, 62, 70, 82, 88, 89, 90, 91, 116, 117, 120, 134, 144, 145, 148, 155, 159, 164, 169, 178, 182, 183, 186, 187, 188, 189, 193], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 57, 62, 68, 70, 71, 81, 83, 84, 89, 91, 96, 100, 103, 116, 120, 122, 130, 135, 144, 145, 146, 151, 160, 162, 166, 167, 172, 173, 177, 178, 182, 183, 187, 189, 193], "text": [7, 35, 37, 62, 78, 82, 116, 118, 120, 132, 133, 148, 150, 159, 170, 179, 183], "manual": [7, 30, 57, 62, 68, 69, 74, 78, 83, 86, 101, 104, 118, 142, 144, 166, 168, 172, 174, 182, 187, 188, 189, 191], "pattern": [7, 57, 172], "No": [7, 10, 13, 23, 26, 69, 72, 89, 91, 104, 125, 130, 173], "input": [7, 17, 19, 43, 57, 62, 116, 145, 148, 186, 188, 193], "demonstr": [9, 10, 17, 170, 171, 178, 179, 193], "four": [9, 23, 52, 90, 127, 134, 145, 150, 155, 182], "readout": [9, 10, 17, 23, 89, 90], "reson": [9, 10, 17, 18, 19, 23, 48, 57, 122, 178, 187], "probe": [9, 17, 134, 144], "charg": [9, 179], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 120, 188], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 182], "5000": [9, 10, 23, 57, 124, 182, 183], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 182], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 87, 88, 89, 90, 92, 120, 125, 139, 179, 188], "3d": [10, 28, 104, 120, 178, 183, 188], "integr": [10, 28, 101, 103, 104, 109, 177, 178, 180, 183, 190], "multi": [10, 29, 31, 32, 57, 62, 65, 78, 83, 84, 120, 171, 172, 180, 183], "featur": [10, 37, 62, 146, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 190], "dt": 10, "almost": [11, 155, 183], "remov": [11, 34, 52, 82, 83, 120, 123, 144, 145, 152, 153, 157, 160, 167, 169, 170, 172, 183], "ebl": [11, 76, 172, 182], "edge_len": [12, 24], "80": [12, 13, 24, 36, 65, 87, 88, 90], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 67, 87, 88, 89, 90, 91, 132, 133, 186, 188], "pad_width": [13, 71, 89, 130, 134], "500": [13, 19, 25, 34, 48, 50, 57, 62, 89, 104, 127, 130, 135, 183, 188], "junctions_horizont": [13, 130], "horizont": [13, 18, 23, 25, 57, 71, 82, 89, 130, 134, 135, 161], "small_loop_area": 13, "small": [13, 22, 63, 163, 183, 186], "loop": [13, 70, 74, 89, 91, 130], "large_loop_area": 13, "larg": [13, 171, 186], "130": [13, 183], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 70, 71, 89, 92, 130, 139], "15": [13, 87, 88, 128, 188], "junction_width_larg": 13, "08": [13, 125], "junction_width_step_increment_smal": 13, "01": [13, 104, 114, 120], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 182], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 57, 62, 65, 71, 87, 88, 89, 120, 130, 135, 145, 157], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 62, 87, 88, 89, 92, 104, 120, 125, 130, 135, 159, 164, 178, 183], "64": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135, 145, 173], "r": [13, 25, 29, 32, 37, 38, 43, 57, 62, 63, 64, 89, 120, 130, 135, 145, 146, 159, 166, 169, 170, 183, 186, 189, 192], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 57, 62, 63, 64, 71, 82, 87, 88, 89, 92, 120, 130, 135, 145, 159, 183], "protect": [13, 25, 29, 32, 37, 38, 57, 62, 67, 89, 120, 130, 135], "1t1": [13, 25, 29, 32, 37, 38, 57, 62, 78, 82, 83, 89, 120, 123, 130, 135, 144, 174, 178, 182, 183, 188], "2b1": [13, 25, 29, 32, 37, 38, 57, 62, 78, 82, 89, 120, 130, 135, 182, 183, 188], "1b1": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "2t1": [13, 25, 29, 32, 37, 38, 57, 62, 78, 82, 89, 120, 130, 135, 183], "display_nam": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "displai": [13, 25, 29, 32, 37, 38, 57, 62, 75, 89, 120, 130, 135, 178, 181, 182], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 57, 62, 63, 75, 78, 89, 105, 107, 120, 130, 135, 142, 144, 148, 151, 164, 168, 170, 172, 173, 174, 177, 179, 180, 181, 183, 185, 188, 190, 191, 192], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "appli": [13, 25, 29, 32, 37, 38, 57, 62, 64, 75, 82, 83, 84, 89, 104, 117, 120, 121, 130, 134, 135, 164, 178, 188], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 62, 63, 69, 82, 83, 84, 87, 88, 89, 91, 92, 96, 104, 105, 117, 120, 126, 130, 131, 135, 138, 142, 146, 148, 154, 157, 158, 159, 160, 164, 166, 169, 170, 171, 173, 174, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193], "signal": [13, 25, 29, 32, 37, 38, 57, 62, 89, 96, 116, 118, 120, 130, 135, 159, 178, 187, 188], "carri": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "oppos": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135, 188], "group": [13, 25, 29, 32, 37, 38, 57, 62, 68, 78, 89, 112, 113, 120, 130, 135, 144, 147, 174, 178, 183], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "etch": [13, 19, 25, 29, 32, 37, 38, 57, 62, 78, 89, 116, 117, 118, 120, 130, 135], "opposit": [13, 19, 25, 29, 32, 37, 38, 57, 62, 89, 120, 123, 130, 135, 188], "too": [13, 25, 29, 32, 37, 38, 49, 57, 62, 63, 64, 66, 67, 89, 120, 130, 135, 155, 157, 169, 170, 171], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 57, 62, 89, 120, 130, 135], "area_height": [13, 130], "height": [13, 17, 19, 34, 71, 75, 82, 89, 117, 118, 120, 127, 130, 134, 150, 188], "1900": [13, 130], "area_width": [13, 130], "1300": [13, 19, 130], "pad_spac": [13, 130], "only_pad": [13, 130], "pad_configur": [13, 130], "junction_width_step": [13, 130], "automat": [13, 39, 55, 57, 62, 70, 75, 80, 82, 85, 100, 130, 151, 164, 166, 167, 169, 170, 173, 174, 177, 178, 181, 182, 183, 184, 186], "junction_width": [13, 69, 89, 91, 130], "junction_test_pads_typ": [13, 130, 131], "junction_test_pads_paramet": [13, 130], "extra": [13, 19, 29, 33, 45, 62, 63, 65, 69, 82, 89, 91, 113, 130, 150, 160, 173], "_junction_test_pads_paramet": [13, 130], "previou": [13, 45, 62, 69, 89, 91, 130, 145, 169, 170, 178, 181, 182, 183], "state": [13, 45, 69, 89, 91, 130, 184, 186], "_paramet": [13, 37, 45, 69, 89, 91, 130], "mirror_squid": [13, 91, 130], "its": [13, 37, 57, 62, 63, 82, 91, 96, 104, 120, 130, 144, 145, 146, 160, 164, 166, 178, 182, 183, 184], "junction_paramet": [13, 69, 89, 91, 130], "_junction_paramet": [13, 69, 89, 91, 130], "finger_overshoot": [13, 70, 71, 89, 130], "include_base_metal_gap": [13, 70, 71, 89, 130], "shadow_margin": [13, 70, 71, 89, 130], "shadow": [13, 70, 71, 89, 130], "compact_geometri": [13, 70, 89, 130], "compact": [13, 70, 89, 130, 146], "geometri": [13, 34, 36, 37, 38, 43, 48, 52, 56, 60, 61, 70, 87, 88, 89, 91, 92, 95, 96, 97, 116, 117, 120, 122, 123, 124, 125, 130, 155, 160, 163, 172, 174, 178, 180, 181, 183, 187, 190, 191, 193], "separate_junct": [13, 70, 71, 89, 130], "offset_compens": [13, 70, 71, 89, 130], "lead": [13, 38, 56, 70, 71, 89, 104, 130, 159, 169, 186, 188], "offset": [13, 62, 70, 71, 82, 89, 92, 130], "mirror_offset": [13, 70, 71, 89, 130], "move": [13, 55, 62, 70, 71, 89, 91, 130, 145, 166, 174, 178, 179], "finger_overlap": [13, 70, 71, 89, 130], "insid": [13, 36, 56, 57, 62, 70, 71, 89, 96, 101, 104, 116, 118, 120, 130, 146, 151, 159, 174, 178, 181, 182, 183, 188, 191], "single_junct": [13, 70, 89, 130], "second": [13, 17, 32, 37, 43, 70, 89, 104, 107, 116, 120, 130, 145, 183, 184, 186, 189], "predefin": [14, 63, 178], "sma8": [14, 18, 124, 183], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 132, 133], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 168, 172, 173, 183], "circular": [17, 36, 61, 82, 87, 146], "island": [17, 36, 87, 88, 89, 90, 91, 92, 187, 188], "drivelin": [17, 87, 88, 89, 90], "11500": 17, "12700": 17, "8000": [17, 112], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 62, 139, 155, 178, 183], "32": [17, 87, 88], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 87, 88], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 87, 88], "30": [17, 18, 25, 59, 60, 66, 87, 88, 101, 127, 135, 183, 187], "50": [17, 25, 35, 89, 112, 118, 151, 159], "couplers_arc_amplitude_qb1": 17, "angular": [17, 87, 88], "extens": [17, 87, 88, 118, 120, 167, 168, 173, 184, 187], "25": [17, 32, 41, 57, 188], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 87, 88], "drive_line_offset": 17, "end": [17, 29, 32, 55, 57, 62, 63, 64, 100, 103, 107, 117, 120, 123, 159, 160, 166, 167, 178, 181, 182, 187, 188], "drive": [17, 87, 88, 89, 124], "ground_gap": [17, 36, 56, 87, 88, 89], "1400": 17, "900": [17, 183], "coupler_ext": [17, 89], "150": [17, 87, 89, 92, 183], "island1_ext": [17, 89], "first": [17, 18, 23, 37, 43, 57, 62, 63, 75, 78, 89, 116, 119, 120, 145, 157, 159, 164, 167, 169, 170, 172, 173, 178, 180, 182, 183, 185, 186, 188, 189], "island2_ext": [17, 89], "drive_posit": [17, 89], "1100": 17, "island_island_gap": [17, 89], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 56, 62, 67, 100, 103, 104, 156, 186, 191, 193], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23], "planar": [18, 19, 96], "l_finger": [18, 19, 23], "23": [18, 19, 23], "9": [18, 19, 23, 173, 182, 183], "14": [18, 19, 23, 25, 169, 170], "28": [18, 19, 158, 170, 173], "type_coupl": [18, 19, 23], "interdigit": [18, 19, 23, 139], "n_ab": [18, 127], "res_term": 18, "termin": [18, 57, 62, 63, 64, 107, 120, 123, 159, 169, 170, 173, 182, 184, 187, 188], "galvan": [18, 41], "res_beg": 18, "begin": [18, 57, 64, 133, 182, 184], "res_a": [18, 19, 48], "res_b": [18, 19, 48], "12": [18, 19, 29, 67, 71, 89, 92, 101, 187], "tl_airbridg": 18, "res_airbridge_typ": 18, "rectangular": [18, 29, 31, 33, 49, 57, 62, 63, 64, 65, 82, 92, 182], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 63, 64, 145], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 62, 63, 188], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 62, 69, 74, 85, 104, 110, 120, 159, 164, 167, 171, 182, 186, 188, 189], "max_res_len": 18, "exceed": 18, "becom": [18, 62, 78, 119, 181, 188], "1e": [18, 104, 116, 125], "ground_grid_in_trac": [18, 55, 62, 63, 64, 66], "trace": [18, 29, 48, 49, 62, 63, 64, 66, 67, 118], "border": [18, 120], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 57], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 57, 178], "attach": [19, 82, 152, 182], "pl_": 19, "_t_port_c": 19, "identifi": [19, 83, 105, 155, 156, 163, 182, 183, 184], "long": [19, 163, 170, 183, 186, 187, 188], "same": [19, 23, 36, 37, 38, 55, 62, 75, 82, 83, 84, 96, 116, 120, 145, 151, 154, 155, 156, 157, 160, 164, 169, 170, 171, 174, 178, 181, 182, 183, 184, 186, 188], "wai": [19, 22, 37, 62, 83, 84, 114, 116, 159, 164, 170, 172, 173, 174, 177, 178, 182, 183, 188, 189], "direct": [19, 22, 32, 33, 37, 49, 62, 63, 82, 91, 117, 120, 124, 138, 145, 148, 159, 178, 183, 188], "_corner": [19, 159], "cpw": [19, 25, 135], "exclud": [19, 157], "finger_control": [19, 56], "solid": [19, 187], "twofac": 19, "ground_grid_avoid": [19, 37, 91, 183], "counter": [19, 57, 145], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 146], "800": [19, 57], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 179], "bridge_spac": [19, 57], "parametr": [20, 172, 178], "connect": [20, 22, 23, 38, 43, 49, 50, 57, 63, 87, 88, 113, 118, 120, 131, 134, 151, 178, 179, 183, 188], "pairwis": 20, "coplanar": [20, 43, 62, 63, 64, 66, 67, 156, 178, 183, 187], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 57, 62], "launcher_pitch": 20, "pitch": [20, 25, 135], "635": 20, "160": [20, 179], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 63, 75, 178, 181, 183, 188, 189], "coupl": [23, 48, 179, 187], "half": [23, 90, 183], "abov": [23, 57, 120, 151, 170, 171, 174, 178, 179, 181, 186, 187, 189, 190], "below": [23, 29, 57, 117, 120, 138, 151, 160, 162, 169, 177, 181, 182, 183, 184, 186, 187, 188, 190], "chargelin": [23, 92], "whose": [23, 151, 154], "upper": [23, 117, 188], "six": 23, "5400": [23, 182], "5500": [23, 182], "use_test_reson": [23, 122], "test_res_length": 23, "5600": [23, 182], "5800": 23, "metrologi": 25, "segment": [25, 57, 62, 63, 64, 66, 67, 120, 178], "crossect": 25, "analysi": [25, 101, 113, 187], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 135], "placehold": [25, 135, 182], "hor_dist": [25, 135], "ver_dist": [25, 135], "tsv_diamet": [25, 59, 135], "diamet": [25, 32, 41, 57, 59, 135], "tsv_margin": [25, 59, 135], "tsv_elliptical_width": [25, 60, 135], "ellipt": [25, 60, 135], "pos_start": [26, 124], "end_i": [26, 124], "c_kappa_l_fing": 26, "dedic": [26, 116, 120, 125, 188, 190], "function": [26, 31, 37, 45, 56, 57, 62, 65, 69, 74, 78, 81, 83, 85, 91, 94, 96, 105, 109, 116, 117, 120, 121, 124, 125, 137, 139, 142, 145, 146, 148, 154, 155, 157, 160, 163, 164, 165, 171, 180, 182, 183, 186, 187, 188, 190], "also": [26, 28, 37, 49, 55, 62, 63, 64, 66, 75, 82, 83, 84, 85, 86, 91, 92, 103, 110, 120, 125, 130, 132, 133, 134, 138, 144, 145, 146, 151, 152, 153, 155, 157, 160, 164, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 184, 186, 187, 188, 190, 192], "assum": [26, 63, 64, 75, 83, 120, 125, 173, 179, 187, 188], "follow": [26, 57, 62, 63, 75, 78, 80, 81, 95, 96, 97, 120, 122, 123, 124, 125, 145, 146, 151, 152, 156, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193], "attribut": [26, 37, 81, 118, 125, 157, 164, 165], "arm_width_a": [26, 124, 125], "arm_width_b": [26, 124, 125], "qubit_spac": [26, 124, 125], "fluxline_typ": [26, 45, 46, 47, 91, 125, 188], "rr_cpl_width": [26, 125], "arm": [26, 38, 91, 92, 124, 125, 128, 130, 183], "24": [26, 92, 124, 125], "rr": [26, 125], "qb": [26, 125], "um": [26, 92, 118, 120, 125, 150, 156], "file": [27, 37, 68, 75, 76, 78, 80, 81, 82, 83, 100, 101, 103, 104, 105, 108, 113, 116, 119, 120, 142, 144, 149, 153, 155, 156, 160, 162, 164, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192], "thing": [27, 80, 164, 174, 183, 186], "path": [27, 57, 62, 63, 75, 81, 85, 100, 101, 103, 105, 108, 113, 116, 119, 124, 144, 145, 149, 152, 155, 156, 166, 170, 171, 173, 177, 178, 183, 184, 185, 186, 189, 193], "sub": [27, 37, 62, 63, 70, 82, 91, 117, 120, 160, 164, 178, 182], "repres": [28, 62, 63, 64, 69, 74, 75, 80, 82, 83, 84, 116, 172, 181, 188], "form": [28, 62, 96, 101, 104, 110, 114, 120, 151, 163, 164], "being": [28, 78, 169, 183], "pcelldeclarationhelp": [28, 37, 164], "load": [28, 68, 83, 86, 89, 90, 92, 149, 152, 156, 160, 164, 181, 182, 183], "klayout": [28, 62, 63, 75, 78, 85, 116, 120, 142, 144, 151, 152, 153, 155, 158, 164, 166, 167, 169, 170, 172, 174, 177, 178, 179, 180, 182, 183, 188, 190, 191, 192], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 62, 63, 68, 69, 74, 75, 86, 87, 88, 89, 91, 92, 96, 130, 146, 151, 160, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 188, 189, 191, 192], "share": [28, 91, 120, 145, 186], "them": [28, 96, 101, 155, 164, 169, 170, 171, 174, 177, 178, 182, 183, 188], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 62, 63, 75, 78, 82, 83, 84, 86, 87, 88, 89, 92, 101, 116, 120, 144, 145, 151, 152, 155, 157, 160, 164, 166, 167, 169, 170, 171, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 187, 188, 193], "easi": [28, 169, 171, 172], "support": [28, 36, 62, 75, 98, 103, 104, 113, 144, 146, 170, 172, 173, 178, 183, 184, 186, 187, 188, 190, 193], "concept": [28, 178, 181, 183, 188], "belong": [28, 78, 155, 183], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 76, 82, 83, 87, 88, 89, 92, 120, 169, 170, 171, 183, 188], "determin": [28, 37, 52, 62, 63, 82, 83, 100, 101, 104, 120, 134, 151, 153, 159, 160, 182, 183, 184, 187, 188], "actual": [28, 31, 45, 62, 63, 64, 69, 74, 82, 83, 91, 98, 166, 170, 174, 181, 182, 183, 188, 193], "refer": [28, 35, 36, 37, 38, 39, 75, 78, 81, 87, 88, 120, 144, 145, 146, 159, 162, 164, 169, 170, 171, 178, 181, 183, 189], "taper": [29, 39, 49, 62, 67, 89], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 78, 164, 178, 182], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 88, 120, 188], "adjac": [29, 62, 120, 145, 147], "bridg": [29, 31, 32, 33, 55, 57, 62, 65, 95, 183], "waveguide_extra": 29, "taper_length": [29, 39, 62, 67], "31": [29, 67, 146], "41592653589793": [29, 67], "m2": [29, 67, 173], "a2": [29, 36, 37, 38, 43, 56, 62, 65, 67], "non": [29, 36, 38, 43, 55, 56, 57, 62, 67, 101, 116, 120, 145, 146, 163, 187, 188], "b2": [29, 36, 37, 38, 43, 56, 62, 65, 67], "add_met": [29, 49, 62, 63, 64, 66, 67], "add": [29, 32, 37, 49, 55, 60, 62, 63, 64, 66, 67, 75, 82, 83, 95, 97, 104, 113, 116, 120, 122, 123, 124, 125, 134, 157, 164, 166, 174, 179, 182, 183, 184, 188, 189], "airbridge_typ": [29, 31, 32, 33, 57, 62, 65], "bridge_width": [29, 31, 32, 57], "pad_length": [29, 31, 32, 57], "22": [29, 71, 89, 166, 169, 173], "bridge_length": [29, 31, 57, 183], "60": [29, 39, 87, 88], "without": [31, 45, 57, 62, 69, 74, 75, 82, 85, 91, 114, 120, 131, 170, 171, 173, 174, 178, 182, 183, 184, 186, 188, 192], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 62, 83, 84, 87, 88, 89, 91, 92, 96, 101, 104, 120, 146, 157, 180, 187, 189, 190], "otherwis": [31, 32, 33, 37, 62, 63, 75, 95, 97, 105, 107, 117, 120, 121, 122, 123, 124, 125, 146, 152, 160, 169, 173, 178, 188], "user": [31, 32, 33, 37, 60, 62, 75, 83, 91, 107, 163, 166, 167, 169, 170, 172, 173, 177, 182, 183, 184, 186, 188], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 59, 62, 69, 87, 88, 89, 92, 96, 120, 130, 157, 164, 188], "18": [31, 45], "44": [31, 57, 183], "equival": [32, 62, 146], "origin": [32, 33, 37, 41, 60, 61, 64, 65, 72, 73, 75, 82, 116, 120, 145, 150, 183], "geometr": [32, 33, 41, 60, 61, 145, 172], "include_bump": [32, 57], "ubm_diamet": [32, 41, 57], "under": [32, 37, 41, 57, 75, 83, 118, 120, 152, 166, 169, 174, 177, 178, 181, 183], "bump_diamet": [32, 41, 57], "part": [33, 48, 49, 57, 83, 91, 92, 104, 117, 118, 120, 130, 145, 169, 178, 179, 181, 182, 183, 186], "port_a": [33, 37, 62], "port_b": [33, 37, 62, 183], "closest": [33, 35, 114, 120, 134, 144, 151, 188], "pad_extra": 33, "capacit": [34, 56, 89, 90, 101, 104, 118, 125, 159, 180, 186, 188, 190], "fem": [34, 186], "comput": [34, 68, 113, 145, 184, 186, 187], "when": [34, 36, 37, 38, 43, 48, 56, 62, 63, 75, 82, 87, 88, 89, 92, 104, 107, 109, 116, 117, 118, 120, 144, 159, 160, 163, 164, 166, 167, 170, 173, 178, 181, 182, 183, 184, 186, 188, 191], "best": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 170, 173, 183], "practic": [34, 36, 37, 38, 43, 48, 56, 62, 87, 88, 89, 92, 164, 177, 188], "effect": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 101, 120, 121, 124, 150, 169, 171, 187], "serv": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92], "deriv": [34, 36, 37, 38, 43, 48, 56, 62, 87, 88, 89, 92, 138, 145, 164, 183], "noth": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 157, 181], "els": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 146], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 87, 88, 89, 92, 96, 120, 139, 157, 188], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 75, 87, 88, 89, 92, 100, 103, 116, 146, 151, 162, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 62, 63, 76, 78, 85, 87, 88, 89, 92, 94, 96, 119, 142, 144, 145, 156, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "decid": [34, 36, 37, 38, 43, 48, 56, 87, 88, 89, 92, 188], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 80, 83, 182], "either": [34, 37, 57, 68, 69, 74, 75, 78, 83, 84, 86, 120, 131, 145, 159, 169, 178, 183, 188, 190], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 56], "finger_gap": [34, 38, 39, 56], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 75, 81, 103, 108, 116, 119, 120, 134, 171, 183], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 178], "outer": [36, 49, 82, 88, 134], "semi": 36, "fix": [36, 38, 56, 62, 120, 171, 173], "imped": [36, 87, 88, 118], "r_inner": [36, 88], "r_outer": [36, 88], "extern": [36, 88, 172, 177, 180, 183, 188, 189], "swept_angl": 36, "cover": [36, 52, 82, 117, 120, 139, 147, 159, 171, 178, 182, 187], "180": [36, 43, 62, 65, 88], "outer_island_width": [36, 88], "fixed_length": [36, 38, 56], "auto": [36, 38, 56, 183], "cell_transf": [37, 120], "extract": [37, 151, 155, 159, 160], "specif": [37, 52, 62, 69, 74, 75, 80, 81, 82, 83, 96, 109, 120, 146, 159, 162, 164, 166, 169, 170, 173, 174, 178, 181, 183, 188, 189, 190], "convert": [37, 62, 82, 120, 146, 148, 151, 152, 154, 155, 159, 160, 177, 179, 180], "target": [37, 62, 137, 159, 170, 173], "system": [37, 78, 144, 159, 166, 169, 170, 173, 174, 180, 186, 189], "recurs": [37, 75, 120, 146, 154, 159], "level": [37, 75, 117, 120, 144, 146, 151, 159, 163, 164, 171, 177, 178, 181, 183, 186, 193], "look": [37, 75, 119, 120, 152, 159, 169, 172, 183], "subcel": [37, 62, 75, 91, 120, 130, 159, 183], "behav": 37, "like": [37, 62, 69, 74, 83, 146, 157, 164, 166, 167, 170, 171, 173, 174, 178, 182, 183, 186, 187], "target_cel": 37, "label_tran": [37, 75, 120], "note": [37, 57, 62, 75, 82, 83, 148, 158, 164, 166, 169, 170, 171, 172, 178, 182, 183, 184, 186, 192], "To": [37, 83, 84, 85, 101, 104, 124, 146, 166, 167, 169, 173, 174, 178, 181, 182, 183, 186, 187, 188, 192, 193], "inherit": [37, 164, 183, 188], "It": [37, 62, 63, 75, 82, 83, 84, 85, 91, 120, 130, 146, 164, 166, 169, 170, 171, 172, 173, 174, 178, 179, 183, 185, 186, 188, 189], "directli": [37, 62, 75, 120, 171, 177, 178, 182, 183, 186], "take": [37, 75, 96, 116, 120, 121, 146, 157, 159, 169, 178, 179, 186, 187, 189, 190, 193], "provid": [37, 75, 84, 94, 120, 146, 166, 178, 181, 187, 188, 193], "keyword": [37, 52, 62, 75, 83, 84, 95, 96, 97, 120, 122, 123, 124, 125, 188], "placement": [37, 52, 75, 82, 120, 124, 160, 167], "parent": [37, 75, 120, 124, 160, 164], "allow": [37, 62, 63, 75, 82, 91, 101, 104, 120, 130, 146, 164, 170, 172, 173, 174, 178, 186, 187, 192], "possibl": [37, 52, 57, 62, 63, 75, 83, 91, 120, 131, 157, 164, 166, 169, 170, 174, 178, 183, 184, 186, 187, 189, 191], "instanc": [37, 52, 62, 75, 83, 84, 101, 104, 120, 138, 139, 143, 148, 151, 154, 155, 156, 160, 164, 169, 170, 178, 179, 181, 183, 187, 188, 189, 190, 191], "properti": [37, 60, 75, 82, 84, 96, 120, 156, 157, 160, 164, 177, 178, 179, 181, 183], "rel": [37, 75, 91, 100, 101, 104, 120, 130, 150, 152, 159, 164, 183, 187], "dvector": [37, 75, 82, 91, 120, 145], "must": [37, 62, 63, 75, 117, 120, 145, 148, 158, 159, 160, 169, 170, 174, 181, 183, 186, 187, 188, 189, 192], "default_fac": [37, 78, 183], "doe": [37, 62, 151, 166, 169, 174, 178, 186, 190, 193], "necessarili": [37, 63], "subtyp": 37, "abstract": [37, 96, 120, 164], "care": [37, 145, 169, 171], "str": [37, 62, 82, 100, 101, 103, 104, 106, 107, 110, 112, 116, 118, 120, 121, 137, 144, 146, 148, 151, 152, 157, 160], "indic": [37, 78, 120, 159, 183, 187, 188], "refpoint_transform": 37, "conveni": [37, 62, 82, 85, 120, 185, 188], "new": [37, 75, 95, 96, 97, 108, 120, 122, 123, 124, 125, 137, 143, 144, 148, 152, 157, 160, 163, 164, 169, 170, 171, 174, 178, 179, 180, 182], "present": [37, 109, 120, 160, 166, 169, 173], "avail": [37, 75, 91, 116, 120, 164, 170, 174, 178, 183, 186, 187, 189, 193], "give": [37, 104, 120, 169, 173, 174, 183, 187], "current": [37, 75, 85, 98, 101, 113, 120, 144, 173, 178, 180, 182, 183, 184, 188], "po": [37, 124, 134], "well": [37, 114, 145, 160, 182, 188, 193], "netlist": [37, 83, 155, 156, 177, 182], "Will": [37, 116], "decor": [37, 157, 164, 188], "annot": [37, 60, 63, 64, 78, 167, 177, 183], "evalu": 37, "replac": [37, 82, 83, 148, 160, 169, 182, 189], "mark": [37, 78, 181], "go": [37, 75, 120, 162, 166, 167, 179, 181, 183, 188, 192], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 108, 120, 151, 164, 172, 174, 182, 183, 184, 186, 191], "expos": [37, 62, 85, 181], "renam": 37, "nopar": [37, 96, 120], "abstract_class": [37, 96, 120], "ancestor": [37, 96, 120, 164], "up": [37, 96, 100, 101, 103, 104, 118, 120, 147, 152, 158, 159, 164, 169, 170, 171, 172, 178, 181, 183, 186, 187, 188, 190], "draw": [37, 60, 62, 156, 170, 172, 174, 177, 183, 188, 189], "error_msg": 37, "error": [37, 100, 103, 104, 108, 109, 113, 153, 166, 169, 172, 173, 174, 178, 181, 183], "rais": [37, 62, 108, 109, 146, 148, 160, 181], "valueerror": [37, 62, 146, 148], "messag": [37, 75, 109, 163, 173, 174], "pure": [37, 187], "doesn": [37, 96, 120, 178, 188], "t": [37, 43, 62, 65, 78, 96, 109, 120, 146, 164, 166, 169, 170, 173, 178, 183, 186, 188], "dpolygon": [37, 117, 161, 183], "etc": [37, 62, 78, 116, 120, 155, 160, 164, 169, 174, 183, 191], "primari": [37, 169, 187], "abc": 37, "syncronis": 37, "json": [37, 81, 100, 103, 108, 116, 119, 144, 146, 155, 156, 160, 186, 187, 189, 193], "represent": [37, 62, 82, 145, 146, 186], "sever": [37, 62, 75, 146, 164, 169, 174, 178, 182, 183, 188, 189, 190], "editor": [37, 85, 169, 170, 173, 174, 177, 179, 181, 182, 183, 189, 192], "particularli": [37, 157], "figur": [37, 156, 188], "out": [37, 75, 107, 120, 151, 159, 169, 170, 173, 182, 183, 184, 187], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 91], "Or": [37, 83, 85], "consid": [37, 63, 82, 96, 116, 145, 148, 170, 187, 188], "descend": [37, 154, 164], "common": [37, 52, 94, 108, 172, 173, 181, 189], "respect": [37, 62, 117, 118, 120, 128, 150, 161, 188], "adjust": [37, 39, 62, 178], "_port": 37, "orient": [37, 62, 160], "output_rot": [37, 43, 62], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 75, 180, 190], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 163, 169, 173], "match": [41, 83, 84, 109, 174, 184, 189], "contact": [41, 144], "over": [41, 62, 84, 101, 104, 120, 151, 157, 166, 169, 181, 187, 188], "inter": [42, 43], "output": [43, 62, 103, 104, 116, 137, 146, 148, 151, 153, 166, 170, 177, 183, 184, 186, 187, 189, 190, 193], "chosen": [43, 55, 57, 75, 109, 178, 184, 186], "inter_bump_dist": [43, 62], "w": [43, 57, 62, 63, 124], "connector_a": [43, 57, 62], "connector_b": [43, 57, 62], "round_connector": [43, 57, 62], "round": [43, 57, 62, 71, 89, 92, 104, 120, 183], "n_center_bump": [43, 62], "seri": [43, 62, 90, 95, 189], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 91], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": 48, "total": [48, 55, 62, 72, 73, 91, 104, 120, 127, 137, 145, 186, 187], "ground_width": 48, "middl": [48, 62, 120, 121, 182, 188], "wirebond": [49, 50], "west": [49, 92, 144], "east": [49, 92, 144], "scale": [49, 82], "a_launch": 49, "b_launcher": 49, "l": [49, 66, 165], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 57, 62, 65, 75, 82, 83, 84, 95, 96, 97, 120, 122, 123, 124, 125, 137, 139, 146, 152, 157], "wafer": [52, 82, 84, 182, 183, 191], "By": [52, 55, 82, 83, 84, 91, 104, 120, 146, 153, 163, 181, 182, 183, 184, 186, 191], "own": [52, 92, 116, 144, 166, 169, 172, 173, 174, 183], "wish": [52, 169, 182], "custom": [52, 62, 78, 87, 88, 103, 109, 116, 146, 167, 172, 186], "hous": 52, "encod": [52, 146], "prefer": [52, 142, 164, 167, 170, 179, 185, 186, 191], "inst": [52, 54, 138], "surround": [52, 160], "extend": [52, 62, 63, 120, 159, 172, 182, 183], "box_margin": 52, "window": [52, 54, 75, 103, 144, 145, 166, 168, 173, 174, 178, 179, 181, 182, 185, 189, 192], "flyover": [52, 54], "arm_length": [54, 91, 92, 130, 183, 188], "arm_width": [54, 92, 183], "ubm": 54, "arrow_numb": 54, "arrow": [54, 181], "altern": [55, 57, 62, 63, 83, 101, 104, 107, 120, 155, 160, 169, 186, 187, 189], "shown": [55, 75, 105, 107, 116, 155, 156, 164, 178, 181, 186], "latter": [55, 62, 83, 166], "cannot": [55, 62, 148, 173, 183, 184], "edit": [55, 62, 63, 148, 170, 174, 177, 179, 180, 183, 192], "minim": [55, 62], "taken": [55, 63, 64, 90, 116, 120, 145, 151, 164, 177, 188], "underli": [55, 183], "equidist": 55, "n_bridg": [55, 62, 95], "600": 55, "3000": [55, 183], "smooth": [56, 139], "continu": [56, 57, 62, 63, 145, 171], "numer": 56, "optim": 56, "achiev": [56, 62, 91], "growth": 56, "relat": [56, 78, 109, 172, 175, 183], "input_path": 57, "goe": [57, 62, 145], "last": [57, 62, 63, 78, 119, 120, 145, 182, 183], "poly_path": 57, "unless": [57, 169, 170, 173, 182], "alreadi": [57, 75, 100, 107, 116, 169, 179, 182, 183], "longer": [57, 154, 157, 178], "than": [57, 62, 75, 78, 82, 104, 120, 145, 151, 153, 155, 164, 172, 173, 181, 183, 186, 187], "vertex": 57, "parallel": [57, 83, 123, 169, 182, 186], "polygon_path": 57, "want": [57, 82, 151, 160, 167, 169, 170, 171, 178, 181, 182, 183, 185, 186, 188, 189, 193], "choos": [57, 83, 91, 130, 170, 173, 174, 178, 179, 181, 182, 183, 184, 186, 193], "attempt": [57, 146, 155, 169], "find": [57, 85, 114, 141, 148, 152, 164, 171, 173, 183], "largest": [57, 145], "zero": [57, 116, 120, 188], "independ": [57, 169, 170, 186], "n_bridges_pattern": 57, "neg": [57, 120, 146], "so": [57, 62, 83, 95, 96, 97, 116, 120, 122, 123, 124, 125, 144, 145, 159, 160, 164, 166, 169, 170, 171, 173, 174, 178, 181, 183, 187, 189, 192], "above_spac": 57, "below_spac": 57, "right_spac": 57, "x_space": 57, "y_space": 57, "bridges_left": 57, "bridges_bottom": 57, "bridges_right": 57, "bridges_top": 57, "easili": [57, 65, 113, 139, 170, 171, 172, 183], "old": [57, 65, 152, 153, 160, 182], "spiralresonatorrectangl": 57, "bx": [57, 62, 63], "ex": [57, 62, 63, 173], "auto_spac": 57, "manual_spac": 57, "term2": [57, 62, 63, 124], "substrat": [60, 61, 104, 116, 117, 120, 183, 188], "e": [61, 62, 65, 82, 91, 104, 121, 124, 146, 155, 160, 164, 166, 170, 183, 184, 185, 186, 187], "composit": [62, 164, 178, 180], "suppli": [62, 63, 84, 95, 97, 120, 122, 123, 124, 125, 144, 188], "serial": [62, 146], "from_seri": 62, "ast": [62, 148], "literal_ev": [62, 148], "node_object": 62, "node_obj": 62, "element_nam": 62, "human": [62, 172, 177], "readabl": [62, 177], "storag": [62, 178], "conform": [62, 113], "format": [62, 144, 151, 162, 186, 187, 189, 190], "class_str": 62, "parameter_dict": 62, "__str__": 62, "omit": [62, 173, 182, 183, 188], "made": [62, 91, 154, 155, 156, 188], "perspect": 62, "rout": [62, 120, 153, 178, 183], "As": [62, 174, 178, 181, 182, 183], "bonu": 62, "arbitrari": [62, 63, 146, 183], "next": [62, 117, 120, 132, 133, 145, 174, 178, 181, 188], "waypoint": [62, 63], "except": [62, 63, 75, 83, 109, 146, 148, 155, 157, 160, 164, 178, 181], "collinear": 62, "back": [62, 183, 184], "pass": [62, 75, 83, 84, 95, 96, 97, 101, 104, 105, 120, 122, 123, 124, 125, 145, 146, 151, 152, 156, 164, 183, 188], "ab_across": 62, "across": [62, 118, 188], "evenli": 62, "preced": 62, "calcul": [62, 82, 91, 101, 104, 118, 130, 170, 178, 183, 187], "ab_to_ab_spac": 62, "ab_to_node_clear": 62, "former": 62, "densiti": [62, 82, 137, 178], "fact": 62, "instead": [62, 65, 75, 83, 104, 146, 148, 164, 166, 169, 174, 178, 183, 184, 186, 187, 188], "normal": [62, 118, 164, 166, 183], "those": [62, 146, 178, 182, 184], "correct": [62, 85, 148, 164, 173, 174, 183, 184], "compar": [62, 63, 146, 177, 183], "notabl": 62, "detail": [62, 94, 104, 166, 169, 170, 174, 181, 183, 187, 189, 190], "everi": [62, 63, 119, 146, 160, 164, 167, 170, 178, 191], "done": [62, 104, 170, 171, 178, 183, 185, 186, 187, 192], "segment_length": 62, "individu": [62, 82, 83, 84, 104, 116, 120, 163, 169, 170, 178, 188], "regular": [62, 173, 182, 188, 189], "test_waveguide_composit": [62, 181], "lym": [62, 160, 178, 181, 189], "script": [62, 75, 100, 103, 105, 107, 108, 119, 144, 151, 160, 166, 167, 169, 170, 173, 174, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "were": [62, 151, 160], "explicitli": [62, 144, 173, 186], "implicitli": 62, "node_index": [62, 143, 148], "_created_": 62, "associ": [62, 75, 156, 181], "particular": [62, 174, 181, 183], "subscel": 62, "appear": [62, 174, 178, 179, 181, 191], "retriev": 62, "itself": [62, 169, 174, 183, 187], "count": [62, 120, 138, 188], "consecut": [62, 147], "special": [62, 145, 178], "consequ": [62, 90, 155], "accumul": 62, "oni": 62, "report": [62, 83, 171], "route_funct": 62, "initial_guess": 62, "waveguide_param": 62, "lambda": 62, "f": [62, 65, 116, 118, 125, 166, 181], "more": [62, 78, 80, 83, 100, 103, 113, 116, 120, 155, 163, 164, 165, 166, 169, 170, 172, 174, 177, 178, 181, 182, 183, 186, 187, 188, 189, 190, 192], "compon": [62, 155], "tune": [62, 91, 160, 188], "weight": 62, "initi": [62, 75, 95, 96, 97, 120, 122, 123, 124, 125, 151, 159, 181, 182], "reason": [62, 164, 183], "interfac": [62, 104, 116, 120, 174, 187, 188], "snap": [62, 151], "behavior": [62, 75, 146], "unmodifi": 62, "requir": [62, 75, 109, 142, 151, 164, 165, 168, 169, 171, 173, 174, 177, 178, 182, 183, 186, 188, 189, 190, 193], "chain": 62, "iter": [62, 63, 101, 104, 146, 151, 187], "approri": 62, "target_len": 62, "point_a": 62, "point_a_corn": 62, "point_b": 62, "point_b_corn": 62, "endpoint": [62, 63, 116, 145, 155], "enable_gui_edit": [62, 148], "gui_path": 62, "gui_path_shadow": 62, "hidden": [62, 78, 157, 164, 183], "detect": [62, 178], "tight_rout": 62, "tight": 62, "airbridge_param": 62, "radio": 63, "bent": 63, "open": [63, 89, 90, 144, 167, 169, 173, 174, 176, 178, 179, 180, 181, 182, 186, 187, 192], "dpath": [63, 183], "partial": [63, 178, 179], "case": [63, 78, 83, 85, 108, 116, 120, 144, 154, 160, 167, 170, 171, 173, 174, 177, 178, 181, 182, 183, 184, 187, 188], "guid": [63, 83, 123, 165, 166, 172, 174, 178, 188], "visibl": [63, 75, 169, 173, 174, 178, 181, 182, 183], "graphic": [63, 82, 145, 174], "due": [63, 164, 173], "precis": [63, 116, 120, 172, 187], "arithmet": 63, "corner_safety_overlap": 63, "point1": 63, "point2": 63, "point3": 63, "data": [63, 78, 82, 94, 96, 101, 104, 116, 118, 119, 120, 151, 156, 160, 173, 181, 183, 187, 189, 190], "v1": 63, "v2": 63, "alpha1": 63, "alpha2": 63, "corner_po": 63, "vector": [63, 145], "elem": [63, 64], "point_1": 63, "point_2": 63, "term_len": [63, 64], "face_index": [63, 64], "One": [63, 120, 150, 155, 170, 178, 188], "waveguide_cel": 63, "annotation_lay": 63, "enough": [63, 151], "neighbor": [63, 178], "begin_shapes_rec": 63, "we": [63, 78, 82, 120, 155, 159, 160, 163, 164, 165, 169, 170, 173, 174, 178, 181, 182, 183, 186, 188, 189, 191], "unsign": [63, 145], "maximum": [63, 75, 101, 104, 186, 187], "tline": 63, "amount": [63, 120, 145, 184, 186], "ensur": [63, 109, 146, 164], "overlap": [63, 120, 145, 147, 155, 183], "001": [63, 104], "stop": [64, 101, 104, 145, 169, 181, 187], "radian": [64, 145], "circl": [64, 145, 181], "left_gap_inn": 64, "left_gap_out": 64, "right_gap_inn": 64, "right_gap_out": 64, "left_protect": 64, "right_protect": 64, "alpha": 64, "would": [64, 85, 146, 148, 155, 170, 171, 178, 183], "rad": 64, "141592653589793": 64, "multiwai": 65, "splitter": 65, "letter": [65, 78, 107, 152, 174], "length_extra": 65, "length_extra_sid": 65, "waveguidecoplanartcross": 65, "measur": [65, 87, 88, 120, 127, 181, 193], "11": [65, 120, 169, 170], "270": 65, "use_airbridg": 65, "centr": [65, 87, 88], "bridge_dist": 65, "a_list": 65, "b_list": 65, "port_nam": [65, 109], "c": [65, 83, 124, 164], "d": [65, 83, 120, 146, 169, 182, 186], "g": [65, 82, 146, 160, 183], "h": [65, 118, 125], "j": [65, 187], "design": [68, 69, 74, 81, 83, 86, 91, 160, 167, 170, 172, 177, 178, 181, 187, 190, 191], "packag": [68, 85, 94, 163, 166, 169, 170, 172, 177, 183, 184, 185, 187, 191, 193], "oasi": [68, 108, 114], "devic": [68, 91, 130, 183], "research": 68, "qcd1": 68, "qcd2": 68, "qcd3": 68, "thu": [69, 74, 187], "junctionnam": 69, "02": [69, 89, 91, 130], "style": [70, 71, 163, 168, 172, 183], "distinct": [70, 173, 178], "top_pad_lay": 70, "edge_height": 70, "small_loop_height": 70, "loop_bottom_i": 70, "delta_j": 70, "finger_margin": 70, "junction_shapes_top": 70, "junction_shapes_bottom": 70, "shadow_shap": 70, "h_pad_height": 70, "v_pad_width": 70, "pad_overlap": 70, "tp_width": 70, "tp_height": 70, "rounding_param": 70, "bp_height": 70, "bp_gap_x": 70, "big_loop_height": 70, "include_base_metal_addit": [71, 89], "pad_height": [71, 89, 127, 134], "pad_to_pad_separ": [71, 89], "x_offset": [71, 89], "pad_rounding_radiu": [71, 89], "junction_total_length": [72, 73, 91, 120], "26": 72, "33": [73, 91, 120], "squidnam": 74, "loop_area": [74, 89, 91, 130], "background_color": 75, "ffffff": 75, "helper": [75, 84, 109, 120, 136, 145, 152, 159, 170, 183, 188], "render": [75, 120], "environ": [75, 113, 166, 168, 169, 173, 184, 186, 190, 191, 193], "layoutview": [75, 181], "cellview": [75, 181], "view": [75, 78, 83, 104, 143, 151, 158, 170, 171, 174, 178, 181, 183, 186, 189, 192], "imag": [75, 80, 156, 166, 167, 170, 172, 173, 180, 181, 182, 184, 186, 187, 188], "tab": [75, 146, 178, 179, 181, 182], "standalon": [75, 85, 144, 164, 168, 169, 172, 173, 182, 185], "python": [75, 85, 119, 146, 148, 149, 151, 164, 165, 166, 168, 172, 174, 177, 180, 181, 182, 184, 185, 186, 187, 189, 192, 193], "mode": [75, 142, 170, 174, 177, 179, 181, 186, 189, 192], "keep": [75, 164, 170, 178, 182], "scope": [75, 170], "macro": [75, 151, 160, 169, 172, 173, 174, 177, 178, 180, 182, 183, 189, 191, 192], "applic": [75, 144, 145, 173, 179, 180, 192], "command": [75, 83, 85, 93, 108, 119, 151, 165, 166, 167, 169, 170, 171, 173, 180, 181, 183, 184, 186, 192], "act": [75, 118], "onc": [75, 103, 117, 142, 159, 164, 174, 178, 179, 181, 182, 183, 184, 186, 188, 189, 193], "png": [75, 167], "jupyt": [75, 168], "notebook": [75, 168], "inlin": [75, 178], "wrap": [75, 76], "whether": [75, 89, 91, 118, 119, 130, 144, 166, 185, 187], "background": [75, 184], "color": [75, 183, 188], "html": [75, 78, 166, 167, 173], "white": 75, "fit": [75, 104, 181, 183], "zoom": [75, 178, 179, 181], "main": [75, 82, 93, 103, 104, 155, 166, 170, 174, 177, 178, 181, 182, 183, 190, 191], "ipython": 75, "bold": [75, 178, 181], "clear": 75, "popul": [75, 82, 83, 151], "top_cell_nam": 75, "filenam": [75, 81, 114, 153, 155], "layers_set": 75, "directori": [75, 81, 107, 108, 144, 164, 166, 167, 169, 170, 171, 172, 173, 177, 181, 182, 183, 184, 189], "max_siz": 75, "bigger": 75, "pixelbuff": 75, "whole": [75, 123, 179], "hierarchi": [75, 82, 83, 138, 151, 160, 164, 171, 178, 180, 181, 182], "correspondingli": 75, "viewport": 75, "aspect": [75, 91], "Not": [75, 103, 159], "deprec": [75, 82, 160], "miss": [75, 142, 160, 171, 181], "ui": 75, "layerinfo": [75, 78, 116, 137, 154, 183], "default_lay": [75, 78, 177, 183], "valid": [75, 109, 148, 165, 170, 187], "cluster": [76, 184, 186], "process": [76, 78, 83, 95, 97, 101, 108, 116, 119, 120, 122, 123, 124, 125, 159, 169, 172, 173, 174, 177, 180, 182, 183, 186, 187, 189, 190], "inform": [76, 83, 116, 120, 162, 164, 174, 177, 178, 182, 183, 187, 188, 189, 193], "about": [76, 164, 169, 172, 173, 177, 181, 183, 193], "togeth": [76, 145, 157, 169, 188], "220": 78, "reserv": [78, 96, 104], "127": [78, 183], "128": [78, 87, 183], "255": [78, 183], "work": [78, 83, 116, 164, 166, 169, 170, 173, 174, 178, 181, 182, 183, 185, 188, 191, 193], "anoth": [78, 89, 90, 92, 146, 159, 160, 164, 178, 183], "stack": [78, 120, 180, 181, 190], "bond": 78, "denot": [78, 104, 182, 183], "manufactur": 78, "necessari": [78, 100, 160, 170, 185, 186], "deposit": [78, 116], "auxiliari": [78, 182], "field": [78, 96, 104, 120, 148, 159, 184], "229": 78, "organis": 78, "accord": [78, 82, 116, 160, 167, 170], "www": [78, 104, 113, 173, 186, 189], "de": [78, 118, 173], "doc": [78, 101, 104, 157, 166, 167, 170, 177, 187, 188], "qt5": 78, "layer_sourc": 78, "flat": [78, 82, 164], "map": [78, 82, 83, 84, 155, 180, 188], "subset": 78, "minor": [78, 163], "twist": 78, "1t1_base_metal_gap": 78, "invert": [78, 81], "skip_extra": 81, "bitmap": [81, 83], "oa": [81, 82, 83, 116, 144, 160, 177, 182, 186, 189, 193], "gd": [81, 100, 103, 144, 160, 177, 182, 186], "chip_nam": [81, 82], "chip_dir": 81, "alt_netlist": [81, 83, 155], "export_dir": 81, "subdirectori": [81, 174, 177], "modifi": [81, 82, 89, 90, 116, 120, 145, 170, 172, 174, 180, 181, 183, 184], "mask_document": 81, "md": 81, "spec_lay": 81, "mask_graphical_rep": 81, "postfix": [82, 155, 171], "creation": [82, 159, 186], "2d": [82, 83, 104, 144], "exact": [82, 173, 178, 181], "minimum": [82, 101, 104, 145, 169, 170, 187], "violat": 82, "conflict": 82, "never": 82, "factor": [82, 152], "coverag": [82, 171], "uniqu": [82, 144, 151, 155, 156, 183, 184, 190], "position_label": 82, "outsid": [82, 90, 104, 170, 183], "dure": [82, 146, 170], "calcualt": 82, "k": [82, 155], "rigtht": 82, "90": [82, 182, 183], "what": [82, 113, 165, 181, 183, 188], "translat": [82, 173], "chips_dict": 82, "overwrit": [82, 91, 166, 186], "ones": [82, 152, 169, 170], "_": [82, 104, 143, 183, 188], "bbox": [82, 137], "labels_cel": 82, "mask_name_for_chip": 82, "row": [82, 96, 187], "column": [82, 96, 187], "c03": 82, "posixpath": [83, 116], "home": [83, 116, 166, 182], "runner": [83, 116], "tmp": [83, 107, 166, 170, 177, 183, 184, 186, 189], "add_mask_name_to_chip": 83, "These": [83, 84, 98, 151, 164, 167, 169, 177, 181, 182, 183, 189], "Then": [83, 104, 160, 169, 178, 179, 189], "entir": [83, 138, 166, 181], "switch": [83, 192], "debug": [83, 120, 153, 181, 182, 192], "limit": [83, 117, 160, 166, 173, 187, 188, 189], "concurr": [83, 169], "cpu": [83, 171, 173], "resourc": [83, 184, 186], "manag": [83, 143, 166, 169, 173, 174, 181, 184, 186, 193], "purpos": [83, 120, 126, 164, 170, 178, 188], "drc": [83, 144, 177, 178], "similar": [83, 104, 159, 181, 186, 187, 188, 189], "folder": [83, 100, 103, 107, 108, 119, 166, 167, 169, 170, 171, 177, 182, 183, 184, 185, 186, 187, 189, 190, 193], "tmp_path": [83, 144, 182], "mask_layout_typ": [83, 84], "extra_face_param": [83, 84], "ident": [83, 84, 155, 156, 160, 164, 170], "overwritten": 83, "extra_kwarg": 83, "variant_nam": 83, "complex": [83, 172, 178, 187], "polymorph": 83, "here": [83, 153, 168, 174, 178, 183, 186, 191], "rest": 83, "quick_demo": [83, 170, 182], "py": [83, 100, 103, 107, 164, 166, 167, 169, 170, 171, 173, 182, 183, 184, 185, 186, 187, 189, 193], "further": [83, 166, 174, 182, 183, 188], "qdg": 83, "o": [83, 85, 146, 169, 173], "cpu_count": 83, "whichev": 83, "smaller": [83, 120, 145], "remove_guiding_shap": 83, "box_map": 83, "mask_map": 83, "nxn": 83, "mxm": 83, "mnxmn": 83, "usual": [84, 116, 118, 155, 169, 174, 181, 182, 183, 185, 186, 188], "instanti": [84, 159, 164, 170, 188], "extra_param": 84, "modul": [85, 103, 145, 149, 152, 164, 165, 168, 169, 171, 172, 173, 174, 177, 183, 185], "import": [85, 100, 151, 152, 156, 164, 166, 167, 170, 171, 173, 174, 177, 178, 181, 182, 183, 188, 189], "api": [85, 157, 163, 167, 170, 172, 174, 178, 179, 181, 183, 186, 187, 188, 189, 191], "usag": [85, 152, 168, 172, 174, 178, 180, 181, 182, 186, 187, 188, 189], "db": [85, 164], "execut": [85, 100, 103, 108, 119, 141, 166, 171, 173, 181, 182, 186, 189, 190], "session": 85, "found": [85, 109, 141, 144, 151, 162, 166, 173, 177, 183, 186, 187, 193], "transmon": [87, 88], "josephson": [87, 88], "r_island": 87, "squid_angl": [87, 88], "couplers_r": [87, 88], "couplers_a": [87, 88], "couplers_b": [87, 88], "couplers_angl": [87, 88], "340": [87, 88], "210": [87, 88], "couplers_width": [87, 88], "couplers_arc_amplitud": [87, 88], "45": [87, 88, 120], "drive_angl": [87, 88], "drive_dist": [87, 88], "concentr": 88, "290": 88, "rectangl": [89, 90, 116, 164, 178], "shunt": [89, 90], "north": [89, 90, 92], "join": [89, 90], "700": 89, "ground_gap_r": 89, "coupler_r": 89, "coupler_a": 89, "coupler_offset": 89, "squid_offset": 89, "island1_r": 89, "island2_r": 89, "450": 89, "island1_taper_width": 89, "island1_taper_junction_width": 89, "island2_taper_width": 89, "island2_taper_junction_width": 89, "70": 89, "with_squid": 89, "spline": [90, 145], "construct": [90, 108, 145, 160, 182, 188], "island_splin": 90, "island_spline_sampl": 90, "collect": [91, 144, 178, 183], "routin": 91, "beam": 91, "customari": 91, "probepoint": [91, 144], "simpli": [91, 146, 166, 188], "appropri": [91, 159, 163, 164, 183], "probe_ground": 91, "probe_island": 91, "probe_island_1": 91, "probe_island_2": 91, "transf": [91, 130], "only_arm": [91, 130], "base_metal_gap_for_ebl": [91, 130], "right_sid": [91, 130], "help": [91, 130, 169, 170, 171, 172, 178, 181], "dcplxtran": [91, 130, 160], "rot": 91, "flux": [91, 101, 109, 124], "flux_corn": 91, "origin_fluxlin": 91, "origin_squid": 91, "port_common": 91, "howev": [91, 120, 170, 173, 174, 178, 182, 183, 186], "might": [91, 100, 103, 104, 166, 169, 173, 174, 186], "tweak": 91, "south": 92, "gap_width": [92, 188], "wne": 92, "cpl_width": [92, 125], "cpl_length": 92, "cpl_gap": 92, "102": 92, "port_width": 92, "cl_offset": 92, "island_r": 92, "arg": [93, 105, 107, 137, 144, 146, 166], "args_for_script": 93, "entri": [93, 144, 160, 173, 174, 182], "consol": [93, 107, 153, 173, 182, 185], "pars": [95, 96, 97, 105, 120, 122, 123, 124, 125, 148], "readi": [95, 97, 120, 122, 123, 124, 125], "co": 96, "intend": [96, 120, 188, 193], "materi": [96, 104, 116, 120, 186, 187], "don": [96, 164, 169, 170, 173], "obei": 96, "vacuum": [96, 104, 116, 117, 120, 188], "word": [96, 152, 174], "result": [96, 134, 144, 145, 146, 184, 186, 187, 190], "matric": [96, 101, 187], "introduc": [96, 116, 120, 188], "dielectr": [96, 120, 188], "permitt": [96, 116, 120], "regist": [96, 158, 164, 176], "reset": 96, "intern": [96, 120, 159, 178, 187, 188, 189], "relev": [96, 120, 159, 187, 188], "london": [96, 116, 187], "penetr": [96, 116, 187], "depth": [96, 116, 187], "m": [96, 120, 170, 186], "xsection_source_class": 96, "schema": [96, 160], "boundari": [96, 104, 120, 187], "extra_json_data": [96, 120], "store": [96, 120, 137, 160, 182, 187, 188], "virtual": [96, 120, 170, 173], "program": [98, 172, 179, 181, 185], "hfss": [98, 101, 187, 188, 190], "q3d": [98, 101, 187, 188, 190], "write": [100, 103, 108, 113, 144, 164, 166, 167, 169, 170, 171, 173, 183, 186, 188, 192, 193], "json_filenam": [100, 103, 108, 119], "file_prefix": [100, 103, 108], "exit_after_run": 100, "execution_script": 100, "import_and_simul": 100, "use_rel_path": 100, "batch": [100, 119, 177, 189], "bat": [100, 108, 189], "electron": [100, 141, 187, 189, 190], "desktop": [100, 186, 187, 189, 190], "sequenc": [100, 103, 133, 145], "script_fold": [100, 103], "bool": [100, 101, 103, 104, 105, 107, 112, 118, 120, 144, 145, 154], "import_script": 100, "skip_error": [100, 103], "solution_param": [100, 101, 103, 104], "skip": [100, 103, 104, 146], "caus": [100, 103, 121, 145, 146, 169], "carefulli": [100, 103, 163, 188], "sens": [100, 103, 179, 181], "wast": [100, 103], "bad": [100, 103], "ghz": [101, 104, 187], "percentag": [101, 187], "mesh": [101, 104, 113, 186, 187], "refin": [101, 104, 187], "how": [101, 120, 160, 164, 170, 173, 174, 178, 183, 184, 187, 188], "mani": [101, 120, 162, 169, 170, 172, 173, 177, 178, 182, 183, 186, 187, 188], "meet": [101, 178, 187], "criterion": [101, 104, 187], "maxim": [101, 104], "templat": [101, 167, 172], "classvar": [101, 104, 110], "101": [101, 187], "interpol": [101, 104, 187], "multifrequ": [101, 187], "sweep": [101, 104, 108, 113, 116, 160, 180, 186, 187, 190], "lowest": [101, 120, 187, 188], "highest": [101, 120, 187], "discret": [101, 187], "fast": [101, 163, 187], "energi": [101, 103, 104, 180, 190], "save": [101, 119, 160, 174, 183, 184, 187, 188], "magnet": [101, 109], "pec": 101, "sheet": [101, 120, 188], "matrix": [101, 104, 145, 180, 186, 190], "nomin": 101, "moment": [101, 179], "eigenmod": [101, 180, 190], "eigenfrequ": [101, 187], "solv": [101, 187], "excit": [101, 118, 187], "voltag": 101, "workflow": [103, 113, 166, 172, 174, 178, 180, 181, 186, 190], "script_fil": 103, "compile_elmer_modul": 103, "launch": [103, 169, 173, 182, 183, 192], "compil": [103, 170, 173, 184], "runtim": [103, 166], "model": [103, 118, 120, 170, 186, 187, 188], "005": 104, "factori": 104, "adapt": [104, 188], "fraction": 104, "outlier": 104, "symmetr": 104, "big": [104, 182], "larger": [104, 120, 186], "finer": 104, "divid": [104, 164, 170, 177, 183, 186], "dim": [104, 117], "term": [104, 117, 120, 171, 187, 188], "entiti": 104, "expans": [104, 117, 120, 145, 159], "constant": [104, 120, 164, 187], "slope": 104, "increas": [104, 116, 133, 166, 186], "global_max": 104, "global": 104, "less": [104, 113, 164, 173], "awai": [104, 117, 118, 120, 145, 148, 183], "vtu": 104, "paraview": [104, 166, 185, 186, 189], "off": [104, 120, 181], "slightli": [104, 173], "faster": [104, 113, 160], "explicit": 104, "wave": [104, 120, 188], "equat": 104, "converg": 104, "supercurr": 104, "flow": 104, "thick": [104, 116, 120, 188], "finit": 104, "nedelec": 104, "kind": [104, 170, 183], "formul": [104, 121], "vectorhelmholtz": 104, "potenti": [104, 118, 183], "v": [104, 112, 163], "electr": [104, 187], "nic": 104, "funet": 104, "fi": 104, "pub": 104, "sci": 104, "elmermodelsmanu": 104, "pdf": [104, 113], "warn": [104, 153, 173], "experiment": [104, 191], "poor": [104, 186], "film": 104, "nest": 104, "solver": [104, 186, 187, 189], "calc": 104, "wave_equ": [104, 187], "mg": 104, "09": 104, "polynomi": [104, 145], "p": [104, 143], "multigrid": 104, "bicgstab": 104, "mention": [104, 120, 166], "elmersolv": [104, 166, 186], "epr": [104, 118, 187], "induct": [104, 112, 118, 125, 159, 187], "condit": [104, 187], "xmin": [104, 112], "xmax": [104, 112], "ymin": [104, 112], "ymax": [104, 112], "just": [104, 164, 166, 169, 170, 174, 183, 188], "impend": 104, "electrostat": 104, "epr_3d": 104, "export_script": 105, "quiet": [105, 107], "export_onli": 105, "basenam": [105, 184], "dialog": [105, 107, 174, 178, 185], "describ": [105, 120, 139, 145, 151, 165, 170, 178, 183, 185, 187, 188, 190], "stdout": [105, 153], "print": [105, 146, 151, 152, 153, 182], "export_path_identifi": 105, "script_export_path": 105, "remote_host": 106, "singularity_remote_path": 106, "ssh_login": 107, "kqc_remote_tmp_path": [107, 184], "detach_simul": 107, "poll_interv": 107, "export_path_basenam": 107, "local": [107, 163, 166, 167, 170, 173, 174, 179, 181, 184], "remot": [107, 180, 186, 190], "host": [107, 168, 170, 184, 186], "froce": 107, "q": [107, 170, 179, 185], "ssh": [107, 184], "login": 107, "hostnam": 107, "detach": [107, 184], "wait": 107, "finish": [107, 179, 184, 186], "poll": [107, 184], "interv": [107, 184], "export_tmp_dir": 107, "could": [107, 113, 146, 163, 165, 166, 183, 186, 188], "source_path": 108, "content": [108, 144, 172, 174, 186], "sh": [108, 166, 184, 186, 189], "json_data": 108, "json_file_path": 108, "sim_class": [108, 188, 189], "sim_paramet": [108, 188], "vari": [108, 183, 186, 188], "sol_class": 108, "sol_paramet": 108, "analys": 109, "inconsist": 109, "criteria": 109, "met": 109, "check": [109, 142, 146, 169, 170, 177, 183, 187, 192], "least": [109, 145, 148, 160, 169, 173, 178, 181, 183], "presenc": 109, "validation_typ": 109, "handl": [109, 137, 164, 178, 183, 186, 190], "filename_templ": 112, "filename_output": 112, "rule": [112, 120, 167, 177], "nvertic": 112, "debugid": 112, "ilevel": 112, "mtype": 112, "filltyp": 112, "conmax": 112, "edge_mesh": 112, "sym": 112, "xwidth": 112, "ywidth": 112, "xcell": 112, "ycell": 112, "materials_typ": 112, "si": 112, "bt": 112, "port_ipoli": 112, "portnum": 112, "ipolygon": 112, "ivertex": 112, "port_typ": 112, "std": 112, "xcord": 112, "ycord": 112, "resist": [112, 118, 159], "react": 112, "capac": 112, "control_typ": 112, "dbu": [112, 113, 114, 116, 117, 137], "fill_typ": [112, 113], "poli": 112, "detailed_reson": 113, "lower_accuraci": 113, "ab": 113, "staircas": 113, "simulation_safeti": 113, "son": [113, 189], "sonnetsoftwar": 113, "download": [113, 166, 173], "techdoc": 113, "enhanced_resonance_detection_featur": 113, "fine": [113, 157], "coars": 113, "accur": 113, "good": [113, 182], "everyth": [113, 174, 178, 183], "output_format": [114, 151], "intersect": 114, "input_oa": 116, "output_oa": 116, "cut1": 116, "cut2": 116, "process_path": 116, "kqc_process": [116, 193], "parameters_path": 116, "plugin": [116, 143, 158, 165, 169, 193], "down": [116, 118, 120, 178, 179, 181, 183], "cut": [116, 193], "output_path": 116, "pathlib": 116, "pyacor": 116, "post_processing_funct": 116, "callabl": [116, 121], "oxidise_layers_funct": 116, "_oxidise_lay": 116, "ma_permitt": 116, "ms_permitt": 116, "sa_permitt": 116, "ma_thick": 116, "ms_thick": 116, "sa_thick": 116, "vertical_cul": 116, "mer_box": 116, "magnification_ord": 116, "p1": [116, 120], "p2": [116, 120], "perform": [116, 120, 166, 170, 186, 187], "oxid": 116, "expect": [116, 163, 173], "signatur": 116, "pyhint": 116, "air": 116, "cull": 116, "retain": 116, "_mer": 116, "suffix": [116, 117, 144, 156], "magnif": [116, 178], "accomod": 116, "spacial": 116, "10x": 116, "100x": 116, "thin": [116, 120, 188], "sort_kei": [116, 146], "sort": [116, 146], "pick": 116, "tie": 116, "break": [116, 163, 166], "slot": 116, "cut_label": 116, "width_ratio": 116, "visualis": [116, 117, 120, 170], "request": [116, 153, 160, 166, 184, 186], "xsection_cut": 116, "_1": 116, "_2": 116, "recommend": [116, 169, 170, 173, 178, 182, 186, 187], "differenti": 116, "multipli": 116, "scalar": [117, 120], "z": [117, 120, 166, 192], "vertical_dimens": 117, "metal_edge_dimens": 117, "partit": [117, 120, 186], "domain": [117, 120, 188], "later": [117, 135, 160, 171, 174, 183], "preview": [117, 120], "databas": [117, 145, 147, 191], "sign": 117, "metal_region": [117, 134], "etch_region": 117, "reactanc": [118, 159], "renorm": [118, 187], "ideal": 118, "rlc": [118, 187], "lump": [118, 120, 187, 188], "real": 118, "ohm": 118, "omega": 118, "imaginari": 118, "henri": 118, "farad": 118, "signal_loc": [118, 187, 188], "ground_loc": [118, 187, 188], "signal_lay": [118, 159], "etch_width": 118, "deembed_len": [118, 159, 187], "embed": 118, "micron": 118, "port_siz": [118, 120], "repeat_for_each": 119, "data_file_prefix": 119, "basic": [120, 168, 169, 177, 178, 179, 180, 181, 191], "built": [120, 166, 167, 174, 178, 183, 188, 192], "principl": [120, 148], "imagin": [120, 188], "surfac": [120, 187, 188], "touch": [120, 183], "face_stack": [120, 188], "lower_box_height": [120, 188], "account": [120, 150, 151, 164, 184, 186, 188], "pile": [120, 188], "That": [120, 187, 188], "leav": [120, 188], "substrate_height": [120, 188], "chip_dist": [120, 188], "metal_height": [120, 188], "infinit": [120, 146, 188], "insul": 120, "dielectric_height": [120, 188], "grid_siz": [120, 147], "expand": [120, 145], "resolut": 120, "forc": [120, 187], "list_or_const": 120, "ordin": 120, "short": [120, 178, 191], "duplic": [120, 145, 154, 169], "ascend": 120, "simplifi": 120, "polygon_toler": 120, "shrink": 120, "closer": [120, 145, 151], "minimum_point_spac": 120, "z0": 120, "z1": 120, "split": [120, 145], "opp_i": 120, "__init__": 120, "hole": [120, 147], "subtract_kei": 120, "port_kwarg": 120, "engin": 120, "infer": [120, 144, 160], "brought": [120, 159], "at_edg": 120, "signal_edg": 120, "ground_edg": 120, "material_dict": 120, "delet": [120, 152, 154, 174, 178], "access": [120, 170, 173, 178, 180], "append": [120, 145, 153, 155, 156, 188], "dtext": 120, "ground_grid_box": 120, "use_port": 120, "upper_box_height": 120, "fixed_level_stackup": 120, "375": 120, "substrate_box": 120, "correspondingsubstr": 120, "fulli": [120, 170, 187], "substrate_materi": 120, "electromagnet": 120, "dielectric_loss_tang": 120, "8": [120, 156, 157, 164], "ground_metal_height": 120, "affect": [120, 163, 172, 173, 186], "signal_metal_height": 120, "airbridge_height": 120, "dielectric_materi": 120, "stub": [120, 125], "vertical_over_etch": 120, "hollow_tsv": 120, "hollow": 120, "constructor": [120, 146, 188], "tls_layer_thick": 120, "tl": [120, 187], "ma": 120, "sa": 120, "tls_layer_materi": 120, "tls_sheet_approxim": 120, "approxim": 120, "detach_tls_sheets_from_bodi": 120, "significantli": 120, "improv": [120, 170, 171, 173], "element_class": 121, "ignore_port": [121, 188], "transformation_from_cent": 121, "xs1": 122, "xs2": 122, "cpw_length": 123, "n_guid": 123, "guide_face_id": 123, "add_bump": 123, "port_termination_end": 123, "use_edge_port": 123, "etch_whole_opposite_fac": 123, "qubit_cel": 124, "center_x": 124, "center_i": 124, "wn": [124, 183], "en": 124, "sw": [124, 144], "se": [124, 144], "nw": [124, 144], "ne": [124, 144], "enable_flux_lin": 124, "enable_drive_lin": 124, "enable_transmission_lin": 124, "transmit": 124, "66": 125, "junction_induct": 125, "35e": 125, "junction_capacit": 125, "16": [125, 183], "num_cross": 128, "cross_width": 128, "cross_length": 128, "cross_spac": 128, "cross_box_dist": 128, "stripe_width": 132, "stripe_length": [132, 133], "stripe_spac": [132, 133], "min_stripe_width": 133, "stripe_step": 133, "widen": 133, "pads_region": 134, "pad_spacing_x": 134, "pad_spacing_i": 134, "connect_pad": 134, "refpoint_prefix": 134, "refpoint_dist": 134, "resembl": 135, "fenc": 135, "profil": [135, 184], "tsv_array_form": 135, "tileoutputreceiv": 137, "tilingprocessor": 137, "brief": [137, 143], "ix": 137, "ii": 137, "tile": 137, "obj": [137, 145], "clip": 137, "layer_info": 137, "rho": 137, "frac": 137, "pcell_class": 138, "isinst": 138, "pcell_declar": 138, "coupler_typ": 139, "element_kei": 139, "useless": 139, "accept": [139, 148, 163, 169, 187], "latest": [141, 166, 170, 173, 189], "instal": [141, 142, 166, 168, 172, 177, 179, 183, 185, 186, 189, 190, 192, 193], "against": [142, 177], "txt": [142, 169, 170, 173, 186, 189], "upgrad": [142, 169, 170, 172, 173], "stand": [142, 151, 177, 190], "alon": [142, 151, 177, 190], "pip": [142, 169, 170, 173, 185, 186, 189], "sync": [142, 170], "venv": [142, 169, 170], "startup": [142, 148, 170], "button": [143, 179, 181], "prio": 143, "__": 143, "pluginfactori": 143, "flip_fac": 144, "default_probe_typ": 144, "default_probe_suffix": 144, "millimet": 144, "tell": 144, "site": [144, 170, 173], "cell_fil": 144, "dir_nam": 144, "tri": [144, 166], "write_versions_fil": 144, "commit_refer": [144, 186], "git": [144, 163, 168, 169, 170, 173, 177], "revis": [144, 191], "written": [144, 189], "export_machine_vers": 144, "filepath": 144, "maco": [144, 168, 173, 179], "linux": [144, 166, 168, 170, 173, 177, 179, 182, 186, 189], "drc_script": 144, "name_drc_report": 144, "lyrdb": 144, "1t1_waveguide_path": 145, "2b1_waveguide_path": 145, "sum": 145, "children": 145, "objectinstpath": 145, "outward": 145, "whenev": [145, 163, 181], "elimin": [145, 146], "simple_polygon": 145, "polygon_point": 145, "counterclockwis": 145, "283185307179586": 145, "pi": 145, "control_point": 145, "sample_point": 145, "startpoint": 145, "uniformli": 145, "cubic": 145, "subsequ": 145, "slide": 145, "unlik": 145, "bezier": 145, "guarante": [145, 146, 174], "kaihuai": 145, "qin": 145, "proceed": 145, "pacif": 145, "98": 145, "sixth": 145, "confer": 145, "singapor": 145, "1998": 145, "pp": 145, "37": 145, "43": [145, 164], "doi": [145, 162], "1109": 145, "pccga": 145, "731996": 145, "uniform": [145, 188], "prepend": 145, "tangent": 145, "third": [145, 173, 186], "fourth": 145, "skipkei": 146, "ensure_ascii": 146, "check_circular": 146, "allow_nan": 146, "jsonencod": 146, "sensibl": 146, "typeerror": 146, "incom": 146, "ascii": 146, "charact": [146, 150, 163], "escap": 146, "prevent": [146, 173], "recursionerror": 146, "nan": 146, "infin": 146, "compliant": 146, "javascript": 146, "decod": 146, "regress": 146, "dai": 146, "basi": [146, 164, 188], "member": 146, "pretti": 146, "newlin": 146, "item_separ": 146, "key_separ": 146, "whitespac": 146, "serializ": 146, "def": [146, 183, 188], "try": [146, 169, 170, 173], "let": [146, 170, 183], "jsondecod": 146, "object_hook": 146, "rpc": 146, "hint": 146, "object_pairs_hook": 146, "prioriti": [146, 178], "parse_float": 146, "num_str": 146, "datatyp": 146, "decim": 146, "parse_int": 146, "parse_const": 146, "invalid": 146, "encount": [146, 166], "strict": [146, 164], "context": [146, 160], "parseabl": 146, "boundbox": 147, "avoid_region": 147, "grid_step": 147, "group_n": 147, "speed": [147, 159, 171, 186], "box_siz": 148, "require_gui_editing_en": 148, "search": [148, 172], "captur": 148, "invers": 148, "treat": [148, 155, 164], "strip": 148, "liter": 148, "namespac": [148, 157], "comma": [148, 151], "multilin": 148, "waveguide_inst": 148, "usabl": 148, "x_corner": 148, "slow": [148, 181, 182], "clumsi": 148, "curat": 148, "node_editor_valid_el": 148, "kept": 148, "file_path": 149, "enum": 150, "origin_offset": 150, "layer_protect": 150, "350": 150, "print_waveguides_as_composit": 151, "add_instance_nam": 151, "refpoint_snap": 151, "grid_snap": 151, "include_import": 151, "create_cod": 151, "past": 151, "statement": [151, 174], "node_param": 151, "complet": [151, 167, 170, 174, 183, 186], "flatten": 151, "flush": 152, "src_path": 152, "memori": [152, 166, 186], "_kqc_librari": 152, "class_nam": 152, "pascalcas": [152, 164], "lowercas": [152, 174], "module_nam": 152, "_to_module_nam": 152, "titl": [152, 162], "qualiti": 152, "lowest_visible_level": 153, "remove_old_handl": 153, "log": [153, 182], "logfil": 153, "monitor": 153, "handler": 153, "root": [153, 166, 171, 177, 183], "logger": 153, "critic": 153, "cell_list": 154, "layer_1": 154, "layer_2": 154, "layer_merg": 154, "only_el": 154, "prune": 154, "contrast": 154, "convert_to_stat": 154, "anywher": [154, 174], "net": 155, "subcircuit": [155, 156], "terminologi": [155, 172, 180], "eda": 155, "resistor": 155, "pin": [155, 170], "wire": 155, "conceptu": 155, "analog": 155, "exactli": 155, "subcircuit_id": [155, 156], "unconnect": 155, "cell_nam": [155, 156], "subcircuit_loc": 155, "_pya_typ": 155, "subcircuit_origin": 155, "breakdown": 155, "regadless": 155, "absolut": [155, 170, 183], "cell_map": 155, "internal_cel": 155, "network": 156, "networkx": [156, 173], "graph": [156, 164, 170, 177], "cell_typ": 156, "instance_nam": 156, "obtain": [156, 188], "with_label": 156, "with_posit": 156, "figsiz": 156, "spring": 156, "matplotlib": 156, "interact": [156, 180], "plot": 156, "param_nam": [157, 167], "param_with_default_valu": 157, "wildcard": 157, "simplic": [157, 164], "grain": 157, "pcellparameterdeclar": 157, "data_typ": 157, "plain": [157, 164, 174], "docstr": [157, 165, 167, 178], "sphinx": [157, 167], "owner": 157, "registr": [158, 183], "happen": 158, "demand": 159, "builder": [159, 188], "ground_refpoint": 159, "port_squid_a": [159, 188], "port_squid_b": [159, 188], "separate_island_internal_port": 159, "commonli": [159, 183], "export_tuned_junct": 160, "class_typ": 160, "parent_nam": 160, "tuned_junction_paramet": 160, "qb1": 160, "testarray_nw": 160, "squid_0": 160, "squid_3": 160, "testarrai": 160, "even": [160, 164, 166, 170, 173, 181], "jsonabl": 160, "exhaust": 160, "read": [160, 166, 173, 174, 178, 183], "write_path": 160, "layer_str": 160, "visual": [160, 170, 183, 186], "again": [160, 166, 169, 181, 182], "parameter_nam": 160, "parameter_start": 160, "parameter_step": 160, "parameter_end": 160, "swept": 160, "squid_index": 160, "mirror_tran": 161, "project": [162, 164, 171, 173, 184, 186], "public": [162, 163, 166, 171], "citat": 162, "bib": 162, "zenodo": 162, "click": [162, 169, 172, 173, 174, 178, 180, 181, 182, 183, 192], "badg": 162, "softwar": [162, 166, 176, 186, 189], "cucurachi": 162, "daniel": 162, "da": 162, "soumya": 162, "ranjan": 162, "giri": 162, "rakshyakar": 162, "gusenkova": 162, "daria": 162, "guthri": 162, "andrew": 162, "inel": 162, "sinan": 162, "janzs\u00f3": 162, "d\u00e1vid": 162, "jenei": 162, "m\u00e1t\u00e9": 162, "juliusson": 162, "kristinn": 162, "kotilahti": 162, "jann": 162, "landra": 162, "alessandro": 162, "moretti": 162, "roberto": 162, "myll\u00e4ri": 162, "tuoma": 162, "ockeloen": 162, "korppi": 162, "caspar": 162, "r\u00e4bin\u00e4": 162, "jukka": 162, "savola": [162, 187], "niko": 162, "smirnov": 162, "pavel": 162, "takala": 162, "eeli": 162, "wubben": 162, "leon": 162, "month": 162, "jun": 162, "year": 162, "2021": 162, "publish": [162, 166], "5281": 162, "4944796": 162, "url": 162, "welcom": 163, "commun": [163, 186], "contributor": 163, "licens": [163, 187], "agreement": 163, "websit": [163, 166], "review": 163, "approv": 163, "pr": 163, "forward": [163, 186], "strategi": 163, "linear": 163, "histori": 163, "pleas": [163, 169, 170, 171, 175, 176, 186, 187, 188, 189, 193], "organ": [163, 171, 181, 183], "commit": [163, 170], "meaning": [163, 183], "black": [163, 164, 165], "permit": [163, 183], "pep": [163, 164], "440": 163, "scheme": 163, "miniv": 163, "major": 163, "micro": 163, "offici": 163, "releas": [163, 166, 172, 193], "salt": [163, 169, 170, 172, 173, 177, 183], "incompat": 163, "backward": [163, 170], "seriou": 163, "cosmet": 163, "explain": [164, 165, 169, 178, 181, 183, 189], "diagram": 164, "oval": 164, "concret": 164, "leaf": 164, "green": [164, 181, 188], "natur": 164, "ever": 164, "live": 164, "create_cel": 164, "properli": [164, 169, 171, 174], "variabl": [164, 166, 170, 177, 181, 183, 184, 186, 187], "descriptor": 164, "hierarch": 164, "transpar": 164, "caller": 164, "default_parameter_valu": 164, "technic": [164, 183, 187], "intent": 164, "otherclass": 164, "param_a": 164, "param_b": 164, "myclass": 164, "param_c": 164, "42": 164, "param_d": 164, "41": 164, "syntax": [164, 183, 188], "bit": [164, 173, 179, 183], "revers": 164, "why": [164, 165], "bodi": 164, "kqc_library_nam": 164, "downstream": 164, "discov": 164, "convent": [164, 171, 173, 183], "comment": [165, 173, 178, 181, 183], "someth": [165, 186], "feel": 165, "probabl": [165, 173], "rewritten": 165, "clearli": 165, "builtin": 165, "googl": 165, "dockerfil": 166, "addition": [166, 186, 188], "kl_file": 166, "md5": 166, "hash": [166, 170, 177, 183], "kl_hash": 166, "klayout_0": 166, "29": [166, 173], "1_amd64": 166, "deb": 166, "421df42661a3d795b534da5048261044": 166, "ubuntu": [166, 169, 173], "quickli": 166, "m00x": 166, "volum": 166, "pwd": 166, "ghcr": 166, "io": [166, 193], "mount": 166, "run_script": 166, "nc": 166, "rx": [166, 183], "cours": [166, 183], "wd": 166, "older": [166, 170, 179], "hyperv": 166, "backend": 166, "ram": 166, "1gb": 166, "entrypoint": 166, "push": [166, 184], "branch": [166, 174, 181], "pipelin": [166, 171], "pull": [166, 169], "registri": 166, "sylab": 166, "quick_start": 166, "better": [166, 171, 188], "hpc": 166, "tutori": [166, 172, 174, 180, 181], "libexec": 166, "kqclib": [166, 186], "repo": 166, "ora": 166, "pem": 166, "rsa": 166, "encrypt": 166, "successfulli": [166, 169, 170, 192], "singularity_priv": 166, "privat": [166, 171], "now": [166, 174, 181, 183], "create_link": 166, "among": [166, 172], "elmersolver_mpi": 166, "elmergrid": [166, 186], "symbol": [166, 177, 181, 183, 184, 186], "link": [166, 169, 173, 174, 177, 181, 183, 184, 186], "rememb": [166, 169, 178], "bin": [166, 184], "prepar": [166, 186], "klayout_packag": [166, 169, 170, 177, 181, 183, 184, 185, 186, 187, 189, 193], "And": [166, 183], "waveguides_sim_compar": [166, 170, 185, 186], "sure": [166, 169, 170, 171, 174, 178, 181, 183, 184, 189, 193], "ride": 166, "python_execut": [166, 186], "subsystem": 166, "wsl": 166, "problem": [166, 169, 170, 173, 174, 175, 187], "stuck": 166, "workload": [166, 184, 186], "simple_workload_manag": 166, "subfold": [166, 183], "kqc_tmp_path": [166, 170], "waveguides_sim_elm": [166, 186], "affor": 166, "gmsh": [166, 180, 184, 185, 189, 190], "rst": 167, "rebuild": 167, "clean": 167, "apidoc": 167, "sphinxext": 167, "make_pcell_imag": 167, "pcell_imag": 167, "markers_for_png": 167, "x_2": 167, "y_2": 167, "ruler": [167, 193], "illustr": [167, 178, 188], "satisfactori": 167, "x2": 167, "y2": 167, "setup": [168, 172, 173, 174, 178, 179, 183, 184, 185, 190, 192, 193], "prerequisit": 168, "unlink": 168, "secondari": [168, 193], "symlink": 168, "reproduc": 168, "secur": [168, 186, 189], "exclus": 168, "pypi": [168, 177], "cli": 168, "docker": 168, "ci": [168, 170, 171, 177], "singular": [168, 177, 184, 186], "contribut": [168, 172], "come": [169, 183], "pre": [169, 188], "04": [169, 173], "platform": [169, 170, 173], "lt": [169, 173], "clone": [169, 170, 173], "cd": [169, 170, 171], "python3": 169, "setup_within_klayout": [169, 170, 177], "virtualenv": 169, "libpython": 169, "dll": 169, "known": [169, 172, 174], "issu": [169, 172, 174, 175], "downgrad": [169, 174], "ask": 169, "restart": [169, 174, 178, 179, 181, 192], "afterward": [169, 170], "evolv": [169, 183], "realli": [169, 182], "simultan": 169, "kqc_2nd": 169, "know": [169, 170, 173, 179], "klayout_hom": 169, "klayout_alt": 169, "mix": 169, "subsect": 169, "ln": 169, "path_to_kqcircuit": 169, "kqcircuits_script": [169, 177, 181, 182, 183], "kqcircuits_requir": [169, 177, 183], "prompt": [169, 170], "administr": 169, "privileg": 169, "homepath": [169, 173], "mklink": 169, "powershel": 169, "ye": 169, "mayb": 169, "won": [169, 170], "bulk": 169, "win": [169, 170, 177], "mac": [169, 170, 173, 177, 182], "debugg": [170, 180], "autom": [170, 172, 190, 193], "suitabl": [170, 173, 187, 188], "viewer": [170, 179, 189], "compat": [170, 173], "safe": 170, "interfer": 170, "yet": [170, 178, 193], "bracket": 170, "trust": 170, "easier": 170, "troubleshoot": 170, "subsitut": 170, "dep": 170, "rewrit": 170, "wipe": 170, "advanc": [170, 178, 181], "categori": 170, "core": [170, 171, 186], "linter": 170, "netlist_as_graph": [170, 173, 177], "publicli": 170, "abl": [170, 181], "upload": 170, "double_pads_sim": [170, 187], "elsewher": [170, 182], "ipynb": [170, 187], "tofu": 170, "rare": [170, 183], "verifi": [170, 173, 182], "legitim": 170, "constraint": 170, "unsaf": 170, "substitut": 170, "tox": 171, "pytest": [171, 177], "pylint": 171, "lint": 171, "ini": 171, "framework": [171, 172, 187, 190], "num": 171, "reflect": 171, "propos": 171, "test_load_librari": 171, "test_invalid_nam": 171, "approach": [171, 174, 186, 188], "u": [171, 183], "our": [171, 174, 183], "understand": [171, 181], "unfortun": 171, "repetit": 171, "consider": 171, "cov": 171, "comprehens": 171, "happi": 171, "failur": 171, "similarli": [171, 188, 189], "bug": [171, 181], "fail": 171, "prior": 171, "wil": 171, "reintroduc": 171, "conftest": 171, "reduc": [172, 187], "effort": 172, "processor": 172, "instantli": 172, "exchang": 172, "dimension": [172, 187, 188], "qpu": 172, "assembl": 172, "fabric": [172, 173], "miscellan": [172, 180, 183], "trademark": 172, "page": [172, 183, 193], "simplest": [173, 188], "instant": 173, "rather": 173, "codebas": 173, "simulation_script": 173, "parti": 173, "mask_script": 173, "yourself": 173, "homebrew": 173, "brew": 173, "cask": 173, "becaus": [173, 181, 182], "app": 173, "finder": 173, "bugfix": 173, "stabil": 173, "27": [173, 179], "13": 173, "17": 173, "microsoft": 173, "server": 173, "2022": 173, "talk": 173, "mental": 173, "appdata": [173, 185], "klayout_app": 173, "st": 173, "dynam": [173, 188], "sonoma": 173, "still": [173, 182], "higher": 173, "heavyweight": 173, "hw": 173, "proce": 173, "bigsur": 173, "setuptool": 173, "_distutils_hack": 173, "v52": 173, "v57": 173, "instruct": [173, 178], "sometim": [173, 181], "dir": 173, "binari": [173, 185], "__path__": 173, "queri": 173, "sy": 173, "version_info": 173, "x86_64": 173, "modern": 173, "macbook": 173, "henc": [173, 189], "numpi": 173, "scipi": 173, "macosx_10_9_x86_64": 173, "fetch": 173, "macosx_10_9_arm64": 173, "notic": [173, 182], "whatev": 173, "easiest": [174, 183], "migrat": 174, "uninstal": 174, "recent": 174, "menu": [174, 179, 180, 181, 183, 191], "panel": [174, 178, 179, 180, 183], "drag": [174, 178, 179, 181, 192], "press": [174, 178, 179, 181], "f2": [174, 178, 179], "underscor": 174, "f5": [174, 181, 182], "my": 174, "my_el": 174, "myelement": [174, 183], "capit": 174, "ctrl": 174, "reload": [174, 178, 180, 183], "drop": [174, 178, 179, 192], "canva": 174, "my_packag": 174, "safest": 174, "quirk": 174, "broken": 174, "reinstal": 174, "earlier": 174, "reloc": 174, "behind": 174, "tqdm": 174, "question": 175, "idea": 175, "discuss": 175, "polici": 176, "high": [177, 193], "pictur": 177, "console_script": 177, "mainli": [177, 183, 188], "meant": [177, 183], "librair": [177, 183], "variou": 177, "check_layer_prop": 177, "create_element_from_path": [177, 183], "gdiff": 177, "get_klayout_python_info": 177, "oas2dxf": 177, "dxf": 177, "mostli": [178, 183], "highlight": 178, "navig": [178, 179], "shift": [178, 179, 181, 182], "block": [178, 183], "toolbox": 178, "toolbar": [178, 179], "evok": 178, "anim": 178, "bring": 178, "few": [178, 186], "situat": 178, "accid": 178, "confirm": 178, "del": 178, "video": 178, "flexibl": [178, 188], "enter": 178, "export_cells_as_cod": 178, "nearbi": 178, "hardcod": [178, 183], "nice": 178, "x_port_a": 178, "x_port_a_corn": 178, "anywai": [178, 183], "unhid": [178, 179], "1t1_ground_grid": 178, "arrang": 178, "minut": 178, "anyth": 178, "quit": 179, "power": 179, "shortcut": 179, "ok": 179, "chiplibrari": 179, "mous": 179, "scroll": [179, 193], "littl": 179, "esc": 179, "hotkei": 180, "introduct": 180, "samplehold": 180, "particip": [180, 190], "pyepr": [180, 190], "demo_placing_a_pcel": 181, "icon": 181, "plai": 181, "exclam": 181, "often": [181, 183], "task": [181, 186, 192], "toggl": 181, "breakpoint": 181, "red": 181, "f9": 181, "stage": 181, "pop": 181, "cancel": 181, "asterisk": 181, "caught": 181, "unrespons": 181, "heavi": 181, "though": 181, "demo_pya_bas": 181, "test_wgc_airbridg": 181, "learn": 181, "photomask": 182, "product": 182, "effici": [182, 186], "observ": 182, "multiprocess": 182, "test_mask": 182, "de1": 182, "roughli": 182, "logging_setup": 182, "spcifi": 182, "de2": 182, "5700": 182, "dt1": 182, "qf1": 182, "my_chip": 182, "mcf": 182, "suppos": [182, 188], "proper": 182, "complic": [182, 186, 192], "mdemo": 182, "ch2": 182, "45000": 182, "30000": 182, "ch1": 182, "sx1": 182, "jt1": 182, "ac1": 182, "st1": 182, "jt2": 182, "65000": 182, "interest": 182, "fragment": 182, "fragmet": 182, "centerd": 182, "exploit": 182, "tip": 183, "trick": 183, "unlock": 183, "myelement2": 183, "offer": [183, 187], "nicer": 183, "myqubit": 183, "my_qubit": 183, "rubi": 183, "hide": 183, "simplecross": 183, "hold": 183, "len1": 183, "len2": 183, "cross_poli": 183, "simple_cross": 183, "scratch": 183, "especi": 183, "explan": [183, 184], "newchip1": 183, "default_samplehold": 183, "half_width": 183, "cross_cel": 183, "new_chip1": 183, "rf16": 183, "12000": 183, "quick": 183, "refpoint_nam": 183, "cap_refpoint": 183, "wn_port": 183, "wn_port_corn": 183, "port_b_corn": 183, "perhap": 183, "someel": 183, "refpoint_of_some_el": 183, "existing_ref": 183, "everywher": 183, "something_port": 183, "something_port_corn": 183, "wherev": 183, "logic": [183, 187], "hard": 183, "tree": 183, "strictli": 183, "aptli": 183, "wo": 183, "laid": 183, "encompass": 183, "plu": 183, "groud": 183, "formula": 183, "intuit": 183, "2nd": 183, "indium_bump": 183, "swap": 183, "layer_config_path": 183, "simpler": 183, "x_base_metal_gap_wo_grid": 183, "x_ground_grid_avoid": 183, "133": 183, "x_port": 183, "154": 183, "x_new_lay": 183, "999": 183, "new_lay": 183, "although": 183, "newli": 183, "default_layer_prop": 183, "rm": 183, "rd": 183, "element_path": 183, "incorpor": 183, "pycharm": 183, "studio": 183, "vim": 183, "neovim": 183, "slurm": [184, 186], "password": 184, "openmpi": 184, "install_softwar": 184, "mpi": [184, 186], "machin": [184, 186], "send": 184, "singularity_path": 184, "bash": 184, "sbatch_paramet": [184, 186], "kqc_remote_account": [184, 186], "sim_1": 184, "sim_2": 184, "sim_n": 184, "job": 184, "sim_i_tmp_fold": 184, "nohup_runid": 184, "runid": 184, "watch": 184, "cat": 184, "shell": [185, 186], "liner": 185, "initialis": 185, "admin": 185, "priviledg": 185, "elmer_help": 186, "gmsh_helper": 186, "sif": 186, "capacitancematrix": 186, "electric_potenti": 186, "pvsm": 186, "waveguides_n_guides_1": 186, "waveguides_n_guides_2": 186, "n_worker": 186, "elmer_n_process": 186, "thread": 186, "openmp": 186, "elmer_n_thread": 186, "benefici": 186, "relationship": 186, "independentprocess": 186, "parallelizationsecond": 186, "ofparallel": 186, "sequenti": 186, "worker": 186, "floor": 186, "run_gmsh_gui": 186, "run_elmergrid": 186, "run_elm": 186, "run_paraview": 186, "omp": 186, "gmsh_n_thread": 186, "bsd": 186, "benefit": 186, "multithread": 186, "sbatch": 186, "max_threads_per_nod": 186, "max": 186, "elmer_mem": 186, "64g": 186, "elmer_tim": 186, "00": 186, "gmsh_mem": 186, "alloc": 186, "gmsh_time": 186, "project_0": 186, "bill": 186, "simulation_mesh": 186, "afterok": 186, "sent": 186, "queue": 186, "elmerfem": [186, 189], "elmercsc": [186, 189], "org": [186, 189], "suffic": 186, "scatter": 187, "snp": 187, "touchston": 187, "s1p": 187, "s2p": 187, "s3p": 187, "forth": 187, "emploi": 187, "export_paramet": [187, 189], "extractor": [187, 190], "consult": [187, 188], "estim": 187, "mutual": 187, "c_i_j": 187, "c_i_i": 187, "lifetim": 187, "eig": 187, "eigenvalu": 187, "_energi": 187, "cv": 187, "export_epr": 187, "post_process_script": 187, "_epr": 187, "csv": 187, "accuraci": 187, "cpw_cross_section_sim": 187, "waveguides_sim_xsect": [187, 193], "xmons_direct_coupling_pyepr": 187, "pyepr_exampl": 187, "t_1": 187, "intermediate_processing_command": 187, "t1_estim": 187, "queu": 187, "lossi": 187, "coher": 187, "master": 187, "thesi": 187, "2023": 187, "focus": 188, "distinguish": 188, "snippet": 188, "refp": 188, "mandatori": [188, 189], "100um": 188, "port_2": 188, "port_2_corn": 188, "port_3": 188, "port_3_corn": 188, "multipurpos": 188, "airbridge_flyov": 188, "joint": 188, "parameter": [188, 189], "purpl": 188, "troubl": 188, "port_cplr0": 188, "port_cplr1": 188, "port_cplr2": 188, "revert": 188, "essenti": 188, "swissmonsimul": 188, "port_cplr0_corn": 188, "port_cplr1_corn": 188, "port_cplr2_corn": 188, "squid_port_squid_a": 188, "squid_port_squid_b": 188, "portion": 188, "variat": 188, "procedur": 188, "eas": 188, "arm_length_500": 188, "gap_sweep": 188, "ansys_execut": 189, "swissmon_simulation_output": 189, "dir_path": 189, "ironpython": 189, "gdsii": 189, "meta": 189, "occurr": 189, "incomplet": 189, "manner": 189, "dev": 189, "abil": 190, "until": 190, "guidanc": 190, "summari": 191, "parameteriz": 191, "primit": 191, "emb": 191, "onto": 191, "archiv": 191, "traceabl": 191, "thought": 191, "manipul": 192, "interpret": 192, "browser": 192, "low": 193, "7": 193, "newest": 193, "lightweight": 193, "klayoutmatthia": 193, "docintro": 193, "docrefer": 193, "docgrow": 193, "docetch": 193}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [68, 0, 0, "-", "junctions"], [75, 0, 0, "-", "klayout_view"], [76, 0, 0, "-", "layer_cluster"], [77, 0, 0, "-", "layer_config"], [80, 0, 0, "-", "masks"], [85, 0, 0, "-", "pya_resolver"], [86, 0, 0, "-", "qubits"], [93, 0, 0, "-", "run"], [94, 0, 0, "-", "simulations"], [126, 0, 0, "-", "test_structures"], [136, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "smooth_capacitor"], [57, 0, 0, "-", "spiral_resonator_polygon"], [58, 0, 0, "-", "tsvs"], [62, 0, 0, "-", "waveguide_composite"], [63, 0, 0, "-", "waveguide_coplanar"], [64, 0, 0, "-", "waveguide_coplanar_curved"], [65, 0, 0, "-", "waveguide_coplanar_splitter"], [66, 0, 0, "-", "waveguide_coplanar_straight"], [67, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.smooth_capacitor": [[56, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[56, 2, 1, "", "build"], [56, 2, 1, "", "can_create_from_shape_impl"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[57, 1, 1, "", "SpiralResonatorPolygon"], [57, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[57, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[59, 0, 0, "-", "tsv"], [60, 0, 0, "-", "tsv_ellipse"], [61, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[59, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[59, 2, 1, "", "create"], [59, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[60, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[60, 2, 1, "", "create_tsv_connector"], [60, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[61, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[61, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[62, 1, 1, "", "Node"], [62, 1, 1, "", "WaveguideComposite"], [62, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[62, 3, 1, "", "align"], [62, 3, 1, "", "angle"], [62, 2, 1, "", "deserialize"], [62, 3, 1, "", "element"], [62, 3, 1, "", "inst_name"], [62, 3, 1, "", "length_before"], [62, 3, 1, "", "length_increment"], [62, 2, 1, "", "nodes_from_string"], [62, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[62, 2, 1, "", "build"], [62, 2, 1, "", "check_node_type"], [62, 2, 1, "", "coerce_parameters_impl"], [62, 2, 1, "", "create"], [62, 2, 1, "", "get_segment_cells"], [62, 2, 1, "", "get_segment_lengths"], [62, 2, 1, "", "produce_fixed_length_waveguide"], [62, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[63, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[63, 2, 1, "", "build"], [63, 2, 1, "", "can_create_from_shape_impl"], [63, 2, 1, "", "get_corner_data"], [63, 2, 1, "", "is_continuous"], [63, 2, 1, "", "parameters_from_shape_impl"], [63, 2, 1, "", "produce_end_termination"], [63, 2, 1, "", "produce_waveguide"], [63, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[64, 1, 1, "", "WaveguideCoplanarCurved"], [64, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[64, 2, 1, "", "build"], [64, 2, 1, "", "coerce_parameters_impl"], [64, 2, 1, "", "create_curve_arcs"], [64, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[65, 1, 1, "", "WaveguideCoplanarSplitter"], [65, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[65, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[66, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[67, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[67, 2, 1, "", "build"]], "kqcircuits.junctions": [[69, 0, 0, "-", "junction"], [70, 0, 0, "-", "manhattan"], [71, 0, 0, "-", "manhattan_single_junction"], [72, 0, 0, "-", "no_squid"], [73, 0, 0, "-", "sim"], [74, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[69, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[69, 3, 1, "", "LIBRARY_DESCRIPTION"], [69, 3, 1, "", "LIBRARY_NAME"], [69, 3, 1, "", "LIBRARY_PATH"], [69, 2, 1, "", "coerce_parameters_impl"], [69, 2, 1, "", "create"], [69, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[70, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[70, 2, 1, "", "build"], [70, 2, 1, "", "produce_contact_pads"], [70, 2, 1, "", "produce_manhattan_squid"], [70, 2, 1, "", "produce_tp_large"], [70, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[71, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[72, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[72, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[73, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[74, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[75, 1, 1, "", "KLayoutView"], [75, 6, 1, "", "MissingUILibraryException"], [75, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[75, 5, 1, "", "active_cell"], [75, 2, 1, "", "add_default_layers"], [75, 5, 1, "", "cell_view"], [75, 2, 1, "", "clear_layers"], [75, 2, 1, "", "close"], [75, 2, 1, "", "create_top_cell"], [75, 2, 1, "", "export_all_layers_bitmap"], [75, 2, 1, "", "export_layers_bitmaps"], [75, 2, 1, "", "export_pcell_png"], [75, 2, 1, "", "focus"], [75, 2, 1, "", "get_active_cell"], [75, 2, 1, "", "get_active_cell_view"], [75, 2, 1, "", "get_active_layout"], [75, 2, 1, "", "get_pixels"], [75, 2, 1, "", "insert_cell"], [75, 5, 1, "", "layout"], [75, 3, 1, "", "layout_view"], [75, 2, 1, "", "show"], [75, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[76, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[76, 2, 1, "", "all_layers"], [76, 3, 1, "", "extra_layers"], [76, 3, 1, "", "face_id"], [76, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[78, 0, 0, "-", "default_layer_config"], [79, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[81, 0, 0, "-", "mask_export"], [82, 0, 0, "-", "mask_layout"], [83, 0, 0, "-", "mask_set"], [84, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[81, 4, 1, "", "export_bitmaps"], [81, 4, 1, "", "export_chip"], [81, 4, 1, "", "export_designs"], [81, 4, 1, "", "export_docs"], [81, 4, 1, "", "export_junction_parameters"], [81, 4, 1, "", "export_mask"], [81, 4, 1, "", "export_mask_set"], [81, 4, 1, "", "export_masks_of_face"], [81, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[82, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[82, 2, 1, "", "add_chips_map"], [82, 3, 1, "", "added_chips"], [82, 3, 1, "", "align_to"], [82, 3, 1, "", "bbox_face_ids"], [82, 2, 1, "", "build"], [82, 3, 1, "", "chip_box_offset"], [82, 3, 1, "", "chip_copies"], [82, 3, 1, "", "chip_size"], [82, 3, 1, "", "chip_trans"], [82, 3, 1, "", "chips_map"], [82, 3, 1, "", "chips_map_legend"], [82, 3, 1, "", "chips_map_offset"], [82, 3, 1, "", "chips_placed_by_position_label"], [82, 3, 1, "", "covered_region_excluded_layers"], [82, 3, 1, "", "dice_width"], [82, 3, 1, "", "edge_clearance"], [82, 3, 1, "", "extra_chips"], [82, 3, 1, "", "extra_id"], [82, 2, 1, "", "face"], [82, 3, 1, "", "face_id"], [82, 2, 1, "", "insert_chip_copy_labels"], [82, 2, 1, "", "insert_chips"], [82, 3, 1, "", "layers_to_mask"], [82, 3, 1, "", "layout"], [82, 3, 1, "", "mask_export_density_layers"], [82, 3, 1, "", "mask_export_layers"], [82, 3, 1, "", "mask_marker_offset"], [82, 3, 1, "", "mask_markers_dict"], [82, 3, 1, "", "mask_name_box_margin"], [82, 3, 1, "", "mask_name_offset"], [82, 3, 1, "", "mask_name_scale"], [82, 3, 1, "", "mask_text_scale"], [82, 3, 1, "", "mirror_labels"], [82, 3, 1, "", "name"], [82, 2, 1, "", "overwrite_chips_by_position_label"], [82, 2, 1, "", "position_label_to_two_coordinates"], [82, 3, 1, "", "remove_chips"], [82, 3, 1, "", "submasks"], [82, 3, 1, "", "text_margin"], [82, 3, 1, "", "top_cell"], [82, 2, 1, "", "two_coordinates_to_position_label"], [82, 3, 1, "", "version"], [82, 3, 1, "", "wafer_bottom_flat_length"], [82, 3, 1, "", "wafer_center"], [82, 3, 1, "", "wafer_rad"], [82, 3, 1, "", "wafer_top_flat_length"], [82, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[83, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[83, 2, 1, "", "add_chip"], [83, 2, 1, "", "add_mask_layout"], [83, 2, 1, "", "add_multi_face_mask_layout"], [83, 2, 1, "", "build"], [83, 2, 1, "", "chips_map_from_box_map"], [83, 3, 1, "", "chips_map_legend"], [83, 2, 1, "", "export"], [83, 3, 1, "", "export_drc"], [83, 3, 1, "", "export_path"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_layouts"], [83, 3, 1, "", "name"], [83, 3, 1, "", "used_chips"], [83, 3, 1, "", "version"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[84, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[84, 2, 1, "", "add_chips_map"], [84, 3, 1, "", "face_ids"], [84, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[85, 4, 1, "", "is_standalone_session"], [85, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[87, 0, 0, "-", "circular_transmon_single_island"], [88, 0, 0, "-", "concentric_transmon"], [89, 0, 0, "-", "double_pads"], [90, 0, 0, "-", "double_pads_splines"], [91, 0, 0, "-", "qubit"], [92, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[87, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[87, 2, 1, "", "build"], [87, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[88, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[89, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[90, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[91, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[91, 3, 1, "", "LIBRARY_DESCRIPTION"], [91, 3, 1, "", "LIBRARY_NAME"], [91, 3, 1, "", "LIBRARY_PATH"], [91, 2, 1, "", "coerce_parameters_impl"], [91, 2, 1, "", "produce_fluxline"], [91, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[92, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[92, 2, 1, "", "build"], [92, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[93, 4, 1, "", "argument_parser"], [93, 4, 1, "", "run"], [93, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[95, 0, 0, "-", "airbridges_sim"], [96, 0, 0, "-", "cross_section_simulation"], [97, 0, 0, "-", "empty_simulation"], [98, 0, 0, "-", "export"], [117, 0, 0, "-", "partition_region"], [118, 0, 0, "-", "port"], [119, 0, 0, "-", "post_process"], [120, 0, 0, "-", "simulation"], [121, 0, 0, "-", "single_element_simulation"], [122, 0, 0, "-", "single_xmons_full_chip_sim"], [123, 0, 0, "-", "waveguides_sim"], [124, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [125, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[95, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[95, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[96, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[96, 3, 1, "", "LIBRARY_NAME"], [96, 2, 1, "", "build"], [96, 2, 1, "", "get_parameters"], [96, 2, 1, "", "get_schema"], [96, 2, 1, "", "get_sim_layer"], [96, 2, 1, "", "get_simulation_data"], [96, 2, 1, "", "register_cell_layers_as_sim_layers"], [96, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[97, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[97, 2, 1, "", "build"]], "kqcircuits.simulations.export": [[99, 0, 0, "-", "ansys"], [102, 0, 0, "-", "elmer"], [105, 0, 0, "-", "export_and_run"], [106, 0, 0, "-", "export_singularity"], [107, 0, 0, "-", "remote_export_and_run"], [108, 0, 0, "-", "simulation_export"], [109, 0, 0, "-", "simulation_validate"], [110, 0, 0, "-", "solution"], [111, 0, 0, "-", "sonnet"], [114, 0, 0, "-", "util"], [115, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[100, 0, 0, "-", "ansys_export"], [101, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[100, 4, 1, "", "export_ansys"], [100, 4, 1, "", "export_ansys_bat"], [100, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[101, 1, 1, "", "AnsysCurrentSolution"], [101, 1, 1, "", "AnsysEigenmodeSolution"], [101, 1, 1, "", "AnsysHfssSolution"], [101, 1, 1, "", "AnsysQ3dSolution"], [101, 1, 1, "", "AnsysSolution"], [101, 1, 1, "", "AnsysVoltageSolution"], [101, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[101, 3, 1, "", "ansys_tool"], [101, 3, 1, "", "frequency"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "integrate_energies"], [101, 3, 1, "", "integrate_magnetic_flux"], [101, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[101, 3, 1, "", "ansys_tool"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "integrate_energies"], [101, 3, 1, "", "integrate_magnetic_flux"], [101, 3, 1, "", "max_delta_f"], [101, 3, 1, "", "min_frequency"], [101, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[101, 3, 1, "", "ansys_tool"], [101, 3, 1, "", "capacitance_export"], [101, 3, 1, "", "frequency"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "integrate_energies"], [101, 3, 1, "", "integrate_magnetic_flux"], [101, 3, 1, "", "max_delta_s"], [101, 3, 1, "", "sweep_count"], [101, 3, 1, "", "sweep_enabled"], [101, 3, 1, "", "sweep_end"], [101, 3, 1, "", "sweep_start"], [101, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[101, 3, 1, "", "ansys_tool"], [101, 3, 1, "", "frequency"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[101, 3, 1, "", "ansys_project_template"], [101, 3, 1, "", "ansys_tool"], [101, 3, 1, "", "frequency_units"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "maximum_passes"], [101, 3, 1, "", "mesh_size"], [101, 3, 1, "", "minimum_converged_passes"], [101, 3, 1, "", "minimum_passes"], [101, 3, 1, "", "percent_refinement"], [101, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[101, 3, 1, "", "ansys_tool"], [101, 3, 1, "", "frequency"], [101, 2, 1, "", "get_solution_data"], [101, 3, 1, "", "integrate_energies"], [101, 3, 1, "", "integrate_magnetic_flux"], [101, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[103, 0, 0, "-", "elmer_export"], [104, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[103, 4, 1, "", "export_elmer"], [103, 4, 1, "", "export_elmer_json"], [103, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[104, 1, 1, "", "ElmerCapacitanceSolution"], [104, 1, 1, "", "ElmerCrossSectionSolution"], [104, 1, 1, "", "ElmerEPR3DSolution"], [104, 1, 1, "", "ElmerSolution"], [104, 1, 1, "", "ElmerVectorHelmholtzSolution"], [104, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[104, 3, 1, "", "convergence_tolerance"], [104, 3, 1, "", "integrate_energies"], [104, 3, 1, "", "linear_system_method"], [104, 3, 1, "", "max_iterations"], [104, 3, 1, "", "p_element_order"], [104, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[104, 3, 1, "", "boundary_conditions"], [104, 3, 1, "", "convergence_tolerance"], [104, 3, 1, "", "integrate_energies"], [104, 3, 1, "", "linear_system_method"], [104, 3, 1, "", "max_iterations"], [104, 3, 1, "", "p_element_order"], [104, 3, 1, "", "run_inductance_sim"], [104, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[104, 3, 1, "", "convergence_tolerance"], [104, 3, 1, "", "linear_system_method"], [104, 3, 1, "", "max_iterations"], [104, 3, 1, "", "p_element_order"], [104, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[104, 2, 1, "", "get_solution_data"], [104, 3, 1, "", "is_axisymmetric"], [104, 3, 1, "", "max_error_scale"], [104, 3, 1, "", "max_outlier_fraction"], [104, 3, 1, "", "maximum_passes"], [104, 3, 1, "", "mesh_levels"], [104, 3, 1, "", "mesh_size"], [104, 3, 1, "", "minimum_passes"], [104, 3, 1, "", "percent_error"], [104, 3, 1, "", "tool"], [104, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[104, 3, 1, "", "conductivity"], [104, 3, 1, "", "convergence_tolerance"], [104, 3, 1, "", "frequency"], [104, 3, 1, "", "frequency_batch"], [104, 3, 1, "", "london_penetration_depth"], [104, 3, 1, "", "max_delta_s"], [104, 3, 1, "", "max_iterations"], [104, 3, 1, "", "nested_iteration"], [104, 3, 1, "", "quadratic_approximation"], [104, 3, 1, "", "second_kind_basis"], [104, 3, 1, "", "sweep_type"], [104, 3, 1, "", "tool"], [104, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[105, 4, 1, "", "export_and_run"], [105, 4, 1, "", "run_export_script"], [105, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[106, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[107, 4, 1, "", "remote_export_and_run"], [107, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[108, 4, 1, "", "copy_content_into_directory"], [108, 4, 1, "", "cross_combine"], [108, 4, 1, "", "cross_sweep_simulation"], [108, 4, 1, "", "cross_sweep_solution"], [108, 4, 1, "", "export_simulation_json"], [108, 4, 1, "", "export_simulation_oas"], [108, 4, 1, "", "get_combined_parameters"], [108, 4, 1, "", "get_post_process_command_lines"], [108, 4, 1, "", "sweep_simulation"], [108, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[109, 6, 1, "", "ValidateSimError"], [109, 4, 1, "", "flux_integration_layer_exists_if_needed"], [109, 4, 1, "", "get_port_names"], [109, 4, 1, "", "has_edgeport_when_forbidden"], [109, 4, 1, "", "has_no_ports_when_required"], [109, 4, 1, "", "simulation_and_solution_types_match"], [109, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[110, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[110, 2, 1, "", "get_parameters"], [110, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[112, 0, 0, "-", "parser"], [113, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[112, 4, 1, "", "apply_template"], [112, 4, 1, "", "box"], [112, 4, 1, "", "control"], [112, 4, 1, "", "polygon_head"], [112, 4, 1, "", "polygons"], [112, 4, 1, "", "port"], [112, 4, 1, "", "refplane"], [112, 4, 1, "", "refplanes"], [112, 4, 1, "", "symmetry"], [112, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[113, 4, 1, "", "export_sonnet"], [113, 4, 1, "", "export_sonnet_son"], [113, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[114, 4, 1, "", "export_layers"], [114, 4, 1, "", "find_edge_from_point_in_cell"], [114, 4, 1, "", "find_edge_from_point_in_polygons"], [114, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[116, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[116, 4, 1, "", "create_xsections_from_simulations"], [116, 4, 1, "", "find_layer_by_name"], [116, 4, 1, "", "free_layer_slots"], [116, 4, 1, "", "separate_signal_layer_shapes"], [116, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [116, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[117, 1, 1, "", "PartitionRegion"], [117, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[117, 2, 1, "", "limit_box"], [117, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[118, 1, 1, "", "EdgePort"], [118, 1, 1, "", "InternalPort"], [118, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[118, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[118, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[119, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[119, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[120, 1, 1, "", "Simulation"], [120, 4, 1, "", "get_simulation_layer_by_name"]], "kqcircuits.simulations.simulation.Simulation": [[120, 3, 1, "", "LIBRARY_NAME"], [120, 2, 1, "", "add_element"], [120, 2, 1, "", "build"], [120, 2, 1, "", "create_simulation_layers"], [120, 2, 1, "", "delete_instances"], [120, 2, 1, "", "etched_line"], [120, 2, 1, "", "face"], [120, 2, 1, "", "face_stack_list_of_lists"], [120, 2, 1, "", "face_z_levels"], [120, 2, 1, "", "from_cell"], [120, 2, 1, "", "get_layer"], [120, 2, 1, "", "get_layers"], [120, 2, 1, "", "get_parameters"], [120, 2, 1, "", "get_port_data"], [120, 2, 1, "", "get_refpoints"], [120, 2, 1, "", "get_schema"], [120, 2, 1, "", "get_simulation_data"], [120, 2, 1, "", "ground_grid_region"], [120, 2, 1, "", "insert_cell"], [120, 2, 1, "", "insert_layer"], [120, 2, 1, "", "insert_layers_between_faces"], [120, 2, 1, "", "insert_stacked_up_layers"], [120, 2, 1, "", "ith_value"], [120, 2, 1, "", "pcell_params_by_name"], [120, 3, 1, "", "ports"], [120, 2, 1, "", "produce_layers"], [120, 2, 1, "", "produce_waveguide_to_port"], [120, 2, 1, "", "region_from_layer"], [120, 2, 1, "", "simplified_region"], [120, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[121, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[122, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[122, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[123, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[123, 2, 1, "", "build"], [123, 2, 1, "", "produce_ground_bumps"], [123, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[124, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[124, 2, 1, "", "build"], [124, 2, 1, "", "produce_launcher"], [124, 2, 1, "", "produce_launchers_SMA8"], [124, 2, 1, "", "produce_qubit"], [124, 2, 1, "", "produce_readout_resonator"], [124, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[125, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[125, 2, 1, "", "build"], [125, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[127, 0, 0, "-", "airbridge_dc"], [128, 0, 0, "-", "cross_test"], [129, 0, 0, "-", "junction_test_pads"], [132, 0, 0, "-", "stripes_test"], [133, 0, 0, "-", "stripes_test_increasing_width"], [134, 0, 0, "-", "test_structure"], [135, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[127, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[127, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[128, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[128, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[130, 0, 0, "-", "junction_test_pads"], [131, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[130, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[130, 2, 1, "", "coerce_parameters_impl"], [130, 2, 1, "", "create"], [130, 3, 1, "", "default_type"], [130, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[131, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[131, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[132, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[132, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[133, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[133, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[134, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[134, 3, 1, "", "LIBRARY_DESCRIPTION"], [134, 3, 1, "", "LIBRARY_NAME"], [134, 3, 1, "", "LIBRARY_PATH"], [134, 2, 1, "", "produce_etched_region"], [134, 2, 1, "", "produce_four_point_pads"], [134, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[135, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[135, 2, 1, "", "build"]], "kqcircuits.util": [[137, 0, 0, "-", "area"], [138, 0, 0, "-", "count_instances"], [139, 0, 0, "-", "coupler_lib"], [140, 0, 0, "-", "deep_delete"], [141, 0, 0, "-", "defaults_helper"], [142, 0, 0, "-", "dependencies"], [143, 0, 0, "-", "edit_node_plugin"], [144, 0, 0, "-", "export_helper"], [145, 0, 0, "-", "geometry_helper"], [146, 0, 0, "-", "geometry_json_encoder"], [147, 0, 0, "-", "groundgrid"], [148, 0, 0, "-", "gui_helper"], [149, 0, 0, "-", "import_helper"], [150, 0, 0, "-", "label"], [151, 0, 0, "-", "layout_to_code"], [152, 0, 0, "-", "library_helper"], [153, 0, 0, "-", "log_router"], [154, 0, 0, "-", "merge"], [155, 0, 0, "-", "netlist_extraction"], [156, 0, 0, "-", "netlist_graph"], [157, 0, 0, "-", "parameters"], [158, 0, 0, "-", "plugin_startup"], [159, 0, 0, "-", "refpoints"], [160, 0, 0, "-", "replace_junctions"], [161, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[137, 1, 1, "", "AreaReceiver"], [137, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[137, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[138, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[139, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[140, 4, 1, "", "deep_delete_all"], [140, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[141, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[142, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[143, 1, 1, "", "EditNodePlugin"], [143, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[143, 2, 1, "", "activated"], [143, 2, 1, "", "create_dialog"], [143, 2, 1, "", "deactivated"], [143, 2, 1, "", "deselect"], [143, 2, 1, "", "has_tracking_position"], [143, 2, 1, "", "mouse_click_event"], [143, 2, 1, "", "mouse_moved_event"], [143, 2, 1, "", "select"], [143, 2, 1, "", "tracking_position"], [143, 2, 1, "", "update"], [143, 2, 1, "", "update_form_from_node"], [143, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[143, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[144, 4, 1, "", "create_or_empty_tmp_directory"], [144, 4, 1, "", "export_drc_report"], [144, 4, 1, "", "generate_probepoints_from_file"], [144, 4, 1, "", "generate_probepoints_json"], [144, 4, 1, "", "get_active_or_new_layout"], [144, 4, 1, "", "get_klayout_version"], [144, 4, 1, "", "get_simulation_directory"], [144, 4, 1, "", "open_with_klayout_or_default_application"], [144, 4, 1, "", "write_commit_reference_file"], [144, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[145, 4, 1, "", "arc_points"], [145, 4, 1, "", "bezier_points"], [145, 4, 1, "", "bspline_points"], [145, 4, 1, "", "circle_polygon"], [145, 4, 1, "", "get_angle"], [145, 4, 1, "", "get_cell_path_length"], [145, 4, 1, "", "get_direction"], [145, 4, 1, "", "get_object_path_length"], [145, 4, 1, "", "is_clockwise"], [145, 4, 1, "", "merge_points_and_match_on_edges"], [145, 4, 1, "", "point_shift_along_vector"], [145, 4, 1, "", "region_with_merged_points"], [145, 4, 1, "", "region_with_merged_polygons"], [145, 4, 1, "", "simple_region"], [145, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[146, 1, 1, "", "GeometryJsonDecoder"], [146, 1, 1, "", "GeometryJsonEncoder"], [146, 4, 1, "", "decode_dict_as_python_obj"], [146, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[146, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[147, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[148, 4, 1, "", "get_all_node_elements"], [148, 4, 1, "", "get_nodes_near_position"], [148, 4, 1, "", "get_valid_node_elements"], [148, 4, 1, "", "node_from_text"], [148, 4, 1, "", "node_to_text"], [148, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[149, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[150, 1, 1, "", "LabelOrigin"], [150, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[150, 3, 1, "", "BOTTOMLEFT"], [150, 3, 1, "", "BOTTOMRIGHT"], [150, 3, 1, "", "TOPLEFT"], [150, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.layout_to_code": [[151, 4, 1, "", "convert_cells_to_code"], [151, 4, 1, "", "extract_pcell_data_from_views"], [151, 4, 1, "", "get_node_params"], [151, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[152, 4, 1, "", "delete_all_libraries"], [152, 4, 1, "", "delete_library"], [152, 4, 1, "", "element_by_class_name"], [152, 4, 1, "", "get_library_paths"], [152, 4, 1, "", "load_libraries"], [152, 4, 1, "", "to_library_name"], [152, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[153, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[154, 4, 1, "", "convert_child_instances_to_static"], [154, 4, 1, "", "merge_layers"], [154, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[155, 4, 1, "", "export_cell_netlist"], [155, 4, 1, "", "extract_circuits"], [155, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[156, 4, 1, "", "draw_graph"], [156, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[157, 1, 1, "", "Param"], [157, 4, 1, "", "add_parameter"], [157, 4, 1, "", "add_parameters_from"], [157, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[157, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[157, 3, 1, "", "TypeBoolean"], [157, 3, 1, "", "TypeDouble"], [157, 3, 1, "", "TypeInt"], [157, 3, 1, "", "TypeLayer"], [157, 3, 1, "", "TypeList"], [157, 3, 1, "", "TypeNone"], [157, 3, 1, "", "TypeShape"], [157, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[158, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[159, 1, 1, "", "JunctionSimPort"], [159, 1, 1, "", "RefpointToEdgePort"], [159, 1, 1, "", "RefpointToInternalPort"], [159, 1, 1, "", "RefpointToSimPort"], [159, 1, 1, "", "Refpoints"], [159, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[159, 3, 1, "", "face"], [159, 3, 1, "", "other_refpoint"], [159, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[159, 3, 1, "", "face"], [159, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[159, 3, 1, "", "cell"], [159, 2, 1, "", "dict"], [159, 2, 1, "", "items"], [159, 2, 1, "", "keys"], [159, 3, 1, "", "layer"], [159, 3, 1, "", "rec_levels"], [159, 3, 1, "", "trans"], [159, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[159, 3, 1, "", "a"], [159, 3, 1, "", "airbridge"], [159, 3, 1, "", "b"], [159, 3, 1, "", "face"], [159, 3, 1, "", "over_etching"], [159, 3, 1, "", "refpoint"], [159, 3, 1, "", "side"], [159, 3, 1, "", "term1"], [159, 3, 1, "", "towards"], [159, 3, 1, "", "turn_radius"], [159, 3, 1, "", "use_internal_ports"], [159, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[160, 1, 1, "", "JunctionEntry"], [160, 4, 1, "", "convert_cells_to_static"], [160, 4, 1, "", "copy_one_layer_of_cell"], [160, 4, 1, "", "extract_junctions"], [160, 4, 1, "", "get_tuned_junction_json"], [160, 4, 1, "", "place_junctions"], [160, 4, 1, "", "replace_squid"], [160, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[161, 4, 1, "", "polygon_with_hsym"], [161, 4, 1, "", "polygon_with_sym"], [161, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 167, 172], "modul": [1, 2, 28, 30, 40, 44, 51, 58, 68, 77, 80, 86, 94, 98, 99, 102, 111, 115, 126, 129, 136, 170], "content": [1, 2, 28, 30, 40, 44, 51, 58, 68, 77, 80, 86, 94, 98, 99, 102, 111, 115, 126, 129, 136], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 174, 183], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 174, 182, 183], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": 21, "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 164, 174, 178, 183, 188], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": 36, "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "smooth_capacitor": 56, "spiral_resonator_polygon": 57, "tsv": [58, 59, 60, 61], "tsv_ellips": 60, "tsv_standard": 61, "waveguide_composit": 62, "waveguide_coplanar": 63, "waveguide_coplanar_curv": 64, "waveguide_coplanar_splitt": 65, "waveguide_coplanar_straight": 66, "waveguide_coplanar_tap": 67, "junction": [68, 69, 70, 71, 72, 73, 74], "manhattan": 70, "manhattan_single_junct": 71, "no_squid": 72, "sim": 73, "squid": 74, "klayout_view": 75, "layer_clust": 76, "layer_config": [77, 78, 79], "default_layer_config": 78, "example_layer_config": 79, "mask": [80, 81, 82, 83, 84, 182], "mask_export": 81, "mask_layout": 82, "mask_set": 83, "multi_face_mask_layout": 84, "pya_resolv": 85, "qubit": [86, 87, 88, 89, 90, 91, 92], "circular_transmon_single_island": 87, "concentric_transmon": 88, "double_pad": 89, "double_pads_splin": 90, "swissmon": 92, "run": [93, 181, 185], "simul": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 184, 187, 188, 190], "airbridges_sim": 95, "cross_section_simul": 96, "empty_simul": 97, "export": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 182, 185, 186, 189], "ansi": [99, 100, 101, 189], "ansys_export": 100, "ansys_solut": 101, "elmer": [102, 103, 104, 184, 186, 189], "elmer_export": 103, "elmer_solut": 104, "export_and_run": 105, "export_singular": 106, "remote_export_and_run": 107, "simulation_export": 108, "simulation_valid": 109, "solut": 110, "sonnet": [111, 112, 113, 189], "parser": 112, "sonnet_export": 113, "util": [114, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177], "xsection": [115, 116, 193], "xsection_export": 116, "partition_region": 117, "port": [118, 188], "post_process": 119, "single_element_simul": 121, "single_xmons_full_chip_sim": 122, "waveguides_sim": 123, "xmons_direct_coupling_full_chip_sim": 124, "xmons_direct_coupling_sim": 125, "test_structur": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "airbridge_dc": 127, "cross_test": 128, "junction_test_pad": [129, 130, 131], "junction_test_pads_simpl": 131, "stripes_test": 132, "stripes_test_increasing_width": 133, "tsv_test_pattern": 135, "area": 137, "count_inst": 138, "coupler_lib": 139, "deep_delet": 140, "defaults_help": 141, "depend": [142, 169, 170], "edit_node_plugin": 143, "export_help": 144, "geometry_help": 145, "geometry_json_encod": 146, "groundgrid": 147, "gui_help": 148, "import_help": 149, "label": 150, "layout_to_cod": 151, "library_help": 152, "log_rout": 153, "merg": 154, "netlist_extract": 155, "netlist_graph": 156, "paramet": [157, 164, 178, 183, 187], "plugin_startup": 158, "refpoint": [159, 183], "replace_junct": 160, "symmetric_polygon": 161, "cite": 162, "contribut": 163, "version": [163, 173], "architectur": 164, "pcell": 164, "librari": [164, 181, 183], "pya": 164, "resolv": 164, "code": [165, 178, 183, 193], "style": 165, "contain": 166, "cli": 166, "usag": [166, 170, 192], "docker": 166, "ci": 166, "singular": 166, "develop": [168, 169, 170, 181], "guid": [168, 180], "gui": [169, 178, 189, 193], "setup": [169, 170], "prerequisit": [169, 170], "python": [169, 170, 173, 183], "sourc": 169, "instal": [169, 170, 173, 174], "unlink": 169, "updat": [169, 170], "secondari": 169, "manual": [169, 173], "symlink": 169, "linux": 169, "maco": 169, "window": 169, "standalon": 170, "1": 170, "basic": [170, 182], "2": 170, "reproduc": 170, "secur": 170, "3": 170, "exclus": 170, "environ": 170, "extens": 170, "pypi": 170, "jupyt": 170, "notebook": 170, "requir": 170, "test": 171, "unit": 171, "kqc": [172, 193], "logo": 172, "indic": 172, "tabl": 172, "klayout": [173, 181, 189, 193], "known": 173, "issu": 173, "differ": 173, "packag": [173, 174], "get": 174, "start": 174, "salt": 174, "first": [174, 181], "look": 174, "around": 174, "set": 174, "up": 174, "user": [174, 180], "directori": 174, "defin": [174, 183], "custom": 174, "upgrad": 174, "remov": 174, "releas": 174, "note": 174, "support": 175, "trademark": 176, "gener": [177, 188], "structur": [177, 183], "miscellan": 177, "file": [177, 183, 193], "system": [177, 183], "hierarchi": [177, 183], "featur": [178, 187], "us": [178, 181], "hotkei": 178, "introduct": 178, "place": 178, "modifi": [178, 182], "waveguid": 178, "edit": 178, "waveguidecomposit": 178, "node": 178, "convert": 178, "menu": 178, "command": 178, "point": 179, "click": 179, "workflow": [179, 183, 184], "tutori": [179, 182, 183], "macro": 181, "exampl": [181, 183], "interact": 181, "applic": 181, "creat": [181, 193], "new": [181, 183], "panel": 181, "access": 181, "current": 181, "activ": 181, "klayoutview": 181, "debugg": 181, "reload": 181, "script": 182, "ground": 182, "grid": 182, "ad": [182, 183], "multi": 182, "face": [182, 183, 188], "composit": 182, "map": 182, "class": [183, 188], "build": 183, "an": 183, "insert": 183, "samplehold": 183, "type": 183, "layer": 183, "configur": 183, "open": 183, "from": [183, 189], "id": 183, "remot": 184, "one": 185, "line": 185, "gmsh": 186, "": 187, "matrix": 187, "capacit": 187, "eigenmod": 187, "energi": 187, "integr": 187, "particip": 187, "ratio": 187, "cross": [187, 193], "section": [187, 193], "pyepr": 187, "object": 188, "The": 188, "box": 188, "stack": 188, "subclass": 188, "singl": 188, "geometri": [188, 189], "sweep": 188, "function": 189, "extern": 190, "tool": [190, 193], "terminologi": 191, "imag": 193, "call": 193, "process": 193, "x": 193}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [58, "module-kqcircuits.elements.tsvs"], [68, "module-kqcircuits.junctions"], [77, "module-kqcircuits.layer_config"], [80, "module-kqcircuits.masks"], [86, "module-kqcircuits.qubits"], [94, "module-kqcircuits.simulations"], [98, "module-kqcircuits.simulations.export"], [99, "module-kqcircuits.simulations.export.ansys"], [102, "module-kqcircuits.simulations.export.elmer"], [111, "module-kqcircuits.simulations.export.sonnet"], [115, "module-kqcircuits.simulations.export.xsection"], [126, "module-kqcircuits.test_structures"], [129, "module-kqcircuits.test_structures.junction_test_pads"], [136, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.smooth_capacitor": [[56, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[57, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[58, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[59, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[60, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[61, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[62, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[63, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[64, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[65, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[66, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[67, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[68, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[69, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[70, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[71, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[72, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[73, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[74, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[75, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[76, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[77, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[78, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[79, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[80, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[81, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[82, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[83, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[84, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[85, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[86, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[87, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[88, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[89, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[90, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[91, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[92, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[93, "module-kqcircuits.run"]], "kqcircuits.simulations": [[94, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[95, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[96, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[97, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.export": [[98, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[99, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[100, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[101, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[102, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[103, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[104, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[105, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[106, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[107, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[108, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[109, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[110, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[111, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[112, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[113, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[114, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[115, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.xsection_export": [[116, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[117, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[118, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[119, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[120, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[121, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[122, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[123, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[124, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[125, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[126, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[127, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[128, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[129, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[130, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[131, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[132, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[133, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[134, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[135, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[136, "kqcircuits-util"]], "kqcircuits.util.area": [[137, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[138, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[139, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[140, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[141, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[142, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[143, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[144, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[145, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[146, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[147, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[148, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[149, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[150, "module-kqcircuits.util.label"]], "kqcircuits.util.layout_to_code": [[151, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[152, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[153, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[154, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[155, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[156, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[157, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[158, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[159, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[160, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[161, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[162, "citing"]], "Contributing": [[163, "contributing"]], "Versioning": [[163, "versioning"]], "Architecture": [[164, "architecture"]], "Elements": [[164, "elements"]], "PCell parameters": [[164, "pcell-parameters"]], "Libraries": [[164, "libraries"], [183, "libraries"]], "pya resolver": [[164, "pya-resolver"]], "Coding Style": [[165, "coding-style"]], "Containers": [[166, "containers"]], "CLI usage": [[166, "cli-usage"]], "Docker CI usage": [[166, "docker-ci-usage"]], "Singularity usage": [[166, "singularity-usage"]], "Documentation": [[167, "documentation"], [172, "documentation"]], "Developer Guide": [[168, "developer-guide"]], "Developer GUI Setup": [[169, "developer-gui-setup"]], "Prerequisites": [[169, "prerequisites"], [170, "prerequisites"]], "Python": [[169, "python"]], "Sources": [[169, "sources"]], "Install": [[169, "install"]], "Unlinking": [[169, "unlinking"]], "Update": [[169, "update"]], "Secondary install": [[169, "secondary-install"]], "Manual installation": [[169, "manual-installation"]], "Symlinks in Linux or MacOS": [[169, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[169, "symlinks-in-windows"]], "Installing dependencies": [[169, "installing-dependencies"]], "Developer Standalone module Setup": [[170, "developer-standalone-module-setup"]], "Installation": [[170, "installation"], [173, "installation"]], "1. Basic installation": [[170, "basic-installation"]], "2. Reproducible, Secure Installation": [[170, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[170, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[170, "dependency-extensions"]], "PyPI Installation": [[170, "pypi-installation"]], "Usage": [[170, "usage"], [192, "usage"]], "Jupyter notebook usage": [[170, "jupyter-notebook-usage"]], "Updating the required dependencies": [[170, "updating-the-required-dependencies"]], "Testing": [[171, "testing"]], "Unit tests": [[171, "unit-tests"]], "KQC logo": [[172, "logo"]], "Indices and tables": [[172, "indices-and-tables"]], "KLayout": [[173, "klayout"]], "Known installation issues": [[173, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[173, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[174, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[174, "installing-kqcircuits-salt-package"]], "First look around": [[174, "first-look-around"]], "Setting up a user package directory": [[174, "setting-up-a-user-package-directory"]], "Defining a custom element": [[174, "defining-a-custom-element"]], "Defining a custom chip": [[174, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[174, "upgrading-or-removing-salt-package"]], "Release Notes": [[174, "release-notes"]], "Support": [[175, "support"]], "Trademarks": [[176, "trademarks"]], "General Structure and Miscellaneous Utilities": [[177, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[177, "file-system-hierarchy"], [183, "file-system-hierarchy"]], "Miscellaneous Utilities": [[177, "miscellaneous-utilities"]], "GUI Features": [[178, "gui-features"]], "Useful hotkeys": [[178, "useful-hotkeys"]], "Introduction to Elements": [[178, "introduction-to-elements"]], "Placing Elements": [[178, "placing-elements"]], "Modifying Element parameters": [[178, "modifying-element-parameters"]], "Modifying waveguides": [[178, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[178, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[178, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[178, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[179, "point-and-click-workflow-tutorial"]], "User Guide": [[180, "user-guide"]], "Macro development": [[181, "macro-development"]], "Running the first example": [[181, "running-the-first-example"]], "Interacting with the KLayout application": [[181, "interacting-with-the-klayout-application"]], "Creating a new panel": [[181, "creating-a-new-panel"]], "Accessing the currently active panel": [[181, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[181, "using-klayoutview"]], "Debugger": [[181, "debugger"]], "Reloading libraries": [[181, "reloading-libraries"]], "Examples": [[181, "examples"]], "Mask export": [[182, "mask-export"]], "Tutorial": [[182, "tutorial"]], "Basic mask script and export": [[182, "basic-mask-script-and-export"]], "Ground grid": [[182, "ground-grid"]], "Adding and modifying chips": [[182, "adding-and-modifying-chips"]], "Multi-face masks": [[182, "multi-face-masks"]], "Composite mask maps": [[182, "composite-mask-maps"]], "Python workflow tutorial": [[183, "python-workflow-tutorial"]], "Structure of Element code": [[183, "structure-of-element-code"]], "Element class": [[183, "element-class"]], "Parameters": [[183, "parameters"]], "Build": [[183, "build"]], "Example of defining an Element class": [[183, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[183, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[183, "defining-sampleholder-types"]], "Refpoints": [[183, "refpoints"]], "KQCircuits\u2019 Layers": [[183, "kqcircuits-layers"]], "Faces": [[183, "faces"]], "Layer configuration files": [[183, "layer-configuration-files"]], "Adding a new face": [[183, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[183, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[184, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[185, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[186, "gmsh-elmer-export"]], "Simulation features": [[187, "simulation-features"]], "S-parameter matrix": [[187, "s-parameter-matrix"]], "Capacitance matrix": [[187, "capacitance-matrix"]], "Eigenmode": [[187, "eigenmode"]], "Energy integrals and participation ratio": [[187, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[187, "cross-sectional-simulations"]], "pyEPR": [[187, "pyepr"]], "Simulation objects": [[188, "simulation-objects"]], "The Simulation class": [[188, "the-simulation-class"]], "Box": [[188, "box"]], "Ports": [[188, "ports"]], "Face stack": [[188, "face-stack"]], "Simulation subclass": [[188, "simulation-subclass"]], "Single element subclass": [[188, "single-element-subclass"]], "General subclass": [[188, "general-subclass"]], "Geometry sweeps": [[188, "geometry-sweeps"]], "Export functions": [[189, "export-functions"]], "Ansys export": [[189, "ansys-export"]], "Elmer export": [[189, "elmer-export"]], "Sonnet export": [[189, "sonnet-export"]], "Geometry from Klayout GUI": [[189, "geometry-from-klayout-gui"]], "External simulation tools": [[190, "external-simulation-tools"]], "Terminology": [[191, "terminology"]], "Creating cross section images": [[193, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[193, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[193, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[193, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.smooth_capacitor"], [57, "module-kqcircuits.elements.spiral_resonator_polygon"], [58, "module-kqcircuits.elements.tsvs"], [59, "module-kqcircuits.elements.tsvs.tsv"], [60, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [61, "module-kqcircuits.elements.tsvs.tsv_standard"], [62, "module-kqcircuits.elements.waveguide_composite"], [63, "module-kqcircuits.elements.waveguide_coplanar"], [64, "module-kqcircuits.elements.waveguide_coplanar_curved"], [65, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [66, "module-kqcircuits.elements.waveguide_coplanar_straight"], [67, "module-kqcircuits.elements.waveguide_coplanar_taper"], [68, "module-kqcircuits.junctions"], [69, "module-kqcircuits.junctions.junction"], [70, "module-kqcircuits.junctions.manhattan"], [71, "module-kqcircuits.junctions.manhattan_single_junction"], [72, "module-kqcircuits.junctions.no_squid"], [73, "module-kqcircuits.junctions.sim"], [74, "module-kqcircuits.junctions.squid"], [75, "module-kqcircuits.klayout_view"], [76, "module-kqcircuits.layer_cluster"], [77, "module-kqcircuits.layer_config"], [78, "module-kqcircuits.layer_config.default_layer_config"], [79, "module-kqcircuits.layer_config.example_layer_config"], [80, "module-kqcircuits.masks"], [81, "module-kqcircuits.masks.mask_export"], [82, "module-kqcircuits.masks.mask_layout"], [83, "module-kqcircuits.masks.mask_set"], [84, "module-kqcircuits.masks.multi_face_mask_layout"], [85, "module-kqcircuits.pya_resolver"], [86, "module-kqcircuits.qubits"], [87, "module-kqcircuits.qubits.circular_transmon_single_island"], [88, "module-kqcircuits.qubits.concentric_transmon"], [89, "module-kqcircuits.qubits.double_pads"], [90, "module-kqcircuits.qubits.double_pads_splines"], [91, "module-kqcircuits.qubits.qubit"], [92, "module-kqcircuits.qubits.swissmon"], [93, "module-kqcircuits.run"], [94, "module-kqcircuits.simulations"], [95, "module-kqcircuits.simulations.airbridges_sim"], [96, "module-kqcircuits.simulations.cross_section_simulation"], [97, "module-kqcircuits.simulations.empty_simulation"], [98, "module-kqcircuits.simulations.export"], [99, "module-kqcircuits.simulations.export.ansys"], [100, "module-kqcircuits.simulations.export.ansys.ansys_export"], [101, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [102, "module-kqcircuits.simulations.export.elmer"], [103, "module-kqcircuits.simulations.export.elmer.elmer_export"], [104, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [105, "module-kqcircuits.simulations.export.export_and_run"], [106, "module-kqcircuits.simulations.export.export_singularity"], [107, "module-kqcircuits.simulations.export.remote_export_and_run"], [108, "module-kqcircuits.simulations.export.simulation_export"], [109, "module-kqcircuits.simulations.export.simulation_validate"], [110, "module-kqcircuits.simulations.export.solution"], [111, "module-kqcircuits.simulations.export.sonnet"], [112, "module-kqcircuits.simulations.export.sonnet.parser"], [113, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [114, "module-kqcircuits.simulations.export.util"], [115, "module-kqcircuits.simulations.export.xsection"], [116, "module-kqcircuits.simulations.export.xsection.xsection_export"], [117, "module-kqcircuits.simulations.partition_region"], [118, "module-kqcircuits.simulations.port"], [119, "module-kqcircuits.simulations.post_process"], [120, "module-kqcircuits.simulations.simulation"], [121, "module-kqcircuits.simulations.single_element_simulation"], [122, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [123, "module-kqcircuits.simulations.waveguides_sim"], [124, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [125, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [126, "module-kqcircuits.test_structures"], [127, "module-kqcircuits.test_structures.airbridge_dc"], [128, "module-kqcircuits.test_structures.cross_test"], [129, "module-kqcircuits.test_structures.junction_test_pads"], [130, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [131, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [132, "module-kqcircuits.test_structures.stripes_test"], [133, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [134, "module-kqcircuits.test_structures.test_structure"], [135, "module-kqcircuits.test_structures.tsv_test_pattern"], [136, "module-kqcircuits.util"], [137, "module-kqcircuits.util.area"], [138, "module-kqcircuits.util.count_instances"], [139, "module-kqcircuits.util.coupler_lib"], [140, "module-kqcircuits.util.deep_delete"], [141, "module-kqcircuits.util.defaults_helper"], [142, "module-kqcircuits.util.dependencies"], [143, "module-kqcircuits.util.edit_node_plugin"], [144, "module-kqcircuits.util.export_helper"], [145, "module-kqcircuits.util.geometry_helper"], [146, "module-kqcircuits.util.geometry_json_encoder"], [147, "module-kqcircuits.util.groundgrid"], [148, "module-kqcircuits.util.gui_helper"], [149, "module-kqcircuits.util.import_helper"], [150, "module-kqcircuits.util.label"], [151, "module-kqcircuits.util.layout_to_code"], [152, "module-kqcircuits.util.library_helper"], [153, "module-kqcircuits.util.log_router"], [154, "module-kqcircuits.util.merge"], [155, "module-kqcircuits.util.netlist_extraction"], [156, "module-kqcircuits.util.netlist_graph"], [157, "module-kqcircuits.util.parameters"], [158, "module-kqcircuits.util.plugin_startup"], [159, "module-kqcircuits.util.refpoints"], [160, "module-kqcircuits.util.replace_junctions"], [161, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[56, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[56, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[56, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[56, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[56, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[57, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[57, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[57, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[57, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[58, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[59, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[59, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[59, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[59, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[60, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[60, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[60, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[60, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[61, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[61, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[61, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[62, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[62, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[62, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[62, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[62, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[62, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[62, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[63, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[63, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[64, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[64, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[65, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[65, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[65, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[65, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[66, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[66, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[66, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[67, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[67, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[67, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[68, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[69, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[69, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[69, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[69, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[69, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[69, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[69, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[69, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[70, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[70, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[70, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[70, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[70, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[70, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[70, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[71, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[71, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[71, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[71, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[72, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[72, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[72, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[73, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[73, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[73, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[74, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[74, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[75, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[75, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[75, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[75, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[75, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[75, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[75, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[75, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[75, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[75, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[75, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[75, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[75, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[76, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[76, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[76, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[76, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[76, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[76, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[77, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[78, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[79, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[80, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[81, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[81, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[82, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[82, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "overwrite_chips_by_position_label() (kqcircuits.masks.mask_layout.masklayout method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.overwrite_chips_by_position_label"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[82, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[83, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[83, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[83, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[83, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[83, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[83, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[83, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[83, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[83, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[84, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[84, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[84, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[84, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[84, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[85, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[85, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[85, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[86, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[87, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[87, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[87, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[87, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[88, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[88, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[88, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[88, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[89, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[89, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[89, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[89, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[90, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[90, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[91, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[91, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[91, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[91, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[91, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[91, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[91, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[91, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[92, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[92, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[92, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[92, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[93, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[93, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[93, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[93, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[94, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[95, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[95, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[95, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[96, "module-kqcircuits.simulations.cross_section_simulation"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[96, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[97, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[97, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[97, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.export": [[98, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[99, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[100, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[100, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[100, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[100, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[101, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[101, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[102, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[103, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[103, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[103, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[103, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[104, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[104, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[105, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[105, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[105, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[105, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[106, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[106, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[107, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[107, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[107, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[108, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[108, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[109, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[109, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[109, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[110, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[110, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[110, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[110, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[111, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[112, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[112, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[113, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[113, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[113, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[113, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[114, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[114, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[114, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[114, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[114, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[115, "module-kqcircuits.simulations.export.xsection"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[116, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[116, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[117, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[117, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[117, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[117, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[117, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[118, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[118, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[118, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[118, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[118, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[118, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[119, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[119, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[119, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[120, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[120, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[120, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[120, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[120, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[120, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[120, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[120, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[120, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[121, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[121, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[122, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[122, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[122, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[123, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[123, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[123, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[123, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[123, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[124, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[124, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[125, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[125, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[125, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[125, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[126, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[127, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[127, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[127, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[128, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[128, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[128, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[129, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[130, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[130, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[130, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[130, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[130, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[130, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[131, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[131, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[131, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[132, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[132, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[132, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[133, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[133, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[133, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[134, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[134, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[134, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[135, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[135, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[135, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[136, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[137, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[137, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[137, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[137, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[138, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[138, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[139, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[139, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[140, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[140, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[140, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[141, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[141, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[142, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[142, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[143, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[143, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[144, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[144, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[145, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[145, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[146, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[146, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[146, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[146, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[146, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[146, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[147, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[147, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[148, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[148, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[149, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[149, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[150, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[150, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[150, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[150, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[150, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[150, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[150, "kqcircuits.util.label.produce_label"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[151, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[151, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[151, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[151, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[151, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[152, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[152, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[153, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[153, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[154, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[154, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[154, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[154, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[155, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[155, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[155, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[155, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[156, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[156, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[156, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[157, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[157, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[157, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[157, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[157, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[157, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[157, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[158, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[158, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[159, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[159, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[159, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[159, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[159, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[159, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[159, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[159, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[159, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[159, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[159, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[159, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[159, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[159, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[159, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.JunctionEntry"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[160, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[160, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[161, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[161, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[161, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[161, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})