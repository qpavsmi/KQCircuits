Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.epr_correction_export", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.epr_correction_export.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.epr_correction_export", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "develop": [0, 166, 174, 175, 176, 177, 183, 186, 188, 192], "wa": [0, 37, 83, 97, 154, 162, 175, 176, 177, 184, 185, 189, 191, 195], "start": [0, 5, 13, 19, 35, 55, 58, 63, 64, 65, 66, 79, 88, 89, 108, 115, 122, 132, 147, 154, 160, 163, 170, 173, 175, 176, 178, 184, 186, 187, 189, 191], "johann": [0, 165], "heinsoo": [0, 165], "aalto": [0, 69, 190], "univers": [0, 190], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 101, 102, 104, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 140, 146, 147, 148, 150, 151, 154, 157, 158, 159, 160, 163, 166, 167, 169, 170, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196], "final": [0, 63, 79, 84, 122, 186, 192], "kqc": [0, 94, 97, 106, 108, 159, 161, 162, 166, 167, 169, 172, 173, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 195], "version": [0, 1, 81, 82, 83, 84, 85, 148, 165, 169, 171, 172, 173, 177, 180, 182, 185, 186, 187, 189, 192, 196], "correspond": [0, 17, 19, 26, 37, 63, 79, 83, 85, 88, 89, 105, 119, 122, 127, 147, 151, 152, 154, 158, 167, 169, 173, 174, 177, 180, 181, 184, 186, 190, 191, 193, 194], "v0": [0, 176], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 28, 29, 31, 35, 36, 37, 38, 47, 55, 56, 57, 58, 63, 64, 65, 66, 70, 71, 72, 76, 79, 88, 90, 91, 92, 93, 97, 102, 105, 113, 114, 115, 117, 118, 120, 122, 126, 132, 136, 139, 147, 148, 153, 154, 157, 160, 161, 162, 163, 169, 173, 176, 177, 182, 185, 186, 190, 191], "tag": [0, 158, 166, 169, 173, 194], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "repositori": [0, 146, 169, 171, 173, 176, 177, 180, 190], "sinc": [0, 150, 173, 181, 186, 191], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 63, 71, 84, 88, 89, 93, 97, 102, 110, 122, 146, 150, 154, 159, 160, 163, 169, 172, 173, 176, 177, 181, 184, 185, 186, 187, 189, 191], "been": [0, 63, 84, 122, 155, 169, 177, 185], "see": [0, 2, 19, 37, 63, 79, 84, 96, 98, 102, 105, 114, 118, 122, 124, 125, 126, 127, 128, 163, 166, 167, 169, 172, 173, 176, 177, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 195], "cite": [0, 175], "section": [0, 64, 97, 102, 105, 118, 158, 167, 172, 173, 175, 177, 181, 183, 185, 186, 188, 191, 193], "other": [0, 2, 5, 13, 28, 34, 37, 38, 63, 64, 71, 72, 76, 77, 79, 90, 92, 97, 105, 108, 114, 122, 132, 141, 147, 156, 162, 163, 164, 165, 166, 167, 169, 173, 174, 175, 176, 180, 181, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196], "author": [0, 165], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 58, 63, 79, 81, 82, 83, 84, 85, 90, 122, 125, 126, 132, 137, 146, 154, 158, 159, 163, 167, 169, 175, 180, 181, 182, 183, 184, 191, 194, 195], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 154, 155, 167, 169, 170, 172, 176, 177, 181, 183, 185, 187, 189, 190, 191, 192, 193], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 63, 69, 70, 87, 92, 95, 97, 122, 128, 136, 155, 167], "library_descript": [1, 2, 5, 28, 37, 69, 70, 87, 92, 128, 136, 167], "library_path": [1, 2, 5, 28, 37, 69, 70, 87, 92, 128, 136, 155], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 64], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 64], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 64], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 138, 157], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 95, 126, 186], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 182, 184, 185, 186], "produce_qubit": [1, 2, 9, 10, 17, 26, 95, 126, 127], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 87, 92], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 185], "demotwofac": [1, 2, 10, 185], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 66, 84, 85, 88, 89, 90, 93, 97, 122, 132, 137, 150, 159, 160, 174, 181, 190, 191, 192], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 63, 65, 69, 70, 87, 92, 128, 131, 132], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 93, 124, 126, 158, 182, 186], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 95, 126], "quality_factor": [1, 2, 155, 185], "qualityfactor": [1, 2, 18, 84, 155, 185], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 58, 63, 64, 77, 82, 84, 88, 89, 90, 92, 97, 118, 122, 132, 136, 137, 152, 157, 163, 181, 182, 184, 186, 191, 192, 194, 196], "simpl": [1, 2, 13, 84, 86, 114, 122, 132, 133, 169, 185, 189], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 134, 135], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 70, 72, 76, 83, 84, 88, 89, 90, 92, 93, 102, 105, 120, 122, 123, 128, 132, 136, 137, 138, 141, 147, 148, 150, 154, 155, 157, 158, 159, 160, 162, 163, 169, 171, 173, 175, 180, 183, 184, 185, 190, 192, 193, 195], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 58, 63, 66, 122, 129, 138, 155, 162, 181, 191], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 59, 60, 69, 70, 128, 131, 132], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 59, 60, 63, 64, 65, 69, 70, 75, 76, 79, 83, 84, 85, 86, 92, 96, 97, 98, 101, 104, 109, 118, 122, 123, 124, 125, 126, 127, 128, 131, 132, 139, 145, 146, 150, 154, 155, 157, 161, 162, 167, 170, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 189, 190, 191, 192, 194], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 63], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 186], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 87, 88, 89, 90, 93, 191], "fluxlin": [1, 9, 23, 26, 28, 37, 87, 92, 93, 127], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 83, 130, 146, 163], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 122, 137], "tsv_ellips": [1, 28, 59], "tsvellips": [1, 28, 59, 61], "produce_impl": [1, 28, 37, 59, 61, 167], "create_tsv_connector": [1, 28, 59, 61], "tsv_standard": [1, 28, 59], "tsvstandard": [1, 28, 59, 62], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 63], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 95, 122], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 70, 75, 95, 122, 141, 167, 186], "insert_cel": [1, 26, 28, 37, 76, 95, 122, 127, 141, 154, 167, 184, 186, 191], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 58, 61, 62, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 90, 95, 97, 118, 119, 120, 122, 125, 132, 137, 138, 146, 157, 158, 162, 163, 177, 181, 183, 193], "pcell_params_by_nam": [1, 28, 37, 95, 122], "add_port": [1, 28, 37], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 95, 97, 122], "get_lay": [1, 28, 37, 92, 95, 97, 122, 186], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 186], "fingercapacitorsquar": [1, 28, 38, 141, 186], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 63, 114, 150, 181], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28], "smoothcapacitor": [1, 19, 28, 57, 141], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 58], "rectangular_paramet": [1, 28, 58], "waveguide_composit": [1, 28], "node": [1, 28, 63, 145, 150, 154, 159, 182, 183, 186, 189], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 63, 64, 65, 83, 88, 89, 92, 93, 113, 146, 150, 152, 154, 159, 162, 181, 185, 186], "align": [1, 28, 37, 54, 63, 76, 83, 92, 122, 130, 146, 150, 163, 181, 185, 186], "inst_nam": [1, 9, 10, 28, 37, 63, 76, 122, 150, 163, 186], "angl": [1, 17, 28, 36, 63, 64, 65, 66, 88, 89, 147, 150], "length_befor": [1, 28, 63, 150], "length_incr": [1, 28, 63, 150], "deseri": [1, 28, 63, 148], "nodes_from_str": [1, 28, 63], "waveguidecomposit": [1, 28, 63, 150, 154, 183, 186], "get_segment_cel": [1, 28, 63], "get_segment_length": [1, 28, 63], "produce_fixed_length_waveguid": [1, 28, 63], "snap_point": [1, 28, 63], "check_node_typ": [1, 28, 63], "produce_fixed_length_bend": [1, 28, 63], "waveguide_coplanar": [1, 28, 186], "waveguidecoplanar": [1, 28, 63, 64, 154, 181, 186], "produce_waveguid": [1, 28, 64, 95, 126], "get_corner_data": [1, 28, 64], "produce_end_termin": [1, 28, 64], "is_continu": [1, 28, 64], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 65, 88, 89, 147], "waveguidecoplanarcurv": [1, 28, 65], "build_geometri": [1, 28, 65, 67], "create_curve_arc": [1, 28, 65], "produce_curve_termin": [1, 28, 65], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 66], "t_cross_paramet": [1, 28, 66], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 67], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 63, 68], "junction": [1, 5, 9, 10, 13, 23, 26, 82, 88, 89, 90, 91, 92, 120, 122, 127, 131, 132, 133, 162, 163, 167, 175, 177, 186, 190, 191], "manhattan": [1, 5, 10, 13, 23, 26, 69, 70, 72, 90, 92, 127, 132], "produce_manhattan_squid": [1, 69, 71], "produce_tp_smal": [1, 69, 71], "produce_tp_larg": [1, 69, 71], "produce_contact_pad": [1, 69, 71], "manhattan_single_junct": [1, 69], "manhattansinglejunct": [1, 69, 72], "produce_manhattan_junct": [1, 69, 72], "no_squid": [1, 69], "nosquid": [1, 69, 73], "sim": [1, 10, 13, 23, 26, 69, 70, 90, 92, 117, 127, 132, 173, 176, 187, 188, 189, 191, 192], "squid": [1, 10, 13, 23, 26, 69, 70, 71, 73, 74, 87, 90, 91, 92, 93, 120, 127, 132, 163], "layer_config": [1, 175, 186], "default_layer_config": [1, 78, 186], "example_layer_config": [1, 78, 186], "mask": [1, 5, 35, 52, 54, 138, 169, 173, 175, 176, 180, 183, 186, 194], "mask_export": [1, 81], "export_mask_set": [1, 81, 82], "export_design": [1, 81, 82], "export_chip": [1, 81, 82], "export_masks_of_fac": [1, 81, 82], "export_mask": [1, 81, 82], "export_doc": [1, 81, 82], "export_bitmap": [1, 81, 82], "get_mask_layout_full_nam": [1, 81, 82], "export_junction_paramet": [1, 81, 82], "mask_layout": [1, 81, 82, 84, 85, 185], "masklayout": [1, 81, 82, 83, 84, 85], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 81, 82, 83, 84, 85, 95, 96, 97, 98, 109, 115, 118, 119, 122, 124, 125, 126, 127, 132, 137, 146, 147, 155, 157, 158, 159, 161, 163, 167, 173, 175, 176, 181, 182, 184, 185, 186, 190, 191, 192, 193, 195, 196], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 58, 61, 63, 66, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 90, 92, 95, 97, 99, 101, 102, 104, 105, 108, 109, 110, 111, 117, 119, 121, 122, 126, 132, 136, 137, 139, 146, 150, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 172, 176, 177, 182, 184, 185, 186, 187, 191, 192, 193], "with_grid": [1, 5, 81, 83, 84, 85, 122, 185], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 58, 63, 76, 77, 81, 83, 84, 85, 90, 122, 132, 137, 186], "layers_to_mask": [1, 81, 83, 185], "covered_region_excluded_lay": [1, 81, 83], "chips_map": [1, 81, 83, 84, 85], "align_to": [1, 37, 76, 81, 83, 122, 185, 186], "chips_map_legend": [1, 81, 83, 84], "wafer_rad": [1, 81, 83], "wafer_cent": [1, 81, 83], "chips_map_offset": [1, 81, 83], "wafer_top_flat_length": [1, 81, 83], "wafer_bottom_flat_length": [1, 81, 83], "dice_width": [1, 35, 81, 83], "text_margin": [1, 35, 81, 83], "chip_siz": [1, 81, 83, 185], "edge_clear": [1, 81, 83, 185], "remove_chip": [1, 81, 83], "chip_box_offset": [1, 81, 83], "chip_tran": [1, 81, 83], "mask_name_offset": [1, 81, 83], "mask_name_scal": [1, 81, 83], "mask_name_box_margin": [1, 81, 83], "mask_text_scal": [1, 81, 83], "mask_markers_dict": [1, 81, 83], "mask_marker_offset": [1, 81, 83], "mask_export_lay": [1, 79, 81, 83, 84], "mask_export_density_lay": [1, 81, 83], "submask": [1, 81, 83], "extra_id": [1, 81, 83], "extra_chip": [1, 81, 83], "top_cel": [1, 76, 81, 83, 150, 154, 163, 184, 194], "added_chip": [1, 81, 83], "chips_placed_by_position_label": [1, 81, 83], "chip_copi": [1, 81, 83], "mirror_label": [1, 81, 83], "bbox_face_id": [1, 81, 83, 84, 85], "add_chips_map": [1, 81, 83, 85, 185], "overwrite_chips_by_position_label": [1, 81, 83], "insert_chip": [1, 81, 83], "insert_chip_copy_label": [1, 81, 83], "two_coordinates_to_position_label": [1, 81, 83], "position_label_to_two_coordin": [1, 81, 83], "mask_set": [1, 81, 82, 185], "maskset": [1, 81, 82, 84, 85, 185], "export_drc": [1, 81, 82, 84], "used_chip": [1, 81, 84], "export_path": [1, 81, 84, 106, 159, 185], "add_mask_layout": [1, 81, 84, 185], "add_multi_face_mask_layout": [1, 81, 84, 85], "add_chip": [1, 81, 84, 185], "export": [1, 76, 77, 79, 81, 82, 83, 84, 95, 96, 98, 122, 124, 125, 126, 127, 146, 154, 158, 159, 163, 173, 175, 176, 177, 183, 184, 187, 190, 191, 193, 194, 196], "chips_map_from_box_map": [1, 81, 84], "multi_face_mask_layout": [1, 81], "multifacemasklayout": [1, 81, 84, 85], "qubit": [1, 9, 10, 17, 23, 26, 69, 126, 127, 167, 175, 177, 181, 182, 186, 190, 191, 192], "circular_transmon_single_island": [1, 87], "circulartransmonsingleisland": [1, 87, 88], "concentric_transmon": [1, 87], "concentrictransmon": [1, 87, 89], "double_pad": [1, 87], "doublepad": [1, 87, 90, 91], "double_pads_splin": [1, 87], "doublepadssplin": [1, 87, 91], "produce_squid": [1, 87, 92, 128, 131, 132], "swissmon": [1, 87, 182, 191, 192], "simul": [1, 26, 34, 36, 37, 38, 43, 48, 56, 57, 74, 79, 88, 89, 90, 92, 93, 138, 162, 169, 173, 175, 176, 177, 180, 183, 186, 188, 189, 192, 196], "ansi": [1, 95, 99, 111, 122, 143, 183, 189, 190, 191, 193], "ansys_export": [1, 95, 99, 100, 190, 192], "export_ansys_json": [1, 95, 99, 100, 101], "export_ansys_bat": [1, 95, 99, 100, 101], "export_ansi": [1, 95, 99, 100, 101, 190, 192, 193], "ansys_solut": [1, 95, 99, 100], "ansyssolut": [1, 95, 99, 100, 101, 102], "ansys_tool": [1, 95, 99, 100, 102, 190], "percent_refin": [1, 95, 99, 100, 102, 190], "maximum_pass": [1, 95, 99, 100, 102, 103, 105, 190], "minimum_pass": [1, 95, 99, 100, 102, 103, 105, 190], "minimum_converged_pass": [1, 95, 99, 100, 102, 190], "frequency_unit": [1, 95, 99, 100, 102, 190], "mesh_siz": [1, 95, 99, 100, 102, 103, 105], "simulation_flag": [1, 95, 99, 100, 102, 190], "ansys_project_templ": [1, 95, 99, 100, 102], "get_solution_data": [1, 95, 99, 100, 102, 103, 105], "ansyshfsssolut": [1, 95, 99, 100, 102], "frequenc": [1, 95, 99, 100, 102, 103, 105, 189, 190], "max_delta_": [1, 95, 99, 100, 102, 103, 105, 190], "sweep_en": [1, 95, 99, 100, 102, 190], "sweep_start": [1, 95, 99, 100, 102, 190], "sweep_end": [1, 95, 99, 100, 102, 190], "sweep_count": [1, 95, 99, 100, 102, 190], "sweep_typ": [1, 95, 99, 100, 102, 103, 105, 190], "capacitance_export": [1, 95, 99, 100, 102, 190], "integrate_energi": [1, 95, 99, 100, 102, 103, 105, 190], "integrate_magnetic_flux": [1, 95, 99, 100, 102], "ansysq3dsolut": [1, 95, 99, 100, 102], "percent_error": [1, 95, 99, 100, 102, 103, 105, 190], "ansyseigenmodesolut": [1, 95, 99, 100, 102], "min_frequ": [1, 95, 99, 100, 102, 190], "max_delta_f": [1, 95, 99, 100, 102, 190], "n_mode": [1, 95, 99, 100, 102, 190], "ansyscurrentsolut": [1, 95, 99, 100, 102], "ansysvoltagesolut": [1, 95, 99, 100, 102], "ansyscrosssectionsolut": [1, 95, 99, 100, 102], "get_ansys_solut": [1, 95, 99, 100, 102], "elmer": [1, 95, 99, 111, 169, 183, 188, 190, 191, 193], "elmer_export": [1, 95, 99, 103, 190, 192], "export_elmer_json": [1, 95, 99, 103, 104], "export_elmer_script": [1, 95, 99, 103, 104], "export_elm": [1, 95, 99, 103, 104, 189, 190, 192, 193], "elmer_solut": [1, 95, 99, 103], "elmersolut": [1, 95, 99, 103, 104, 105], "tool": [1, 55, 64, 95, 97, 99, 103, 105, 158, 173, 174, 175, 177, 181, 182, 183, 190, 191, 192, 195], "max_error_scal": [1, 95, 99, 103, 105], "max_outlier_fract": [1, 95, 99, 103, 105], "is_axisymmetr": [1, 95, 99, 103, 105], "mesh_level": [1, 95, 99, 103, 105], "vtu_output": [1, 95, 99, 103, 105], "elmervectorhelmholtzsolut": [1, 95, 99, 103, 105], "frequency_batch": [1, 95, 99, 103, 105], "london_penetration_depth": [1, 95, 97, 99, 103, 105, 118], "quadratic_approxim": [1, 95, 99, 103, 105], "second_kind_basi": [1, 95, 99, 103, 105], "use_av": [1, 95, 99, 103, 105], "conduct": [1, 95, 99, 103, 105], "nested_iter": [1, 95, 99, 103, 105], "convergence_toler": [1, 95, 99, 103, 105], "max_iter": [1, 95, 99, 103, 105], "elmercapacitancesolut": [1, 95, 99, 103, 105], "p_element_ord": [1, 95, 99, 103, 105], "linear_system_method": [1, 95, 99, 103, 105], "linear_system_precondit": [1, 95, 99, 103, 105], "elmercrosssectionsolut": [1, 95, 99, 103, 105, 117], "boundary_condit": [1, 95, 99, 103, 105], "run_inductance_sim": [1, 95, 99, 103, 105], "elmerepr3dsolut": [1, 95, 99, 103, 105, 122], "get_elmer_solut": [1, 95, 99, 103, 105], "sonnet": [1, 95, 99, 183, 193], "parser": [1, 95, 99, 112, 148], "apply_templ": [1, 95, 99, 112, 113], "polygon_head": [1, 95, 99, 112, 113], "symmetri": [1, 95, 99, 112, 113, 164], "box": [1, 5, 18, 19, 35, 52, 55, 76, 83, 84, 92, 95, 97, 99, 105, 112, 113, 118, 119, 122, 123, 130, 132, 149, 152, 158, 162, 177, 181, 182, 183, 185, 186, 193, 194], "refplan": [1, 95, 99, 112, 113], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 63, 66, 88, 89, 90, 92, 93, 95, 96, 98, 99, 105, 110, 112, 113, 114, 122, 123, 124, 125, 126, 127, 132, 158, 162, 181, 182, 183, 186, 190, 192, 193], "control": [1, 17, 91, 95, 99, 112, 113, 114, 141, 147, 148, 160, 170, 171, 172, 173, 176, 186, 187, 189], "polygon": [1, 58, 64, 65, 95, 99, 112, 113, 114, 115, 118, 120, 122, 147, 164, 181, 186, 191, 194], "via": [1, 5, 25, 95, 99, 112, 113, 137, 187, 189, 191], "sonnet_export": [1, 95, 99, 112, 192], "poly_and_edge_indic": [1, 95, 99, 112, 114], "export_sonnet_son": [1, 95, 99, 112, 114, 192], "export_sonnet": [1, 95, 99, 112, 114, 192, 193], "xsection": [1, 95, 97, 99, 180, 183, 190], "epr_correction_export": [1, 95, 99, 116], "get_epr_correction_elmer_solut": [1, 95, 99, 116, 117], "get_epr_correction_simul": [1, 95, 99, 116, 117], "xsection_export": [1, 95, 99, 116, 196], "xsection_cal": [1, 95, 99, 116, 118, 196], "create_xsections_from_simul": [1, 95, 99, 116, 118, 196], "separate_signal_layer_shap": [1, 95, 99, 116, 118], "find_layer_by_nam": [1, 95, 99, 116, 118], "free_layer_slot": [1, 95, 99, 116, 118], "visualise_xsection_cut_on_original_layout": [1, 95, 99, 116, 118], "export_and_run": [1, 95, 99, 188], "run_export_script": [1, 95, 99, 106], "run_simul": [1, 95, 99, 106], "export_singular": [1, 95, 99], "remote_export_and_run": [1, 95, 99], "remote_run_onli": [1, 95, 99, 108], "simulation_export": [1, 95, 99, 191, 192], "get_combined_paramet": [1, 95, 99, 109], "copy_content_into_directori": [1, 95, 99, 109], "get_post_process_command_lin": [1, 95, 99, 109], "export_simulation_json": [1, 95, 99, 109], "export_simulation_oa": [1, 95, 99, 109, 192], "sweep_simul": [1, 95, 99, 109, 191], "cross_sweep_simul": [1, 95, 99, 109, 191], "sweep_solut": [1, 95, 99, 109], "cross_sweep_solut": [1, 95, 99, 109], "cross_combin": [1, 95, 99, 109], "simulation_valid": [1, 95, 99], "validate_simul": [1, 95, 99, 110], "simulation_and_solution_types_match": [1, 95, 99, 110], "has_no_ports_when_requir": [1, 95, 99, 110], "has_edgeport_when_forbidden": [1, 95, 99, 110], "flux_integration_layer_exists_if_need": [1, 95, 99, 110], "get_port_nam": [1, 95, 99, 110], "validatesimerror": [1, 95, 99, 110], "solut": [1, 95, 99, 101, 102, 104, 105, 109, 110, 117, 172, 177, 190], "get_paramet": [1, 95, 97, 99, 111, 122], "util": [1, 58, 66, 95, 99, 173, 174, 175, 183, 186, 191, 192], "export_lay": [1, 95, 99, 115], "find_edge_from_point_in_cel": [1, 95, 99, 115], "find_edge_from_point_in_polygon": [1, 95, 99, 115], "get_enclosing_polygon": [1, 95, 99, 115], "airbridges_sim": [1, 95], "airbridgessim": [1, 95, 96], "cross_section_simul": [1, 95, 118], "crosssectionsimul": [1, 95, 97, 101, 104, 118, 190, 191, 193], "process_lay": [1, 95, 97], "register_cell_layers_as_sim_lay": [1, 95, 97], "get_sim_lay": [1, 95, 97], "set_permitt": [1, 95, 97], "get_dict_by_lay": [1, 95, 97], "get_simulation_data": [1, 95, 97, 122], "empty_simul": [1, 95], "emptysimul": [1, 95, 98], "partition_region": [1, 95, 117, 122], "get_list_of_two": [1, 95, 119], "partitionregion": [1, 95, 105, 119, 122], "limit_box": [1, 95, 119], "limit_fac": [1, 95, 119], "as_dict": [1, 95, 120], "internalport": [1, 95, 120, 122, 162, 191], "get_etch_polygon": [1, 95, 120], "edgeport": [1, 95, 110, 120, 162, 190, 191], "post_process": [1, 95, 101, 104, 109, 117, 192], "postprocess": [1, 95, 101, 104, 109, 121], "get_command_lin": [1, 95, 121], "get_simulation_layer_by_nam": [1, 95, 122], "to_1d_list": [1, 95, 122], "from_cel": [1, 95, 96, 98, 122, 124, 125, 126, 127, 191, 192], "face_stack_list_of_list": [1, 95, 122], "ith_valu": [1, 95, 122], "face_z_level": [1, 95, 122], "region_from_lay": [1, 95, 122], "simplified_region": [1, 95, 122], "insert_lay": [1, 95, 122], "insert_stacked_up_lay": [1, 95, 122], "insert_layers_between_fac": [1, 95, 122], "create_simulation_lay": [1, 95, 96, 98, 122, 124, 125, 126, 127], "produce_lay": [1, 95, 122], "ground_grid_region": [1, 95, 122], "produce_waveguide_to_port": [1, 95, 122, 186, 191], "etched_lin": [1, 95, 122], "get_port_data": [1, 95, 122], "delete_inst": [1, 95, 122], "visualise_region": [1, 95, 122], "single_element_simul": [1, 95, 191, 192], "get_single_element_sim_class": [1, 95, 123, 162, 191, 192], "single_xmons_full_chip_sim": [1, 95], "singlexmonsfullchipsim": [1, 95, 124], "waveguides_sim": [1, 95], "waveguidessim": [1, 95, 125], "produce_guid": [1, 95, 125], "produce_ground_bump": [1, 95, 125], "xmons_direct_coupling_full_chip_sim": [1, 95], "xmonsdirectcouplingfullchipsim": [1, 95, 126], "produce_launchers_sma8": [1, 95, 126], "xmons_direct_coupling_sim": [1, 95], "xmonsdirectcouplingsim": [1, 95, 127], "test_structur": [1, 175], "junction_test_pad": [1, 128], "junctiontestpad": [1, 13, 92, 128, 131, 132, 133], "junction_test_pads_simpl": [1, 128, 131], "junctiontestpadssimpl": [1, 128, 131, 133], "airbridge_dc": [1, 128], "airbridgedc": [1, 128, 129], "cross_test": [1, 128], "crosstest": [1, 128, 130], "stripes_test": [1, 128], "stripestest": [1, 15, 16, 128, 134], "stripes_test_increasing_width": [1, 128], "stripestestincreasingwidth": [1, 128, 135], "teststructur": [1, 128, 129, 130, 132, 134, 135, 136, 137, 167], "produce_pad": [1, 128, 136], "produce_four_point_pad": [1, 128, 136], "produce_etched_region": [1, 128, 136], "tsv_test_pattern": [1, 128], "tsvtestpattern": [1, 128, 137], "area": [1, 13, 43, 52, 55, 58, 63, 71, 75, 76, 83, 90, 92, 114, 119, 120, 132, 133, 136, 138, 149, 177, 181, 186, 191], "areareceiv": [1, 138, 139], "put": [1, 63, 138, 139, 169, 181, 186], "get_area_and_dens": [1, 138, 139], "count_inst": [1, 138], "count_instances_in_cel": [1, 138, 140], "coupler_lib": [1, 138], "cap_param": [1, 19, 138, 141], "deep_delet": [1, 138], "deep_delete_pcel": [1, 138, 142], "deep_delete_al": [1, 138, 142], "defaults_help": [1, 138], "find_ansys_execut": [1, 138, 143], "depend": [1, 19, 120, 133, 138, 155, 162, 167, 169, 171, 176, 180, 186, 188, 189, 191], "install_kqc_gui_depend": [1, 138, 144], "edit_node_plugin": [1, 138], "editnodeplugin": [1, 138, 145], "create_dialog": [1, 138, 145], "update_node_from_form": [1, 138, 145], "update_form_from_nod": [1, 138, 145], "deselect": [1, 138, 145], "select": [1, 13, 71, 114, 138, 145, 154, 177, 181, 182, 184, 185, 186, 191, 196], "activ": [1, 76, 138, 145, 146, 173, 176, 183, 189, 190], "deactiv": [1, 138, 145], "mouse_click_ev": [1, 138, 145], "mouse_moved_ev": [1, 138, 145], "has_tracking_posit": [1, 138, 145], "tracking_posit": [1, 138, 145], "updat": [1, 37, 122, 138, 145, 167, 171, 176, 180, 181, 184, 190, 196], "editnodepluginfactori": [1, 138, 145], "create_plugin": [1, 138, 145], "export_help": [1, 138, 191, 192], "generate_probepoints_json": [1, 138, 146], "generate_probepoints_from_fil": [1, 138, 146], "create_or_empty_tmp_directori": [1, 106, 138, 146, 192], "get_simulation_directori": [1, 138, 146], "get_active_or_new_layout": [1, 138, 146, 191, 192], "write_commit_reference_fil": [1, 138, 146], "write_export_machine_versions_fil": [1, 138, 146], "open_with_klayout_or_default_appl": [1, 138, 146, 192], "get_klayout_vers": [1, 138, 146], "export_drc_report": [1, 138, 146], "geometry_help": [1, 138], "vector_length_and_direct": [1, 138, 147], "point_shift_along_vector": [1, 138, 147], "get_direct": [1, 138, 147], "get_angl": [1, 138, 147], "get_cell_path_length": [1, 138, 147], "get_object_path_length": [1, 138, 147], "simple_region": [1, 138, 147], "region_with_merged_point": [1, 122, 138, 147], "region_with_merged_polygon": [1, 122, 138, 147], "merge_points_and_match_on_edg": [1, 138, 147], "is_clockwis": [1, 138, 147], "circle_polygon": [1, 138, 147], "arc_point": [1, 138, 147], "bspline_point": [1, 138, 147], "bezier_point": [1, 138, 147], "geometry_json_encod": [1, 138], "geometryjsonencod": [1, 138, 148], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 101, 104, 105, 114, 117, 118, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 141, 143, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 162, 167, 169, 172, 175, 176, 177, 181, 182, 185, 186, 187, 190, 191, 192, 195, 196], "geometryjsondecod": [1, 138, 148], "encode_python_obj_as_dict": [1, 138, 148], "decode_dict_as_python_obj": [1, 138, 148], "groundgrid": [1, 138], "make_grid": [1, 138, 149], "gui_help": [1, 138], "get_nodes_near_posit": [1, 138, 150], "node_to_text": [1, 138, 150], "node_from_text": [1, 138, 150], "replace_nod": [1, 138, 150], "get_all_node_el": [1, 138, 150], "get_valid_node_el": [1, 138, 150], "import_help": [1, 138], "module_from_fil": [1, 138, 151], "label": [1, 5, 35, 37, 66, 76, 83, 122, 138, 153, 159, 166, 185], "labelorigin": [1, 138, 152], "bottomleft": [1, 138, 152], "bottomright": [1, 138, 152], "topleft": [1, 138, 152], "topright": [1, 138, 152], "produce_label": [1, 138, 152], "label_polygon": [1, 138], "get_text_polygon": [1, 138, 153], "load_font_polygon": [1, 138, 153], "layout_to_cod": [1, 138], "convert_cells_to_cod": [1, 138, 154], "get_node_param": [1, 138, 154], "extract_pcell_data_from_view": [1, 138, 154], "restore_pcells_to_view": [1, 138, 154], "library_help": [1, 138, 167, 174, 186], "load_librari": [1, 138, 155], "get_library_path": [1, 138, 155], "delete_all_librari": [1, 138, 155], "delete_librari": [1, 138, 155], "element_by_class_nam": [1, 138, 155], "to_module_nam": [1, 138, 155], "to_library_nam": [1, 138, 155], "log_rout": [1, 138], "route_log": [1, 138, 156], "merg": [1, 5, 63, 122, 138, 147, 166, 167, 186], "merge_lay": [1, 138, 157], "convert_child_instances_to_stat": [1, 138, 157], "netlist_extract": [1, 138], "export_cell_netlist": [1, 84, 138, 158], "extract_net": [1, 138, 158], "extract_circuit": [1, 138, 158], "netlist_graph": [1, 138], "network_as_graph": [1, 138, 159], "draw_graph": [1, 138, 159], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 104, 105, 106, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 164, 170, 171, 175, 182, 183, 184, 185, 189, 191, 192, 193, 195, 196], "add_parameters_from": [1, 138, 160, 167, 191], "add_paramet": [1, 138, 160, 167, 191], "pdt": [1, 138, 160, 186], "typedoubl": [1, 138, 160, 186], "typeint": [1, 138, 160], "typelist": [1, 138, 160], "typestr": [1, 138, 160], "typeshap": [1, 138, 160], "typeboolean": [1, 138, 160], "typelay": [1, 138, 160], "typenon": [1, 138, 160], "param": [1, 37, 63, 110, 122, 138, 160, 163, 167, 186], "get_al": [1, 138, 160], "plugin_startup": [1, 138], "register_plugin": [1, 138, 161], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 76, 79, 88, 89, 90, 91, 92, 93, 122, 123, 132, 136, 138, 146, 150, 154, 181, 183, 191], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 37, 38, 52, 54, 58, 61, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 92, 97, 102, 105, 110, 115, 117, 118, 119, 120, 122, 130, 132, 134, 135, 136, 137, 138, 139, 147, 152, 157, 158, 162, 163, 175, 177, 180, 181, 182, 183, 184, 191, 196], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 57, 60, 63, 64, 70, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 115, 118, 122, 123, 124, 125, 126, 127, 132, 138, 139, 140, 141, 142, 146, 147, 150, 152, 154, 155, 157, 158, 162, 163, 167, 173, 181, 182, 184, 185, 186, 191, 192, 194], "tran": [1, 5, 9, 10, 37, 65, 67, 76, 83, 122, 136, 138, 162, 163, 191], "rec_level": [1, 37, 76, 122, 138, 162, 186], "dict": [1, 5, 63, 83, 92, 97, 102, 104, 105, 117, 132, 138, 146, 148, 153, 155, 162, 163, 191], "item": [1, 122, 138, 148, 159, 162, 177], "kei": [1, 5, 23, 37, 79, 83, 84, 85, 102, 105, 109, 117, 122, 126, 138, 141, 146, 148, 154, 155, 157, 158, 162, 163, 169, 181, 187, 189], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 68, 76, 79, 82, 83, 84, 88, 89, 90, 93, 97, 102, 105, 114, 117, 118, 120, 122, 126, 132, 138, 146, 148, 150, 152, 154, 155, 157, 158, 160, 162, 163, 167, 169, 175, 180, 181, 182, 184, 186, 190, 191, 196], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 138, 162, 191], "refpointtointernalport": [1, 138, 162], "refpointtoedgeport": [1, 138, 162], "waveguidetosimport": [1, 138, 162, 191], "toward": [1, 63, 122, 138, 162, 191], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 57, 61, 62, 66, 83, 88, 89, 90, 93, 118, 122, 123, 136, 138, 154, 162, 164, 167, 185, 186, 191], "use_internal_port": [1, 56, 122, 138, 162, 191], "waveguide_length": [1, 122, 127, 138, 147, 162, 191], "term1": [1, 58, 63, 64, 122, 126, 138, 162], "turn_radiu": [1, 122, 126, 138, 162], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 63, 66, 68, 79, 90, 91, 122, 126, 132, 137, 138, 147, 162], "over_etch": [1, 122, 138, 162], "junctionsimport": [1, 138, 162, 191], "other_refpoint": [1, 138, 162], "replace_junct": [1, 138], "junctionentri": [1, 138, 163], "extract_junct": [1, 138, 163], "check_static_cell_has_junct": [1, 138, 163], "place_junct": [1, 138, 163], "get_tuned_junction_json": [1, 138, 163], "copy_one_layer_of_cel": [1, 138, 163], "replace_squid": [1, 138, 163], "convert_cells_to_stat": [1, 138, 163], "symmetric_polygon": [1, 138, 186], "polygon_with_hsym": [1, 138, 164], "polygon_with_vsym": [1, 138, 164, 186], "polygon_with_sym": [1, 138, 164], "klayout_view": [1, 173, 175, 184], "klayoutview": [1, 76, 173, 183], "layout_view": [1, 76, 184], "focu": [1, 76, 184], "show": [1, 76, 134, 135, 159, 173, 177, 181, 182, 184, 185, 186, 191, 192], "close": [1, 52, 64, 76, 101, 147, 154, 177, 185], "cell_view": [1, 76, 184], "active_cel": [1, 76, 184], "clear_lay": [1, 76], "add_default_lay": [1, 76], "create_top_cel": [1, 76], "export_layers_bitmap": [1, 76], "export_all_layers_bitmap": [1, 76], "export_pcell_png": [1, 76, 184], "get_pixel": [1, 76], "get_active_cell_view": [1, 76], "get_active_layout": [1, 76], "get_active_cel": [1, 76], "missinguilibraryexcept": [1, 76], "resolve_default_layer_info": [1, 76], "layer_clust": [1, 175], "layerclust": [1, 77], "main_lay": [1, 77], "extra_lay": [1, 77], "all_lay": [1, 77], "pya_resolv": [1, 167, 175, 186, 191], "is_standalone_sess": [1, 86], "klayout_executable_command": [1, 86], "run": [1, 63, 76, 79, 86, 101, 104, 105, 106, 108, 118, 121, 144, 146, 169, 170, 172, 173, 174, 175, 176, 177, 180, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196], "argument_pars": [1, 94], "run_kqc": [1, 94], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 150, 152, 153, 154, 155, 157, 158, 159, 160, 163, 170, 171, 180, 181, 182, 184, 186, 191, 194], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 87, 88, 89, 93, 128, 129, 130, 134, 135, 136, 137], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 105, 110, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 145, 148, 150, 152, 154, 155, 160, 162, 163, 167, 168, 170, 177, 180, 183, 184, 190, 192, 193], "consist": [2, 15, 16, 25, 35, 63, 64, 65, 79, 81, 84, 88, 89, 90, 91, 133, 146, 148, 168, 175, 181, 189, 193], "thei": [2, 3, 6, 28, 63, 69, 79, 83, 85, 88, 89, 97, 115, 147, 157, 159, 163, 167, 169, 177, 184, 186, 190], "ar": [2, 3, 5, 6, 20, 23, 28, 30, 33, 37, 49, 63, 64, 65, 66, 69, 76, 79, 81, 83, 84, 85, 92, 97, 99, 102, 105, 106, 108, 110, 114, 117, 118, 119, 122, 126, 128, 136, 138, 140, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 58, 63, 64, 65, 66, 76, 83, 84, 85, 88, 89, 90, 91, 102, 105, 109, 110, 111, 114, 118, 122, 126, 127, 146, 147, 155, 159, 160, 162, 169, 173, 181, 182, 184, 185, 186, 190, 191, 194], "frame": [2, 5, 35, 49, 83, 181], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 104, 105, 106, 109, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 141, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196], "alwai": [2, 105, 158, 173, 177, 186, 190], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 88, 89, 90, 93, 96, 97, 98, 105, 122, 124, 125, 126, 127, 129, 130, 133, 134, 135, 137, 148, 154, 167, 168, 173, 174, 177, 184, 186, 190, 191, 192, 196], "place": [2, 5, 18, 28, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 76, 79, 83, 88, 89, 90, 93, 122, 123, 148, 154, 156, 162, 163, 167, 170, 174, 177, 182, 183, 184, 185, 186, 191, 192], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 58, 63, 77, 84, 85, 90, 101, 104, 110, 114, 122, 132, 137, 146, 147, 160, 163, 167, 170, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 187, 190, 191, 194], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 69, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 163, 169, 171, 172, 173, 175, 176, 177, 180, 185, 186, 189, 192], "structur": [2, 5, 28, 69, 120, 128, 129, 132, 133, 136, 137, 159, 163, 173, 174, 175, 177, 183, 185, 190, 194], "after": [2, 13, 28, 63, 64, 71, 72, 79, 83, 90, 101, 104, 109, 118, 122, 123, 132, 160, 169, 172, 177, 180, 182, 184, 185, 186, 189, 192], "ad": [2, 19, 37, 63, 76, 83, 109, 120, 121, 122, 126, 146, 147, 152, 154, 158, 159, 160, 167, 169, 183, 191], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 97, 114, 120, 122, 125, 141, 149, 152, 181, 182, 183, 186, 190, 191], "grid": [2, 5, 18, 35, 37, 55, 56, 63, 64, 65, 67, 83, 84, 85, 122, 136, 149, 152, 154, 181, 182, 183, 186], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 65, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 105, 108, 109, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147, 148, 149, 150, 152, 155, 157, 162, 163, 167, 169, 170, 172, 173, 174, 176, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 63, 64, 65, 90, 122, 132, 136, 137, 149, 152, 156, 157, 175, 181, 185, 186], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 58, 63, 64, 69, 70, 75, 76, 79, 81, 82, 84, 85, 87, 88, 89, 96, 97, 98, 105, 109, 110, 114, 117, 118, 119, 120, 122, 124, 125, 126, 127, 133, 146, 147, 148, 150, 154, 159, 162, 163, 165, 167, 169, 172, 173, 174, 176, 177, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 58, 63, 64, 65, 66, 70, 75, 83, 92, 102, 105, 117, 118, 120, 122, 124, 126, 132, 133, 136, 141, 150, 152, 174, 185, 186, 189, 191, 192, 194, 196], "document": [2, 81, 82, 84, 95, 128, 167, 168, 171, 173, 174, 176, 177, 180, 181, 184, 185, 186, 194], "gener": [2, 5, 13, 30, 37, 55, 61, 64, 69, 70, 75, 76, 81, 83, 84, 85, 87, 90, 92, 97, 106, 118, 122, 128, 132, 147, 149, 150, 153, 154, 158, 160, 163, 169, 170, 173, 175, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 196], "descript": [2, 128, 160, 167, 186, 194], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 173, 174, 176, 179, 180, 190, 191], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 105, 106, 110, 111, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 145, 147, 148, 152, 160, 162, 163, 167, 180, 185, 186, 189, 190, 191], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 63, 64, 65, 76, 79, 83, 84, 85, 92, 102, 104, 105, 109, 110, 118, 122, 123, 129, 133, 141, 146, 147, 148, 150, 154, 158, 159, 160, 162, 163, 164, 167, 172, 173, 176, 177, 181, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196], "On": [3, 6, 172, 176, 182, 186, 187, 188], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 58, 65, 82, 83, 91, 97, 115, 118, 120, 122, 162, 177, 182, 185, 186, 191], "straight": [3, 6, 26, 45, 47, 58, 63, 64, 67, 92, 122, 127, 186], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 58, 83, 119, 122, 132, 137, 163, 164, 196], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 58, 63, 64, 65, 66, 67, 68, 88, 89, 90, 93, 97, 120, 122, 125, 127, 147, 150, 154, 158, 159, 162, 182, 183, 186, 190, 191], "cross": [3, 6, 23, 58, 66, 97, 102, 105, 109, 118, 130, 175, 181, 183, 186, 191, 193], "multipl": [3, 6, 63, 79, 84, 85, 88, 89, 118, 146, 157, 159, 163, 167, 172, 175, 177, 181, 184, 185, 186, 189, 191, 194], "time": [3, 6, 37, 101, 104, 105, 109, 114, 118, 162, 170, 175, 176, 177, 182, 184, 185, 187, 189, 191], "There": [3, 6, 23, 91, 133, 134, 135, 167, 170, 173, 176, 181, 185, 186, 187, 189, 190, 191], "right": [3, 6, 19, 23, 29, 37, 58, 68, 82, 83, 118, 120, 122, 162, 177, 181, 182, 184, 185, 186, 191], "likewis": [3, 6], "do": [3, 6, 37, 63, 79, 105, 122, 154, 168, 169, 172, 173, 174, 182, 184, 185, 186, 188, 189, 190, 191, 192], "ani": [3, 6, 19, 63, 64, 70, 75, 76, 84, 85, 96, 97, 98, 105, 117, 122, 123, 124, 125, 126, 127, 133, 150, 155, 161, 166, 167, 172, 173, 177, 178, 181, 185, 186, 189, 190, 191, 192, 193], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 58, 63, 64, 65, 76, 83, 88, 89, 90, 91, 94, 115, 118, 122, 126, 127, 129, 132, 137, 146, 147, 154, 157, 159, 162, 164, 170, 174, 175, 181, 183, 184, 186, 189, 191, 194], "In": [3, 43, 63, 76, 79, 84, 96, 98, 109, 118, 122, 124, 125, 126, 127, 147, 167, 169, 172, 177, 180, 181, 182, 184, 185, 186, 190, 191, 192], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 61, 62, 63, 64, 65, 66, 73, 74, 83, 88, 89, 90, 91, 92, 93, 120, 122, 132, 136, 137, 147, 158, 162, 182, 185, 191], "arrai": [3, 5, 25, 83, 84, 133, 148, 194], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 58, 83, 84, 85, 97, 102, 118, 122, 132, 146, 158, 163, 167, 172, 174, 175, 180, 181, 185, 186, 189, 190, 191, 192], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 83, 90, 92, 93, 97, 102, 105, 113, 118, 120, 122, 125, 126, 127, 130, 132, 134, 135, 141, 147, 149, 150, 154, 157, 162, 181, 182, 186, 190, 191], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 61, 63, 64, 66, 70, 71, 72, 74, 76, 83, 88, 89, 90, 92, 93, 118, 120, 122, 126, 127, 129, 130, 132, 134, 135, 136, 137, 162, 186, 191], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 84, 88, 89, 90, 93, 129, 130, 133, 134, 135, 137, 140, 150, 154, 157, 186, 191], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 88, 89, 90, 93, 113, 120, 129, 130, 133, 134, 135, 137, 154, 160, 167, 184, 189], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 79, 88, 89, 90, 91, 92, 93, 97, 101, 118, 122, 129, 130, 133, 134, 135, 136, 137, 146, 148, 156, 158, 160, 163, 167, 174, 175, 182, 183, 185, 187, 189, 190, 191, 196], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 101, 104, 105, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 139, 144, 145, 147, 148, 150, 154, 155, 157, 158, 159, 160, 162, 163, 167, 169, 170, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 58, 63, 64, 65, 83, 88, 89, 90, 91, 96, 102, 105, 108, 113, 115, 118, 120, 122, 125, 129, 130, 132, 134, 135, 137, 147, 148, 150, 153], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 58, 63, 65, 66, 79, 81, 84, 88, 89, 90, 91, 96, 102, 105, 114, 118, 119, 120, 122, 125, 129, 130, 132, 134, 135, 137, 140, 141, 146, 147, 148, 149, 159, 163, 166, 186, 189, 190, 191], "pair": [3, 6, 13, 17, 54, 132, 148, 150, 154, 162, 180, 181], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 63, 66, 68, 88, 89, 90, 93, 102, 105, 122, 126, 130, 132, 137, 147, 149, 150, 165, 172, 173, 176, 189, 190, 191], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 58, 63, 65, 79, 81, 84, 85, 88, 89, 90, 91, 97, 101, 104, 109, 110, 118, 122, 146, 147, 148, 154, 156, 157, 158, 160, 161, 162, 163, 166, 167, 169, 172, 173, 176, 181, 183, 184, 186, 189, 190, 191, 192, 193], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 63, 72, 73, 88, 89, 90, 93, 96, 102, 105, 118, 122, 125, 132, 137, 149, 160, 177, 189, 190], "full": [4, 5, 65, 76, 79, 86, 119, 147, 154, 159, 173, 175, 177, 181, 186, 188, 189, 191, 194], "4": [4, 5, 13, 17, 18, 19, 23, 84, 88, 89, 105, 117, 118, 122, 130, 132, 133, 147, 152, 160, 176, 177, 191], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 58, 63, 129], "n_step": 4, "increment": [4, 5, 13, 63, 135, 150, 163], "step": [4, 13, 15, 16, 63, 132, 147, 149, 163, 172, 176, 177, 182, 184, 185, 187], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 58, 63, 68, 71, 72, 84, 88, 89, 90, 102, 105, 113, 117, 118, 119, 122, 127, 132, 134, 135, 139, 147, 152, 154, 159, 160, 171, 177, 182, 185, 186, 187, 189, 190, 191, 196], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 105, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 164, 181, 182, 184, 190, 195], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 58, 63, 70, 72, 82, 84, 88, 90, 92, 101, 104, 109, 122, 123, 127, 132, 154, 155, 160, 173, 174, 177, 183, 185, 186, 187, 189, 193, 194], "2000": [4, 19, 105, 129, 186], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 97, 102, 105, 118, 119, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 146, 147, 149, 167, 171, 173, 175, 186, 190], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 75, 88, 89, 90, 92, 93, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 162, 186], "pixel": [5, 7, 76, 147, 194], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 63, 64, 65, 152, 181, 182, 186], "dice": [5, 7, 35, 83], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 58, 63, 64, 73, 74, 83, 89, 90, 91, 105, 114, 115, 117, 118, 119, 120, 122, 125, 126, 136, 147, 149, 162, 174, 181, 191], "option": [5, 23, 32, 37, 58, 63, 83, 84, 85, 93, 102, 105, 108, 114, 117, 118, 120, 122, 133, 141, 154, 158, 169, 174, 176, 181, 182, 185, 186, 187, 189, 192, 196], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 64, 66, 76, 82, 83, 84, 85, 88, 89, 90, 93, 97, 104, 106, 108, 109, 117, 118, 122, 139, 147, 148, 150, 154, 155, 157, 160, 163, 167, 168, 169, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 69, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 101, 104, 106, 108, 109, 117, 118, 122, 123, 130, 134, 135, 137, 139, 146, 148, 150, 152, 157, 158, 159, 162, 163, 167, 170, 171, 172, 173, 174, 175, 180, 181, 184, 185, 186, 189, 191, 192, 194, 196], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 58, 61, 62, 63, 181], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 61, 62, 63, 64, 79, 90, 93, 105, 118, 120, 122, 127, 130, 132, 134, 135, 136, 137, 139, 147, 149, 158, 175, 181, 190, 191], "librari": [5, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 90, 91, 92, 93, 132, 136, 150, 155, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 194, 195], "superconduct": [5, 37, 118, 136, 175], "quantum": [5, 28, 37, 69, 136, 175, 194], "circuit": [5, 28, 37, 136, 158, 175, 186, 194], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 57, 63, 64, 65, 70, 88, 89, 90, 92, 93, 97, 122, 132, 146, 147, 148, 154, 162, 166, 186, 187, 189, 191, 194], "static": [5, 37, 54, 63, 64, 65, 67, 76, 83, 84, 122, 153, 157, 163, 181, 182], "chip_cel": [5, 82, 83], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 65, 66, 76, 77, 83, 84, 86, 88, 89, 90, 92, 93, 97, 101, 102, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 132, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 159, 160, 162, 163, 164, 184, 185, 186, 191], "dictionari": [5, 23, 37, 58, 66, 79, 83, 84, 85, 97, 102, 105, 109, 111, 117, 120, 122, 126, 141, 148, 155, 157, 158, 159, 160, 162, 186, 191], "assign": [5, 117, 181, 186], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 57, 63, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 99, 101, 104, 105, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 127, 139, 145, 146, 147, 148, 150, 157, 158, 160, 162, 163, 167, 173, 175, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196], "junction_typ": [5, 9, 10, 13, 23, 26, 70, 71, 72, 73, 74, 75, 90, 92, 127, 132, 163, 191], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 58, 71, 72, 74, 89, 90, 92, 93, 122, 129, 131, 132, 133, 136, 186, 191], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 83, 84, 90, 92, 97, 102, 105, 106, 108, 109, 121, 122, 123, 125, 127, 132, 133, 137, 141, 146, 148, 150, 153, 154, 155, 156, 158, 159, 162, 185, 186], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 79, 84, 86, 90, 92, 93, 105, 110, 114, 118, 120, 122, 123, 124, 127, 132, 133, 137, 139, 140, 141, 146, 147, 148, 150, 154, 158, 160, 163, 173, 174, 181, 183, 188, 190, 191, 196], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 63, 64, 66, 68, 70, 75, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 96, 97, 98, 99, 101, 102, 104, 105, 106, 108, 109, 114, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 132, 136, 141, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196], "optic": [5, 15, 16, 130, 134, 135, 175, 194], "lithographi": [5, 15, 16, 122, 130, 134, 135, 194], "call": [5, 37, 57, 63, 84, 96, 97, 98, 109, 118, 119, 122, 124, 125, 126, 127, 139, 148, 155, 157, 158, 167, 174, 177, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194], "overrid": [5, 13, 83, 85, 96, 97, 98, 117, 120, 122, 124, 125, 126, 127, 132, 167, 169, 187], "set": [5, 19, 37, 58, 63, 76, 81, 82, 84, 85, 97, 102, 105, 106, 114, 118, 120, 122, 126, 146, 162, 166, 167, 169, 172, 173, 174, 175, 181, 182, 186, 187, 189, 190, 191, 192], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 58, 63, 64, 76, 79, 82, 84, 88, 89, 90, 92, 93, 97, 102, 105, 118, 119, 120, 121, 122, 123, 130, 132, 133, 134, 135, 137, 146, 147, 148, 151, 152, 153, 155, 157, 160, 162, 163, 167, 169, 185, 186, 189, 190, 191, 193], "pya": [5, 37, 52, 63, 79, 83, 84, 86, 92, 117, 118, 119, 122, 136, 147, 148, 150, 158, 160, 162, 164, 171, 185, 186, 191], "dbox": [5, 76, 92, 118, 119, 122, 185, 186, 191], "within": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 105, 133, 163, 173, 174, 180, 193, 195], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 58, 63, 76, 79, 84, 85, 90, 122, 125, 132, 137, 146, 147, 159, 168, 173, 183, 184, 185, 195], "where": [5, 17, 19, 23, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 65, 70, 75, 83, 84, 85, 88, 89, 90, 93, 97, 101, 104, 105, 106, 109, 114, 118, 119, 121, 122, 126, 146, 150, 152, 154, 157, 158, 162, 163, 167, 172, 176, 181, 184, 185, 186, 187, 189, 190, 191, 193], "frame_paramet": 5, "r0": [5, 37, 122, 136], "dtran": [5, 52, 65, 83, 123, 164, 186, 191], "toler": [5, 64, 105, 115, 122, 147, 157], "004": [5, 122, 157], "base_metal_gap": [5, 79, 157, 186], "combin": [5, 37, 97, 109, 122, 157, 175, 191], "three": [5, 17, 69, 122, 157, 173, 176, 180, 184, 185, 186, 189, 191], "subtract": [5, 52, 122, 136, 157], "insert": [5, 28, 35, 37, 58, 63, 76, 83, 92, 122, 132, 136, 148, 157, 162, 173, 181, 183, 191], "oper": [5, 37, 63, 146, 157, 172, 173, 176, 181, 189], "base_metal_gap_wo_grid": [5, 92, 130, 132, 134, 135, 157, 158, 177, 181, 186], "base_metal_addit": [5, 157, 186], "ground_grid": [5, 157, 186], "info": [5, 108, 114, 122, 156, 157, 169, 189], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 63, 64, 65, 66, 71, 72, 88, 89, 90, 93, 117, 119, 122, 132, 136, 137, 141, 147, 157, 162, 186, 191], "ignor": [5, 84, 92, 97, 122, 147, 157, 162, 172, 189], "while": [5, 23, 37, 79, 157, 158, 169, 174, 176, 177, 189], "\u00b5m": [5, 17, 35, 58, 63, 73, 74, 88, 89, 90, 92, 114, 122, 157], "possibli": [5, 52, 163, 177, 185, 186], "befor": [5, 37, 63, 64, 76, 84, 105, 119, 122, 150, 161, 172, 181, 192], "get": [5, 63, 76, 97, 117, 118, 139, 148, 158, 160, 167, 169, 170, 172, 173, 174, 175, 176, 180, 184, 187], "specifi": [5, 31, 32, 33, 37, 49, 63, 76, 83, 84, 85, 97, 105, 118, 120, 122, 146, 147, 148, 150, 151, 156, 158, 159, 160, 163, 169, 170, 180, 185, 187, 191, 192], "correctli": [5, 37, 64, 83, 181, 186], "resolv": [5, 83, 171, 186], "integ": [5, 6, 7, 10, 16, 19, 83, 120, 122, 147, 148, 153, 191], "filter_layer_list": 5, "transform": [5, 37, 52, 65, 76, 83, 92, 122, 123, 132, 136, 147, 162, 186], "filter_region": 5, "tupl": [5, 23, 37, 63, 64, 65, 76, 83, 84, 101, 104, 106, 109, 117, 118, 122, 126, 139, 146, 148, 150, 154, 160], "layer_nam": [5, 37, 76, 82, 97, 118, 122], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 63, 64, 66, 88, 89, 90, 105, 117, 122, 126, 127, 130, 136, 137, 147, 150], "filter": [5, 108, 174], "region": [5, 37, 38, 52, 63, 83, 105, 117, 118, 119, 122, 136, 147, 149, 153], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 63, 76, 79, 83, 101, 104, 114, 117, 120, 122, 126, 143, 152, 154, 159, 162, 163, 172, 173, 174, 176, 177, 181, 182, 184, 190, 191, 192], "rotat": [5, 37, 43, 63, 76, 83, 92, 122, 185, 186], "repeat": [5, 121], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 66, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 93, 97, 101, 102, 104, 105, 106, 108, 109, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 132, 137, 139, 146, 147, 148, 150, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 169, 172, 173, 177, 180, 182, 186, 190, 191, 192, 193], "dpoint": [5, 37, 63, 64, 76, 83, 92, 115, 117, 118, 120, 122, 136, 146, 147, 150, 152, 158, 162, 185, 186, 191, 196], "degre": [5, 17, 36, 43, 63, 66, 83, 88, 89, 92, 105, 147, 185, 186], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 77, 79, 88, 89, 90, 93, 96, 97, 98, 105, 118, 119, 120, 122, 123, 124, 125, 126, 127, 144, 146, 148, 158, 160, 162, 163, 167, 168, 169, 170, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 191, 195], "fill": [5, 97, 114, 166, 177, 181, 182, 186], "bump": [5, 32, 41, 43, 58, 63, 122, 125, 166, 191], "coordin": [5, 17, 37, 55, 63, 65, 76, 83, 90, 105, 118, 122, 136, 159, 162, 185], "mai": [5, 28, 37, 63, 76, 83, 84, 97, 120, 122, 155, 157, 158, 159, 163, 167, 169, 170, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 188, 189], "post": [5, 37, 109, 118, 121, 190, 192, 193], "sampleholder_typ": [5, 14, 186], "launcher_assign": 5, "none": [5, 26, 31, 35, 37, 41, 45, 52, 60, 63, 70, 76, 82, 83, 84, 85, 86, 92, 97, 101, 102, 104, 106, 108, 109, 110, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 132, 136, 139, 141, 146, 147, 148, 154, 155, 158, 159, 160, 162, 163, 189, 191], "enabl": [5, 57, 63, 102, 105, 119, 122, 126, 156, 175, 176, 181, 182, 186, 190], "typic": [5, 13, 25, 29, 32, 37, 38, 58, 63, 69, 90, 122, 132, 137, 141, 155, 158, 186, 191, 192, 193], "sampl": [5, 8, 18, 91, 126, 147], "holder": [5, 8, 18, 126], "size": [5, 29, 36, 38, 43, 57, 63, 68, 76, 83, 84, 88, 89, 105, 120, 122, 147, 152, 153, 159, 181, 185, 186], "self": [5, 37, 58, 63, 66, 70, 75, 83, 84, 92, 96, 97, 98, 122, 124, 125, 126, 127, 148, 168, 180, 186, 189, 191], "accordingli": [5, 37, 186], "wrapper": [5, 76, 126, 167], "around": [5, 19, 29, 35, 36, 37, 38, 52, 64, 65, 76, 83, 122, 146, 147, 152, 167, 175, 180, 181, 182, 185, 191], "configur": [5, 13, 20, 27, 43, 76, 78, 79, 83, 110, 132, 133, 167, 174, 183], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 63, 64, 68, 79, 118, 119, 122, 166, 167, 185, 186, 191], "index": [5, 19, 37, 63, 64, 65, 79, 115, 120, 122, 150, 162, 163, 173, 175, 186], "head": [5, 48, 126], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 58, 63, 64, 65, 66, 69, 71, 72, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 105, 106, 108, 109, 115, 117, 118, 120, 122, 124, 125, 126, 127, 132, 136, 139, 140, 143, 146, 147, 150, 151, 152, 153, 155, 156, 158, 160, 162, 163, 166, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196], "n": [5, 13, 25, 29, 32, 37, 38, 58, 63, 65, 88, 89, 90, 113, 122, 132, 137, 147, 148, 158, 174, 186, 189, 190], "launcher_typ": [5, 186], "launcher_width": [5, 20, 186], "launcher_gap": [5, 20, 186], "launcher_ind": [5, 20, 186], "pad_pitch": [5, 186], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 186], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 123, 160, 163, 166, 167, 169, 172, 173, 174, 176, 177, 181, 182, 184, 186, 187, 191, 192, 195], "equal": [5, 119, 147, 154, 159, 190], "distribut": [5, 63, 85, 176], "overridden": [5, 96, 97, 98, 122, 124, 125, 126, 127], "desir": [5, 37, 63, 64, 92, 152, 173, 181, 185, 187, 190, 191], "per": [5, 38, 57, 63, 66, 102, 133, 167, 189, 190], "disabl": [5, 13, 37, 71, 76, 90, 119, 122, 132, 162, 181, 182, 184], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 76, 84, 85, 88, 89, 90, 92, 93, 96, 97, 98, 102, 105, 106, 108, 117, 118, 121, 122, 123, 124, 125, 126, 127, 132, 150, 153, 160, 169, 176, 185, 186, 191, 192, 193], "If": [5, 37, 63, 66, 76, 85, 96, 97, 98, 102, 105, 106, 108, 118, 119, 122, 123, 124, 125, 126, 127, 136, 146, 147, 148, 153, 154, 155, 156, 158, 159, 162, 163, 165, 168, 169, 170, 172, 173, 174, 176, 177, 178, 181, 184, 185, 186, 189, 191, 194, 195, 196], "neither": [5, 76], "rf": [5, 43, 174, 186], "most": [5, 115, 148, 150, 162, 167, 176, 177, 180, 181, 182, 184, 186, 189, 191, 194], "top": [5, 6, 19, 33, 41, 58, 76, 79, 83, 96, 97, 98, 118, 119, 122, 124, 125, 126, 127, 146, 154, 162, 163, 167, 181, 182, 184, 185, 186, 191, 194], "clockwis": [5, 13, 19, 35, 58, 83, 115, 147, 185], "order": [5, 19, 23, 58, 63, 64, 97, 105, 115, 118, 122, 147, 148, 167, 169, 181, 190, 191], "x": [5, 17, 34, 55, 63, 64, 83, 88, 89, 92, 105, 115, 117, 118, 136, 146, 150, 158, 159, 170, 176, 181, 183, 185, 186, 189, 190, 191, 192], "y": [5, 13, 55, 63, 83, 92, 105, 113, 115, 118, 132, 136, 146, 150, 158, 159, 170, 185, 190, 191, 192], "your": [5, 52, 97, 101, 104, 120, 122, 165, 166, 168, 169, 172, 173, 174, 175, 176, 177, 186, 187, 192], "For": [5, 19, 23, 28, 37, 63, 79, 83, 92, 105, 122, 146, 148, 150, 154, 155, 159, 160, 161, 163, 167, 169, 173, 174, 176, 177, 181, 182, 184, 186, 189, 190, 191, 192], "exampl": [5, 28, 37, 63, 76, 77, 79, 84, 105, 122, 148, 155, 159, 163, 167, 169, 172, 173, 174, 176, 177, 181, 183, 185, 187, 189, 190, 191, 192, 196], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 58, 63, 125, 146, 181, 185, 186, 191], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 57, 63, 76, 84, 86, 88, 89, 90, 92, 93, 102, 115, 122, 123, 132, 146, 147, 153, 154, 158, 160, 162, 163, 167, 170, 172, 176, 177, 180, 181, 183, 185, 186, 187, 193, 195], "axi": [5, 13, 17, 24, 64, 88, 89, 92, 105, 132, 146, 163, 164], "rang": [5, 57, 148], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 58, 60, 63, 64, 75, 90, 91, 92, 105, 113, 122, 125, 127, 130, 132, 134, 135, 137, 147, 182, 186, 191, 192], "delta_i": 5, "x0": 5, "y0": 5, "float": [5, 17, 63, 83, 102, 105, 113, 115, 117, 118, 120, 122, 139, 148, 150, 190, 191], "separ": [5, 13, 37, 71, 72, 76, 84, 90, 91, 97, 105, 118, 122, 132, 148, 150, 154, 155, 157, 174, 176, 177, 181, 182, 186, 187, 191, 192], "along": [5, 58, 105, 163, 196], "dimens": [5, 20, 76, 119, 122, 170, 190, 191], "displac": [5, 92, 186], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 83, 84, 90, 92, 97, 122, 124, 125, 126, 132, 136, 137, 156], "make": [5, 28, 41, 83, 84, 85, 86, 101, 104, 105, 122, 160, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 184, 185, 186, 187, 191, 192, 196], "plane": [5, 36, 38, 39, 52, 88, 89, 122, 181, 182, 185, 186], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 82, 83, 84, 90, 92, 97, 101, 102, 104, 105, 106, 108, 113, 114, 117, 119, 120, 121, 122, 124, 125, 132, 137, 147, 148, 152, 154, 155, 159, 162, 163, 185, 186, 189, 191], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 58, 63, 64, 66, 88, 89, 90, 122, 132, 137, 162], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 58, 64, 84, 85, 102, 137, 147, 169, 170, 184, 191], "silicon": [5, 25, 122, 137, 186, 191, 194], "with_face1_gnd_tsv": 5, "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 58, 63, 97, 125, 126, 127, 130, 132, 134, 135, 150, 152, 155, 173], "300": [5, 6, 48, 49, 58, 88, 89, 122], "edge_from_tsv": 5, "clearanc": [5, 52, 63, 83], "550": [5, 17, 122], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 76, 83, 96, 97, 98, 109, 118, 122, 124, 125, 126, 127, 146, 147, 150, 155, 159, 163, 167, 172, 176, 177, 181, 186, 191, 192], "250": [5, 89, 91], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 122, 191], "bump_grid_spac": 5, "120": [5, 88, 89, 93, 166, 168], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 177, 191, 194], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 58, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 88, 89, 91, 93, 97, 102, 105, 118, 122, 127, 133, 136, 146, 147, 150, 153, 154, 155, 157, 158, 159, 163, 167, 172, 173, 174, 177, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 58, 76, 79, 105, 122, 186], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 190], "squar": [5, 12, 24, 35, 38, 52, 83, 84, 136, 154, 173, 177, 186], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 63, 71, 75, 83, 90, 92, 102, 105, 118, 127, 132, 133, 137, 147, 152, 160, 171, 172, 175, 186, 187, 189, 190, 191], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 82, 83, 92, 132, 152, 163, 164, 185], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 58, 63, 64, 71, 72, 76, 83, 84, 85, 90, 97, 101, 102, 105, 106, 108, 114, 122, 124, 125, 126, 132, 140, 146, 147, 148, 150, 154, 155, 156, 157, 159, 160, 162, 163, 167, 182, 184, 185, 186, 189, 190, 191], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 58, 63, 93, 137, 186], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 60, 63, 68, 71, 72, 83, 90, 122, 132, 137, 152, 186, 191, 192], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 83], "copi": [5, 35, 37, 63, 83, 109, 154, 164, 167, 186, 187, 192, 193], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 74, 92, 119, 122, 177, 190, 191], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 60, 62, 63, 92, 126, 127, 137, 147, 150, 156, 176, 177], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 64, 84, 90, 91, 109, 115, 121, 122, 134, 135, 137, 147, 150, 166, 170, 172, 173, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 58, 63, 64, 65, 67, 68, 71, 72, 74, 90, 92, 93, 97, 105, 117, 118, 119, 120, 122, 125, 132, 136, 137, 186, 190, 191], "addit": [5, 13, 29, 35, 37, 49, 63, 64, 65, 67, 68, 71, 72, 79, 83, 90, 96, 98, 105, 118, 121, 122, 124, 125, 126, 127, 132, 166, 169, 181, 185, 186, 190], "bound": [5, 35, 55, 63, 83, 92, 119, 122, 132, 149, 152, 158, 181], "10000": [5, 18, 35, 97, 122, 185], "bump_typ": [5, 32, 41, 43, 58, 63], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 90, 92, 102, 105, 127, 132, 133, 137, 160, 167, 173, 190], "tsv_type": [5, 25, 60, 61, 62, 137], "ellips": [5, 25, 60, 61, 137], "bottom": [6, 33, 41, 58, 73, 74, 79, 83, 118, 119, 122, 162, 167, 182, 185, 186, 191], "transmiss": [6, 18, 56, 64, 137], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 65, 83, 88, 89, 93, 105, 118, 122, 127, 147, 152, 160, 169, 171, 172, 176, 177, 190, 191], "crossing_length": 6, "400": [6, 17, 58, 88, 89, 122, 186], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 61, 62, 63, 71, 83, 89, 90, 91, 92, 118, 119, 122, 136, 146, 147, 150, 158, 162, 167, 172, 181, 185, 186, 189, 190, 191, 192, 196], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 58, 63, 69, 71, 72, 82, 84, 85, 90, 92, 97, 101, 104, 118, 122, 124, 132, 137, 146, 147, 148, 154, 163, 165, 169, 170, 175, 176, 180, 181, 185, 186, 190, 192, 196], "text": [7, 35, 37, 63, 79, 83, 118, 120, 122, 134, 135, 150, 152, 153, 162, 173, 182, 186], "manual": [7, 30, 58, 63, 69, 70, 75, 79, 84, 87, 102, 105, 120, 144, 146, 169, 171, 175, 177, 185, 190, 191, 192, 194], "pattern": [7, 58, 175], "No": [7, 10, 13, 23, 26, 70, 73, 90, 92, 105, 127, 132, 176], "input": [7, 17, 19, 43, 58, 63, 118, 147, 150, 189, 191, 196], "demonstr": [9, 10, 17, 173, 174, 181, 182, 196], "four": [9, 23, 52, 91, 129, 136, 147, 152, 158, 185], "readout": [9, 10, 17, 23, 90, 91], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 58, 124, 181, 190], "probe": [9, 17, 136, 146], "charg": [9, 182], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 122, 191], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 185], "5000": [9, 10, 23, 58, 126, 185, 186], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 185], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 88, 89, 90, 91, 93, 122, 127, 141, 182, 191], "3d": [10, 28, 105, 117, 122, 181, 186, 191], "integr": [10, 28, 102, 104, 105, 110, 180, 181, 183, 186, 193], "multi": [10, 29, 31, 32, 56, 58, 63, 66, 79, 84, 85, 122, 174, 175, 183, 186], "featur": [10, 37, 63, 148, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 193], "dt": 10, "almost": [11, 158, 186], "remov": [11, 34, 52, 83, 84, 122, 125, 146, 147, 155, 156, 160, 163, 170, 172, 173, 175, 186], "ebl": [11, 77, 175, 185], "edge_len": [12, 24], "80": [12, 13, 24, 36, 66, 88, 89, 91], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 68, 88, 89, 90, 91, 92, 134, 135, 189, 191], "pad_width": [13, 72, 90, 132, 136], "500": [13, 19, 25, 34, 48, 50, 56, 58, 63, 90, 105, 129, 132, 137, 153, 186, 191], "junctions_horizont": [13, 132], "horizont": [13, 18, 23, 25, 58, 72, 83, 90, 132, 136, 137, 164], "small_loop_area": 13, "small": [13, 22, 64, 166, 186, 189], "loop": [13, 71, 75, 90, 92, 132], "large_loop_area": 13, "larg": [13, 174, 189], "130": [13, 186], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 71, 72, 90, 93, 132, 141], "15": [13, 88, 89, 130, 191], "junction_width_larg": 13, "08": [13, 127], "junction_width_step_increment_smal": 13, "01": [13, 102, 105, 115, 122], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 185], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 58, 63, 66, 72, 88, 89, 90, 122, 132, 137, 147, 160], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 88, 89, 90, 93, 105, 122, 127, 132, 137, 162, 167, 181, 186], "64": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137, 147, 176], "r": [13, 25, 29, 32, 37, 38, 43, 58, 63, 64, 65, 90, 122, 132, 137, 147, 148, 162, 169, 172, 173, 186, 189, 192, 195], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 58, 63, 64, 65, 72, 83, 88, 89, 90, 93, 122, 132, 137, 147, 162, 186], "protect": [13, 25, 29, 32, 37, 38, 58, 63, 68, 90, 122, 132, 137], "1t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 84, 90, 122, 125, 132, 137, 146, 177, 181, 185, 186, 191], "2b1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 122, 132, 137, 185, 186, 191], "1b1": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "2t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 122, 132, 137, 186], "display_nam": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "displai": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 122, 132, 137, 181, 184, 185], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 58, 63, 64, 76, 79, 90, 106, 108, 122, 132, 137, 144, 146, 150, 154, 167, 171, 173, 175, 176, 177, 180, 182, 183, 184, 186, 188, 191, 193, 194, 195], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "appli": [13, 25, 29, 32, 37, 38, 58, 63, 65, 76, 83, 84, 85, 90, 105, 117, 119, 122, 123, 132, 136, 137, 167, 181, 191], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 70, 83, 84, 85, 88, 89, 90, 92, 93, 97, 105, 106, 119, 122, 128, 132, 133, 137, 140, 144, 148, 150, 153, 157, 160, 161, 162, 163, 167, 169, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196], "signal": [13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 118, 120, 122, 132, 137, 162, 181, 190, 191], "carri": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "oppos": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137, 191], "group": [13, 25, 29, 32, 37, 38, 58, 63, 69, 79, 90, 113, 114, 122, 132, 137, 146, 149, 177, 181, 186], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "etch": [13, 19, 25, 29, 32, 37, 38, 58, 63, 79, 90, 118, 119, 120, 122, 132, 137], "opposit": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 122, 125, 132, 137, 191], "too": [13, 25, 29, 32, 37, 38, 49, 58, 63, 64, 65, 67, 68, 90, 122, 132, 137, 158, 160, 172, 173, 174], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 122, 132, 137], "area_height": [13, 132], "height": [13, 17, 19, 34, 72, 76, 83, 90, 117, 119, 120, 122, 129, 132, 136, 152, 191], "1900": [13, 132], "area_width": [13, 132], "1300": [13, 19, 132], "pad_spac": [13, 132], "only_pad": [13, 132], "pad_configur": [13, 132], "junction_width_step": [13, 132], "automat": [13, 39, 55, 58, 63, 71, 76, 81, 83, 86, 97, 101, 132, 154, 167, 169, 170, 172, 173, 176, 177, 180, 181, 184, 185, 186, 187, 189], "junction_width": [13, 70, 90, 92, 132], "junction_test_pads_typ": [13, 132, 133], "junction_test_pads_paramet": [13, 132], "extra": [13, 19, 29, 33, 45, 63, 64, 66, 70, 83, 90, 92, 114, 132, 152, 163, 176], "_junction_test_pads_paramet": [13, 132], "previou": [13, 45, 63, 70, 90, 92, 132, 147, 172, 173, 181, 184, 185, 186], "state": [13, 45, 70, 90, 92, 132, 187, 189], "_paramet": [13, 37, 45, 70, 90, 92, 132], "mirror_squid": [13, 92, 132], "its": [13, 37, 58, 63, 64, 83, 92, 97, 105, 122, 132, 146, 147, 148, 163, 167, 169, 181, 185, 186, 187], "junction_paramet": [13, 70, 90, 92, 132], "_junction_paramet": [13, 70, 90, 92, 132], "finger_overshoot": [13, 71, 72, 90, 132], "include_base_metal_gap": [13, 71, 72, 90, 132], "shadow_margin": [13, 71, 72, 90, 132], "shadow": [13, 71, 72, 90, 132], "compact_geometri": [13, 71, 90, 132], "compact": [13, 71, 90, 132, 148], "geometri": [13, 34, 36, 37, 38, 43, 48, 52, 56, 57, 61, 62, 71, 88, 89, 90, 92, 93, 96, 97, 98, 118, 119, 122, 124, 125, 126, 127, 132, 153, 158, 163, 166, 175, 177, 181, 183, 184, 186, 190, 193, 194, 196], "separate_junct": [13, 71, 72, 90, 132], "offset_compens": [13, 71, 72, 90, 132], "lead": [13, 38, 57, 71, 72, 90, 105, 132, 162, 172, 189, 191], "offset": [13, 63, 71, 72, 83, 90, 93, 132], "mirror_offset": [13, 71, 72, 90, 132], "move": [13, 55, 63, 71, 72, 90, 92, 132, 147, 169, 177, 181, 182], "finger_overlap": [13, 71, 72, 90, 132], "insid": [13, 36, 57, 58, 63, 71, 72, 90, 97, 102, 105, 118, 120, 122, 132, 148, 154, 162, 177, 181, 184, 185, 186, 191, 194], "single_junct": [13, 71, 90, 132], "second": [13, 17, 32, 37, 43, 71, 90, 105, 108, 117, 118, 122, 132, 147, 186, 187, 189, 192], "predefin": [14, 64, 118, 181], "sma8": [14, 18, 126, 186], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 134, 135], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 171, 175, 176, 186], "circular": [17, 36, 62, 83, 88, 148], "island": [17, 36, 88, 89, 90, 91, 92, 93, 190, 191], "drivelin": [17, 88, 89, 90, 91], "11500": 17, "12700": 17, "8000": [17, 113], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 63, 141, 158, 181, 186], "32": [17, 88, 89], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 88, 89], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 88, 89], "30": [17, 18, 25, 56, 60, 61, 67, 88, 89, 102, 129, 137, 186, 190], "50": [17, 25, 35, 90, 113, 120, 154, 162], "couplers_arc_amplitude_qb1": 17, "angular": [17, 88, 89], "extens": [17, 88, 89, 120, 122, 170, 171, 176, 187, 190], "25": [17, 32, 41, 58, 191], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 88, 89], "drive_line_offset": 17, "end": [17, 29, 32, 55, 58, 63, 64, 65, 101, 104, 108, 117, 119, 122, 125, 162, 163, 169, 170, 181, 184, 185, 190, 191], "drive": [17, 88, 89, 90, 126], "ground_gap": [17, 36, 57, 88, 89, 90], "1400": 17, "900": [17, 186], "coupler_ext": [17, 90], "150": [17, 88, 90, 93, 186], "island1_ext": [17, 90], "first": [17, 18, 23, 37, 43, 58, 63, 64, 76, 79, 90, 117, 118, 121, 122, 147, 160, 162, 167, 170, 172, 173, 175, 176, 181, 183, 185, 186, 188, 189, 191, 192], "island2_ext": [17, 90], "drive_posit": [17, 90], "1100": 17, "island_island_gap": [17, 90], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 63, 68, 101, 104, 105, 159, 189, 194, 196], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 97], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 176, 185, 186], "14": [18, 19, 23, 25, 172, 173], "28": [18, 19, 161, 173, 176], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 141], "n_ab": [18, 56, 129], "res_term": [18, 56], "termin": [18, 56, 58, 63, 64, 65, 108, 122, 125, 162, 172, 173, 176, 185, 187, 190, 191], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 58, 65, 135, 185, 187], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 68, 72, 74, 90, 92, 93, 102, 122, 190], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 58, 63, 64, 65, 66, 83, 93, 185], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 64, 65, 147], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 63, 64, 191], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 63, 70, 75, 86, 105, 111, 122, 162, 167, 170, 174, 185, 189, 191, 192], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 63, 79, 121, 184, 191], "1e": [18, 56, 105, 118, 127], "ground_grid_in_trac": [18, 55, 56, 63, 64, 65, 67], "trace": [18, 29, 48, 49, 56, 63, 64, 65, 67, 68, 120], "border": [18, 122], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 58], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 181], "attach": [19, 83, 155, 185], "pl_": 19, "_t_port_c": 19, "identifi": [19, 84, 106, 158, 159, 166, 185, 186, 187], "long": [19, 166, 173, 186, 189, 190, 191], "same": [19, 23, 36, 37, 38, 55, 63, 76, 83, 84, 85, 97, 118, 122, 147, 154, 157, 158, 159, 160, 163, 167, 172, 173, 174, 177, 181, 184, 185, 186, 187, 189, 191], "wai": [19, 22, 37, 63, 84, 85, 115, 118, 162, 167, 173, 175, 176, 177, 180, 181, 185, 186, 191, 192], "direct": [19, 22, 32, 33, 37, 49, 63, 64, 83, 92, 105, 119, 122, 126, 140, 147, 150, 162, 181, 186, 191], "_corner": [19, 162], "cpw": [19, 25, 56, 137], "exclud": [19, 160], "finger_control": [19, 57], "solid": [19, 190], "twofac": 19, "ground_grid_avoid": [19, 37, 92, 186], "counter": [19, 58, 147], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 148], "800": [19, 58], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 182], "bridge_spac": [19, 58], "parametr": [20, 175, 181], "connect": [20, 22, 23, 38, 43, 49, 50, 58, 64, 88, 89, 114, 120, 122, 133, 136, 154, 181, 182, 186, 191], "pairwis": 20, "coplanar": [20, 43, 63, 64, 65, 67, 68, 159, 181, 186, 190], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 58, 63], "launcher_pitch": 20, "pitch": [20, 25, 137], "635": 20, "160": [20, 182], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 64, 76, 181, 184, 186, 191, 192], "coupl": [23, 48, 182, 190], "half": [23, 91, 186], "abov": [23, 58, 122, 154, 173, 174, 177, 181, 182, 184, 189, 190, 192, 193], "below": [23, 29, 58, 117, 119, 122, 140, 154, 163, 165, 172, 180, 184, 185, 186, 187, 189, 190, 191, 193], "chargelin": [23, 93], "whose": [23, 154, 157], "upper": [23, 74, 92, 119, 122, 191], "six": 23, "5400": [23, 185], "5500": [23, 185], "use_test_reson": [23, 124], "test_res_length": 23, "5600": [23, 185], "5800": 23, "metrologi": 25, "segment": [25, 58, 63, 64, 65, 67, 68, 117, 122, 181], "crossect": 25, "analysi": [25, 102, 114, 190], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 137], "placehold": [25, 137, 185], "hor_dist": [25, 137], "ver_dist": [25, 137], "tsv_diamet": [25, 60, 137], "diamet": [25, 32, 41, 58, 60, 137], "tsv_margin": [25, 60, 137], "tsv_elliptical_width": [25, 61, 137], "ellipt": [25, 61, 137], "pos_start": [26, 126], "end_i": [26, 126], "c_kappa_l_fing": 26, "dedic": [26, 118, 122, 127, 191, 193], "function": [26, 31, 37, 45, 57, 58, 63, 66, 70, 75, 79, 82, 84, 86, 92, 95, 97, 106, 110, 117, 118, 119, 122, 123, 126, 127, 139, 141, 144, 147, 148, 150, 157, 158, 160, 163, 166, 167, 168, 174, 183, 185, 186, 189, 190, 191, 193], "also": [26, 28, 37, 49, 55, 63, 64, 65, 67, 76, 83, 84, 85, 86, 87, 92, 93, 104, 111, 122, 127, 132, 134, 135, 136, 140, 146, 147, 148, 154, 155, 156, 158, 160, 163, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 189, 190, 191, 193, 195], "assum": [26, 64, 65, 76, 84, 122, 127, 176, 182, 190, 191], "follow": [26, 58, 63, 64, 76, 79, 81, 82, 96, 97, 98, 122, 124, 125, 126, 127, 147, 148, 154, 155, 159, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196], "attribut": [26, 37, 82, 120, 127, 160, 167, 168], "arm_width_a": [26, 126, 127], "arm_width_b": [26, 126, 127], "qubit_spac": [26, 126, 127], "fluxline_typ": [26, 45, 46, 47, 92, 127, 191], "rr_cpl_width": [26, 127], "arm": [26, 38, 92, 93, 126, 127, 130, 132, 186], "24": [26, 93, 126, 127], "rr": [26, 127], "qb": [26, 127], "um": [26, 93, 120, 122, 127, 152, 159], "file": [27, 37, 69, 76, 77, 79, 81, 82, 83, 84, 101, 102, 104, 105, 106, 109, 114, 118, 121, 122, 144, 146, 151, 153, 156, 158, 159, 163, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195], "thing": [27, 81, 167, 177, 186, 189], "path": [27, 58, 63, 64, 76, 82, 86, 101, 102, 104, 106, 109, 114, 117, 118, 121, 126, 146, 147, 151, 155, 158, 159, 169, 173, 174, 176, 180, 181, 186, 187, 188, 189, 192, 196], "sub": [27, 37, 63, 64, 71, 83, 92, 119, 122, 163, 167, 181, 185], "repres": [28, 63, 64, 65, 70, 75, 76, 81, 83, 84, 85, 118, 175, 184, 191], "form": [28, 63, 97, 102, 105, 111, 115, 122, 154, 166, 167], "being": [28, 79, 172, 186], "pcelldeclarationhelp": [28, 37, 167], "load": [28, 69, 84, 87, 90, 91, 93, 151, 153, 155, 159, 163, 167, 184, 185, 186], "klayout": [28, 63, 64, 76, 79, 86, 118, 122, 144, 146, 153, 154, 155, 156, 158, 161, 167, 169, 170, 172, 173, 175, 177, 180, 181, 182, 183, 185, 186, 191, 193, 194, 195], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 57, 63, 64, 69, 70, 75, 76, 87, 88, 89, 90, 92, 93, 97, 132, 148, 154, 163, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 184, 191, 192, 194, 195], "share": [28, 92, 122, 147, 189], "them": [28, 97, 102, 158, 167, 172, 173, 174, 177, 180, 181, 185, 186, 191], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 64, 76, 79, 83, 84, 85, 87, 88, 89, 90, 93, 102, 118, 122, 146, 147, 154, 155, 158, 160, 163, 167, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 190, 191, 196], "easi": [28, 172, 174, 175], "support": [28, 36, 63, 76, 99, 104, 105, 114, 146, 148, 153, 173, 175, 176, 181, 186, 187, 189, 190, 191, 193, 196], "concept": [28, 181, 184, 186, 191], "belong": [28, 79, 158, 186], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 57, 77, 83, 84, 88, 89, 90, 93, 122, 172, 173, 174, 186, 191], "determin": [28, 37, 52, 63, 64, 83, 84, 101, 102, 105, 122, 136, 154, 156, 162, 163, 185, 186, 187, 190, 191], "actual": [28, 31, 45, 63, 64, 65, 70, 75, 83, 84, 92, 99, 169, 173, 177, 184, 185, 186, 191, 196], "refer": [28, 35, 36, 37, 38, 39, 76, 79, 82, 88, 89, 122, 146, 147, 148, 162, 165, 167, 172, 173, 174, 181, 184, 186, 192], "taper": [29, 39, 49, 63, 68, 90], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 79, 167, 181, 185], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 89, 122, 191], "adjac": [29, 63, 122, 147, 149], "bridg": [29, 31, 32, 33, 55, 58, 63, 66, 96, 186], "waveguide_extra": 29, "taper_length": [29, 39, 63, 68], "31": [29, 68, 148], "41592653589793": [29, 68], "m2": [29, 68, 176], "a2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "non": [29, 36, 38, 43, 55, 57, 58, 63, 68, 102, 118, 122, 147, 148, 153, 166, 190, 191], "b2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "add_met": [29, 49, 63, 64, 65, 67, 68], "add": [29, 32, 37, 49, 55, 61, 63, 64, 65, 67, 68, 76, 83, 84, 96, 98, 105, 114, 118, 122, 124, 125, 126, 127, 136, 160, 167, 169, 177, 182, 185, 186, 187, 191, 192], "airbridge_typ": [29, 31, 32, 33, 58, 63, 66], "bridge_width": [29, 31, 32, 58], "pad_length": [29, 31, 32, 58], "22": [29, 72, 90, 169, 172, 176], "bridge_length": [29, 31, 58, 186], "60": [29, 39, 88, 89], "without": [31, 45, 58, 63, 70, 75, 76, 83, 86, 92, 115, 122, 133, 173, 174, 176, 177, 181, 185, 186, 187, 189, 191, 195], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 84, 85, 88, 89, 90, 92, 93, 97, 102, 105, 122, 148, 160, 183, 190, 192, 193], "otherwis": [31, 32, 33, 37, 63, 64, 76, 96, 98, 106, 108, 119, 122, 123, 124, 125, 126, 127, 148, 155, 163, 172, 176, 181, 191], "user": [31, 32, 33, 37, 61, 63, 76, 84, 92, 108, 166, 169, 170, 172, 173, 175, 176, 180, 185, 186, 187, 189, 191], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 60, 63, 70, 88, 89, 90, 93, 97, 122, 132, 160, 167, 191], "18": [31, 45], "44": [31, 58, 186], "equival": [32, 63, 148], "origin": [32, 33, 37, 41, 61, 62, 65, 66, 73, 74, 76, 83, 118, 122, 147, 152, 186], "geometr": [32, 33, 41, 61, 62, 147, 175], "include_bump": [32, 58], "ubm_diamet": [32, 41, 58], "under": [32, 37, 41, 58, 76, 84, 120, 122, 155, 169, 172, 177, 180, 181, 184, 186], "bump_diamet": [32, 41, 58], "part": [33, 48, 49, 58, 84, 92, 93, 105, 119, 120, 122, 132, 147, 172, 181, 182, 184, 185, 186, 189], "port_a": [33, 37, 63], "port_b": [33, 37, 63, 186], "closest": [33, 35, 115, 122, 136, 146, 154, 191], "pad_extra": 33, "capacit": [34, 57, 90, 91, 102, 105, 120, 127, 162, 183, 189, 191, 193], "fem": [34, 189], "comput": [34, 69, 114, 147, 187, 189, 190], "when": [34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 76, 83, 88, 89, 90, 93, 105, 108, 110, 118, 119, 120, 122, 146, 162, 163, 166, 167, 169, 170, 173, 176, 181, 184, 185, 186, 187, 189, 191, 194], "best": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 173, 176, 186], "practic": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 167, 180, 191], "effect": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 102, 122, 123, 126, 152, 172, 174, 190], "serv": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93], "deriv": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 140, 147, 167, 186], "noth": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 160, 184], "els": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 148], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 57, 88, 89, 90, 93, 97, 122, 141, 160, 191], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 76, 88, 89, 90, 93, 101, 104, 118, 148, 154, 165, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 77, 79, 86, 88, 89, 90, 93, 95, 97, 121, 144, 146, 147, 159, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "decid": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 191], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 81, 84, 185], "either": [34, 37, 58, 69, 70, 75, 76, 79, 84, 85, 87, 122, 133, 147, 162, 172, 181, 186, 191, 193], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57], "finger_gap": [34, 38, 39, 57], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 76, 82, 104, 109, 118, 121, 122, 136, 174, 186], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 181], "outer": [36, 49, 83, 89, 136], "semi": 36, "fix": [36, 38, 57, 63, 122, 174, 176], "imped": [36, 88, 89, 120], "r_inner": [36, 89], "r_outer": [36, 89], "extern": [36, 89, 175, 180, 183, 186, 191, 192], "swept_angl": 36, "cover": [36, 52, 83, 119, 122, 141, 149, 162, 174, 181, 185, 190], "180": [36, 43, 63, 66, 89], "outer_island_width": [36, 89], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 186], "cell_transf": [37, 122], "extract": [37, 154, 158, 162, 163], "specif": [37, 52, 63, 70, 75, 76, 81, 82, 83, 84, 97, 110, 122, 148, 162, 165, 167, 169, 172, 173, 176, 177, 181, 184, 186, 191, 192, 193], "convert": [37, 63, 83, 122, 148, 150, 154, 155, 157, 158, 162, 163, 180, 182, 183], "target": [37, 63, 139, 162, 173, 176], "system": [37, 79, 105, 146, 162, 169, 172, 173, 176, 177, 183, 189, 192], "recurs": [37, 76, 122, 148, 157, 162], "level": [37, 76, 119, 122, 146, 148, 154, 162, 166, 167, 174, 180, 181, 184, 186, 189, 196], "look": [37, 76, 121, 122, 155, 162, 172, 175, 186], "subcel": [37, 63, 76, 92, 122, 132, 162, 186], "behav": 37, "like": [37, 63, 70, 75, 84, 148, 160, 167, 169, 170, 173, 174, 176, 177, 181, 185, 186, 189, 190], "target_cel": 37, "label_tran": [37, 76, 122], "note": [37, 58, 63, 76, 83, 84, 105, 150, 161, 167, 169, 172, 173, 174, 175, 181, 185, 186, 187, 189, 195], "To": [37, 84, 85, 86, 102, 105, 126, 148, 169, 170, 172, 176, 177, 181, 184, 185, 186, 189, 190, 191, 195, 196], "inherit": [37, 167, 186, 191], "It": [37, 63, 64, 76, 83, 84, 85, 86, 92, 122, 132, 148, 167, 169, 172, 173, 174, 175, 176, 177, 181, 182, 186, 188, 189, 191, 192], "directli": [37, 63, 76, 122, 174, 180, 181, 185, 186, 189], "take": [37, 76, 97, 118, 122, 123, 148, 160, 162, 172, 181, 182, 189, 190, 192, 193, 196], "provid": [37, 76, 85, 95, 122, 148, 169, 181, 184, 190, 191, 196], "keyword": [37, 52, 63, 76, 84, 85, 96, 97, 98, 117, 122, 124, 125, 126, 127, 191], "placement": [37, 52, 76, 83, 122, 126, 163, 170], "parent": [37, 76, 122, 126, 163, 167], "allow": [37, 63, 64, 76, 83, 92, 102, 105, 122, 132, 148, 167, 173, 175, 176, 177, 181, 189, 190, 195], "possibl": [37, 52, 58, 63, 64, 76, 84, 92, 122, 133, 160, 167, 169, 172, 173, 177, 181, 186, 187, 189, 190, 192, 194], "instanc": [37, 52, 63, 76, 84, 85, 102, 105, 122, 140, 141, 145, 150, 154, 157, 158, 159, 163, 167, 172, 173, 181, 182, 184, 186, 190, 191, 192, 193, 194], "properti": [37, 61, 76, 83, 85, 97, 122, 159, 160, 163, 167, 180, 181, 182, 184, 186], "rel": [37, 76, 92, 101, 102, 105, 117, 122, 132, 152, 155, 162, 167, 186, 190], "dvector": [37, 76, 83, 92, 122, 147], "must": [37, 63, 64, 76, 119, 122, 147, 150, 161, 162, 163, 172, 173, 177, 184, 186, 189, 190, 191, 192, 195], "default_fac": [37, 79, 186], "doe": [37, 63, 154, 169, 172, 177, 181, 189, 193, 196], "necessarili": [37, 64], "subtyp": 37, "abstract": [37, 97, 122, 167], "care": [37, 147, 172, 174], "str": [37, 63, 83, 101, 102, 104, 105, 107, 108, 111, 113, 118, 120, 122, 123, 139, 146, 148, 150, 153, 154, 155, 160, 163], "indic": [37, 79, 117, 122, 162, 186, 190, 191], "refpoint_transform": 37, "conveni": [37, 63, 83, 86, 122, 188, 191], "new": [37, 76, 96, 97, 98, 109, 122, 124, 125, 126, 127, 139, 145, 146, 150, 155, 160, 163, 166, 167, 172, 173, 174, 177, 181, 182, 183, 185], "present": [37, 110, 122, 163, 169, 172, 176], "avail": [37, 76, 92, 118, 122, 167, 173, 177, 181, 186, 189, 190, 192, 196], "give": [37, 105, 122, 172, 176, 177, 186, 190], "current": [37, 76, 86, 99, 102, 114, 122, 146, 176, 181, 183, 185, 186, 187, 191], "po": [37, 126, 136], "well": [37, 115, 147, 163, 185, 191, 196], "netlist": [37, 84, 158, 159, 180, 185], "Will": [37, 118], "decor": [37, 160, 167, 191], "annot": [37, 61, 64, 65, 79, 170, 180, 186], "evalu": 37, "replac": [37, 83, 84, 150, 163, 172, 185, 192], "mark": [37, 79, 184], "go": [37, 76, 122, 165, 169, 170, 182, 184, 186, 191, 195], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 109, 122, 154, 167, 175, 177, 185, 186, 187, 189, 194], "expos": [37, 63, 86, 184], "renam": 37, "nopar": [37, 97, 122], "abstract_class": [37, 97, 122], "ancestor": [37, 97, 122, 167], "up": [37, 97, 101, 102, 104, 105, 120, 122, 149, 153, 155, 161, 162, 167, 172, 173, 174, 175, 181, 184, 186, 189, 190, 191, 193], "draw": [37, 61, 63, 159, 173, 175, 177, 180, 186, 191, 192], "error_msg": 37, "error": [37, 101, 104, 105, 109, 110, 114, 156, 169, 172, 175, 176, 177, 181, 184, 186], "rais": [37, 63, 109, 110, 148, 150, 163, 184], "valueerror": [37, 63, 148, 150], "messag": [37, 76, 110, 166, 176, 177], "pure": [37, 190], "doesn": [37, 97, 122, 181, 191], "t": [37, 43, 63, 66, 79, 97, 110, 122, 148, 167, 169, 172, 173, 176, 181, 186, 189, 191], "dpolygon": [37, 119, 164, 186], "etc": [37, 63, 79, 118, 122, 158, 163, 167, 172, 177, 186, 194], "primari": [37, 172, 190], "abc": 37, "syncronis": 37, "json": [37, 82, 101, 104, 109, 118, 121, 146, 148, 158, 159, 163, 189, 190, 192, 196], "represent": [37, 63, 83, 147, 148, 189], "sever": [37, 63, 76, 148, 167, 172, 177, 181, 185, 186, 191, 192, 193], "editor": [37, 86, 172, 173, 176, 177, 180, 182, 184, 185, 186, 192, 195], "particularli": [37, 160], "figur": [37, 159, 191], "out": [37, 76, 108, 122, 153, 154, 162, 172, 173, 176, 185, 186, 187, 190], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 92], "Or": [37, 84, 86], "consid": [37, 64, 83, 97, 118, 147, 150, 173, 190, 191], "descend": [37, 157, 167], "common": [37, 52, 95, 109, 175, 176, 184, 192], "respect": [37, 63, 119, 120, 122, 130, 152, 164, 191], "adjust": [37, 39, 63, 181], "_port": 37, "orient": [37, 63, 117, 163], "output_rot": [37, 43, 63], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 76, 183, 193], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 166, 172, 176], "match": [41, 84, 85, 110, 177, 187, 192], "contact": [41, 146], "over": [41, 63, 85, 102, 105, 122, 154, 160, 169, 172, 184, 190, 191], "inter": [42, 43], "output": [43, 63, 104, 105, 118, 139, 148, 150, 154, 156, 169, 173, 180, 186, 187, 189, 190, 192, 193, 196], "chosen": [43, 55, 58, 76, 110, 181, 187, 189], "inter_bump_dist": [43, 63], "w": [43, 58, 63, 64, 126], "connector_a": [43, 58, 63], "connector_b": [43, 58, 63], "round_connector": [43, 58, 63], "round": [43, 58, 63, 72, 90, 93, 105, 122, 153, 186], "n_center_bump": [43, 63], "seri": [43, 63, 91, 96, 192], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 92], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 63, 73, 74, 92, 105, 122, 129, 139, 147, 189, 190], "ground_width": 48, "middl": [48, 63, 122, 123, 185, 191], "wirebond": [49, 50], "west": [49, 93, 146], "east": [49, 93, 146], "scale": [49, 83], "a_launch": 49, "b_launcher": 49, "l": [49, 67, 168], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 58, 63, 66, 76, 83, 84, 85, 96, 97, 98, 122, 124, 125, 126, 127, 139, 141, 148, 155, 160], "wafer": [52, 83, 85, 185, 186, 194], "By": [52, 55, 83, 84, 85, 92, 105, 122, 148, 156, 166, 184, 185, 186, 187, 189, 194], "own": [52, 93, 118, 146, 169, 172, 175, 176, 177, 186], "wish": [52, 172, 185], "custom": [52, 63, 79, 88, 89, 104, 110, 118, 148, 170, 175, 189], "hous": 52, "encod": [52, 148], "prefer": [52, 144, 167, 170, 173, 182, 188, 189, 194], "inst": [52, 54, 140], "surround": [52, 163], "extend": [52, 63, 64, 122, 162, 175, 185, 186], "box_margin": 52, "window": [52, 54, 76, 104, 146, 147, 169, 171, 176, 177, 181, 182, 184, 185, 188, 192, 195], "flyover": [52, 54], "arm_length": [54, 92, 93, 132, 186, 191], "arm_width": [54, 93, 186], "ubm": 54, "arrow_numb": 54, "arrow": [54, 184], "start_point": 55, "end_point": 55, "altern": [55, 58, 63, 64, 84, 102, 105, 108, 122, 158, 163, 172, 189, 190, 192], "shown": [55, 76, 106, 108, 118, 158, 159, 167, 181, 184, 189], "latter": [55, 63, 84, 169], "cannot": [55, 63, 150, 176, 186, 187], "edit": [55, 63, 64, 150, 173, 177, 180, 182, 183, 186, 195], "minim": [55, 63], "taken": [55, 64, 65, 91, 118, 122, 147, 154, 167, 180, 191], "underli": [55, 186], "equidist": 55, "n_bridg": [55, 63, 96], "600": 55, "3000": [55, 186], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 141], "intern": [56, 97, 122, 162, 181, 190, 191, 192], "epr": [56, 105, 117, 120, 190], "continu": [57, 58, 63, 64, 147, 174], "numer": 57, "optim": 57, "achiev": [57, 63, 92], "growth": 57, "relat": [57, 79, 110, 175, 178, 186], "input_path": 58, "goe": [58, 63, 147], "last": [58, 63, 64, 79, 121, 122, 147, 185, 186], "poly_path": 58, "unless": [58, 172, 173, 176, 185], "alreadi": [58, 76, 101, 108, 118, 172, 182, 185, 186], "longer": [58, 157, 160, 181], "than": [58, 63, 76, 79, 83, 105, 117, 122, 147, 154, 156, 158, 167, 175, 176, 184, 186, 189, 190], "vertex": 58, "parallel": [58, 84, 125, 172, 185, 189], "polygon_path": 58, "want": [58, 83, 154, 163, 170, 172, 173, 174, 181, 184, 185, 186, 188, 189, 191, 192, 196], "choos": [58, 84, 92, 132, 173, 176, 177, 181, 182, 184, 185, 186, 187, 189, 196], "attempt": [58, 148, 158, 172], "find": [58, 86, 115, 143, 150, 155, 167, 174, 176, 186], "largest": [58, 147], "zero": [58, 118, 122, 191], "independ": [58, 172, 173, 189], "n_bridges_pattern": 58, "neg": [58, 122, 148], "so": [58, 63, 84, 96, 97, 98, 118, 122, 124, 125, 126, 127, 146, 147, 162, 163, 167, 169, 172, 173, 174, 176, 177, 181, 184, 186, 190, 192, 195], "above_spac": 58, "below_spac": 58, "right_spac": 58, "x_space": 58, "y_space": 58, "bridges_left": 58, "bridges_bottom": 58, "bridges_right": 58, "bridges_top": 58, "easili": [58, 66, 114, 141, 173, 174, 175, 186], "old": [58, 66, 155, 156, 163, 185], "spiralresonatorrectangl": 58, "bx": [58, 63, 64], "ex": [58, 63, 64, 176], "auto_spac": 58, "include_connector_length": 58, "manual_spac": 58, "term2": [58, 63, 64, 126], "substrat": [61, 62, 105, 117, 118, 119, 122, 186, 191], "e": [62, 63, 66, 83, 92, 105, 123, 126, 148, 158, 163, 167, 169, 173, 186, 187, 188, 189, 190], "composit": [63, 167, 181, 183], "suppli": [63, 64, 85, 96, 98, 122, 124, 125, 126, 127, 146, 191], "serial": [63, 148], "from_seri": 63, "ast": [63, 150], "literal_ev": [63, 150], "node_object": 63, "node_obj": 63, "element_nam": 63, "human": [63, 175, 180], "readabl": [63, 180], "storag": [63, 181], "conform": [63, 114], "format": [63, 97, 146, 154, 165, 189, 190, 192, 193], "class_str": 63, "parameter_dict": 63, "__str__": 63, "omit": [63, 176, 185, 186, 191], "made": [63, 92, 157, 158, 159, 191], "perspect": 63, "rout": [63, 122, 156, 181, 186], "As": [63, 177, 181, 184, 185, 186], "bonu": 63, "arbitrari": [63, 64, 148, 186], "next": [63, 119, 122, 134, 135, 147, 177, 181, 184, 191], "waypoint": [63, 64], "except": [63, 64, 76, 84, 110, 148, 150, 158, 160, 163, 167, 181, 184], "collinear": 63, "back": [63, 186, 187], "pass": [63, 76, 84, 85, 96, 97, 98, 102, 105, 106, 122, 124, 125, 126, 127, 147, 148, 154, 155, 159, 167, 186, 191], "ab_across": 63, "across": [63, 120, 191], "evenli": 63, "preced": 63, "calcul": [63, 83, 92, 102, 105, 120, 132, 173, 181, 186, 190], "ab_to_ab_spac": 63, "ab_to_node_clear": 63, "former": 63, "densiti": [63, 83, 139, 181], "fact": 63, "instead": [63, 66, 76, 84, 105, 148, 150, 167, 169, 172, 177, 181, 186, 187, 189, 190, 191], "normal": [63, 120, 167, 169, 186], "those": [63, 148, 181, 185, 187], "correct": [63, 86, 117, 150, 167, 176, 177, 186, 187], "compar": [63, 64, 148, 153, 180, 186], "notabl": 63, "detail": [63, 95, 105, 169, 172, 173, 177, 184, 186, 190, 192, 193], "everi": [63, 64, 121, 148, 163, 167, 170, 173, 181, 194], "done": [63, 105, 173, 174, 181, 186, 188, 189, 190, 195], "segment_length": 63, "individu": [63, 83, 84, 85, 105, 118, 122, 166, 172, 173, 181, 191], "regular": [63, 176, 185, 191, 192], "test_waveguide_composit": [63, 184], "lym": [63, 163, 181, 184, 192], "script": [63, 76, 101, 104, 106, 108, 109, 121, 146, 154, 163, 169, 170, 172, 173, 176, 177, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196], "were": [63, 154, 163], "explicitli": [63, 105, 146, 176, 189], "implicitli": 63, "node_index": [63, 145, 150], "_created_": 63, "associ": [63, 76, 159, 184], "particular": [63, 177, 184, 186], "subscel": 63, "appear": [63, 177, 181, 182, 184, 194], "retriev": 63, "itself": [63, 172, 177, 186, 190], "count": [63, 122, 140, 191], "consecut": [63, 149], "special": [63, 147, 181], "consequ": [63, 91, 158], "accumul": 63, "oni": 63, "report": [63, 84, 105, 174], "route_funct": 63, "initial_guess": 63, "waveguide_param": 63, "lambda": 63, "f": [63, 66, 118, 120, 127, 169, 184], "more": [63, 79, 81, 84, 101, 104, 114, 118, 122, 158, 166, 167, 168, 169, 172, 173, 175, 177, 180, 181, 184, 185, 186, 189, 190, 191, 192, 193, 195], "compon": [63, 158], "tune": [63, 92, 163, 191], "weight": 63, "initi": [63, 76, 96, 97, 98, 122, 124, 125, 126, 127, 154, 162, 184, 185], "reason": [63, 167, 186], "interfac": [63, 105, 117, 118, 122, 177, 190, 191], "snap": [63, 154], "behavior": [63, 76, 148], "unmodifi": 63, "requir": [63, 76, 105, 110, 144, 154, 167, 168, 171, 172, 174, 176, 177, 180, 181, 185, 186, 189, 191, 192, 193, 196], "chain": 63, "iter": [63, 64, 102, 105, 148, 154, 190], "approri": 63, "target_len": 63, "point_a": 63, "point_a_corn": 63, "point_b": 63, "point_b_corn": 63, "endpoint": [63, 64, 118, 147, 158], "enable_gui_edit": [63, 150], "gui_path": 63, "gui_path_shadow": 63, "hidden": [63, 79, 160, 167, 186], "detect": [63, 181], "tight_rout": 63, "tight": 63, "airbridge_param": 63, "radio": 64, "bent": 64, "open": [64, 90, 91, 146, 170, 172, 176, 177, 179, 181, 182, 183, 184, 185, 189, 190, 195], "dpath": [64, 186], "partial": [64, 181, 182], "case": [64, 79, 84, 86, 109, 118, 122, 146, 157, 163, 170, 173, 174, 176, 177, 180, 181, 184, 185, 186, 187, 190, 191], "guid": [64, 84, 125, 168, 169, 175, 177, 181, 191], "visibl": [64, 76, 172, 176, 177, 181, 184, 185, 186], "graphic": [64, 83, 147, 177], "due": [64, 167, 176], "precis": [64, 118, 122, 175, 190], "arithmet": 64, "corner_safety_overlap": 64, "point1": 64, "point2": 64, "point3": 64, "data": [64, 79, 83, 95, 97, 102, 105, 118, 120, 121, 122, 154, 159, 163, 176, 184, 186, 190, 192, 193], "v1": 64, "v2": 64, "alpha1": 64, "alpha2": 64, "corner_po": 64, "vector": [64, 147], "elem": [64, 65], "point_1": 64, "point_2": 64, "term_len": [64, 65], "face_index": [64, 65], "One": [64, 122, 152, 158, 173, 181, 191], "waveguide_cel": 64, "annotation_lay": 64, "enough": [64, 154], "neighbor": [64, 181], "begin_shapes_rec": 64, "we": [64, 79, 83, 122, 158, 162, 163, 166, 167, 168, 172, 173, 176, 177, 181, 184, 185, 186, 189, 191, 192, 194], "unsign": [64, 147], "maximum": [64, 76, 102, 105, 189, 190], "tline": 64, "amount": [64, 122, 147, 187, 189], "ensur": [64, 110, 148, 167], "overlap": [64, 122, 147, 149, 158, 186], "001": [64, 105], "stop": [65, 102, 105, 147, 172, 184, 190], "radian": [65, 147], "circl": [65, 147, 184], "alpha": 65, "left_gap_inn": 65, "left_gap_out": 65, "right_gap_inn": 65, "right_gap_out": 65, "left_protect": 65, "right_protect": 65, "would": [65, 86, 148, 150, 158, 173, 174, 181, 186], "rad": 65, "141592653589793": 65, "multiwai": 66, "splitter": 66, "letter": [66, 79, 108, 153, 155, 177], "length_extra": 66, "length_extra_sid": 66, "waveguidecoplanartcross": 66, "measur": [66, 88, 89, 122, 129, 184, 196], "11": [66, 117, 122, 172, 173], "270": 66, "use_airbridg": 66, "centr": [66, 88, 89], "bridge_dist": 66, "a_list": 66, "b_list": 66, "port_nam": [66, 110], "c": [66, 84, 126, 167], "d": [66, 84, 122, 148, 172, 185, 189], "g": [66, 83, 148, 163, 186], "h": [66, 120, 127], "j": [66, 190], "design": [69, 70, 75, 82, 84, 87, 92, 163, 170, 173, 175, 180, 181, 184, 190, 193, 194], "packag": [69, 86, 95, 166, 169, 172, 173, 175, 180, 186, 187, 188, 190, 194, 196], "oasi": [69, 109, 115], "devic": [69, 92, 132, 186], "research": 69, "qcd1": 69, "qcd2": 69, "qcd3": 69, "thu": [70, 75, 190], "junctionnam": 70, "02": [70, 90, 92, 132], "style": [71, 72, 166, 171, 175, 186], "distinct": [71, 176, 181], "top_pad_lay": 71, "edge_height": 71, "small_loop_height": 71, "loop_bottom_i": 71, "delta_j": 71, "finger_margin": 71, "junction_shapes_top": 71, "junction_shapes_bottom": 71, "shadow_shap": 71, "h_pad_height": 71, "v_pad_width": 71, "pad_overlap": 71, "tp_width": 71, "tp_height": 71, "rounding_param": 71, "bp_height": 71, "bp_gap_x": 71, "big_loop_height": 71, "include_base_metal_addit": [72, 90], "pad_height": [72, 90, 129, 136], "pad_to_pad_separ": [72, 90], "x_offset": [72, 90], "pad_rounding_radiu": [72, 90], "junction_total_length": [73, 74, 92, 122], "26": 73, "33": [74, 92, 122], "junction_upper_pad_width": [74, 92, 122], "8": [74, 92, 117, 122, 159, 160, 167], "junction_upper_pad_length": [74, 92, 122], "13": [74, 92, 122, 176], "junction_lower_pad_width": [74, 92, 122], "junction_lower_pad_length": [74, 92, 122], "squidnam": 75, "loop_area": [75, 90, 92, 132], "background_color": 76, "ffffff": 76, "helper": [76, 85, 97, 110, 117, 122, 138, 147, 155, 162, 173, 186, 191], "render": [76, 122], "environ": [76, 114, 169, 171, 172, 176, 187, 189, 193, 194, 196], "layoutview": [76, 184], "cellview": [76, 184], "view": [76, 79, 84, 105, 145, 154, 161, 173, 174, 177, 181, 184, 186, 189, 192, 195], "imag": [76, 81, 159, 169, 170, 173, 175, 176, 183, 184, 185, 187, 189, 190, 191], "tab": [76, 148, 181, 182, 184, 185], "standalon": [76, 86, 146, 167, 171, 172, 175, 176, 185, 188], "python": [76, 86, 121, 148, 150, 151, 154, 167, 168, 169, 171, 175, 177, 180, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196], "mode": [76, 144, 173, 177, 180, 182, 184, 189, 192, 195], "keep": [76, 167, 173, 181, 185], "scope": [76, 173], "macro": [76, 154, 163, 172, 175, 176, 177, 180, 181, 183, 185, 186, 192, 194, 195], "applic": [76, 146, 147, 176, 182, 183, 195], "command": [76, 84, 86, 94, 109, 121, 154, 168, 169, 170, 172, 173, 174, 176, 183, 184, 186, 187, 189, 195], "act": [76, 120], "onc": [76, 104, 119, 144, 162, 167, 177, 181, 182, 184, 185, 186, 187, 189, 191, 192, 196], "png": [76, 170], "jupyt": [76, 171], "notebook": [76, 171], "inlin": [76, 181], "wrap": [76, 77], "whether": [76, 90, 92, 117, 120, 121, 132, 146, 169, 188, 190], "background": [76, 187], "color": [76, 186, 191], "html": [76, 79, 169, 170, 176], "white": 76, "fit": [76, 105, 184, 186], "zoom": [76, 181, 182, 184], "main": [76, 83, 94, 104, 105, 158, 169, 173, 177, 180, 181, 184, 185, 186, 193, 194], "ipython": 76, "bold": [76, 181, 184], "clear": 76, "popul": [76, 83, 84, 154], "top_cell_nam": 76, "filenam": [76, 82, 115, 156, 158], "layers_set": 76, "directori": [76, 82, 108, 109, 146, 167, 169, 170, 172, 173, 174, 175, 176, 180, 184, 185, 186, 187, 192], "max_siz": 76, "bigger": 76, "pixelbuff": 76, "whole": [76, 125, 182], "hierarchi": [76, 83, 84, 140, 154, 163, 167, 174, 181, 183, 184, 185], "correspondingli": 76, "viewport": 76, "aspect": [76, 92], "Not": [76, 104, 162], "deprec": [76, 83, 163], "miss": [76, 144, 163, 174, 184], "ui": 76, "layerinfo": [76, 79, 118, 139, 157, 186], "default_lay": [76, 79, 180, 186], "valid": [76, 110, 150, 168, 173, 190], "cluster": [77, 187, 189], "process": [77, 79, 84, 96, 98, 102, 109, 118, 121, 122, 124, 125, 126, 127, 162, 172, 175, 176, 177, 180, 183, 185, 186, 189, 190, 192, 193], "inform": [77, 84, 118, 122, 165, 167, 177, 180, 181, 185, 186, 190, 191, 192, 196], "about": [77, 167, 172, 175, 176, 180, 184, 186, 196], "togeth": [77, 147, 160, 172, 191], "220": 79, "reserv": [79, 97, 105], "127": [79, 186], "128": [79, 88, 186], "255": [79, 186], "work": [79, 84, 118, 167, 169, 172, 173, 176, 177, 181, 184, 185, 186, 188, 191, 194, 196], "anoth": [79, 90, 91, 93, 148, 162, 163, 167, 181, 186], "stack": [79, 97, 117, 122, 183, 184, 193], "bond": 79, "denot": [79, 105, 185, 186], "manufactur": 79, "necessari": [79, 101, 163, 173, 188, 189], "deposit": [79, 118], "auxiliari": [79, 185], "field": [79, 97, 105, 122, 150, 162, 187], "229": 79, "organis": 79, "accord": [79, 83, 118, 163, 170, 173], "www": [79, 105, 114, 176, 189, 192], "de": [79, 120, 176], "doc": [79, 102, 105, 160, 169, 170, 173, 180, 190, 191], "qt5": 79, "layer_sourc": 79, "flat": [79, 83, 167], "map": [79, 83, 84, 85, 158, 183, 191], "subset": 79, "minor": [79, 166], "twist": 79, "1t1_base_metal_gap": 79, "invert": [79, 82], "skip_extra": 82, "bitmap": [82, 84], "oa": [82, 83, 84, 118, 146, 153, 163, 180, 185, 189, 192, 196], "gd": [82, 101, 104, 146, 163, 180, 185, 189], "chip_nam": [82, 83], "chip_dir": 82, "alt_netlist": [82, 84, 158], "export_dir": 82, "subdirectori": [82, 177, 180], "modifi": [82, 83, 90, 91, 118, 122, 147, 173, 175, 177, 183, 184, 186, 187], "mask_document": 82, "md": 82, "spec_lay": 82, "mask_graphical_rep": 82, "postfix": [83, 158, 174], "creation": [83, 162, 189], "2d": [83, 84, 105, 117, 146], "exact": [83, 176, 181, 184], "minimum": [83, 102, 105, 147, 172, 173, 190], "violat": 83, "conflict": 83, "never": 83, "factor": [83, 155], "coverag": [83, 174], "uniqu": [83, 146, 154, 158, 159, 186, 187, 193], "position_label": 83, "outsid": [83, 91, 105, 173, 186], "dure": [83, 148, 173], "calcualt": 83, "k": [83, 158], "rigtht": 83, "90": [83, 185, 186], "what": [83, 114, 168, 184, 186, 191], "translat": [83, 176], "chips_dict": 83, "overwrit": [83, 92, 169, 189], "ones": [83, 155, 172, 173], "_": [83, 105, 145, 186, 191], "bbox": [83, 139], "labels_cel": 83, "mask_name_for_chip": 83, "row": [83, 97, 190], "column": [83, 97, 190], "c03": 83, "posixpath": [84, 118], "home": [84, 118, 169, 185], "runner": [84, 118], "tmp": [84, 108, 169, 173, 180, 186, 187, 189, 192], "add_mask_name_to_chip": 84, "These": [84, 85, 99, 154, 167, 170, 172, 180, 184, 185, 186, 192], "Then": [84, 105, 163, 172, 181, 182, 192], "entir": [84, 140, 169, 184], "switch": [84, 195], "debug": [84, 122, 156, 184, 185, 195], "limit": [84, 97, 119, 163, 169, 176, 190, 191, 192], "concurr": [84, 172], "cpu": [84, 174, 176], "resourc": [84, 187, 189], "manag": [84, 145, 169, 172, 176, 177, 184, 187, 189, 196], "purpos": [84, 122, 128, 167, 173, 181, 191], "drc": [84, 146, 180, 181], "similar": [84, 105, 162, 184, 189, 190, 191, 192], "folder": [84, 101, 104, 108, 109, 117, 121, 169, 170, 172, 173, 174, 180, 185, 186, 187, 188, 189, 190, 192, 193, 196], "tmp_path": [84, 146, 185], "mask_layout_typ": [84, 85], "extra_face_param": [84, 85], "ident": [84, 85, 158, 159, 163, 167, 173], "overwritten": 84, "extra_kwarg": 84, "variant_nam": 84, "complex": [84, 175, 181, 190], "polymorph": 84, "here": [84, 156, 171, 177, 181, 186, 189, 194], "rest": 84, "quick_demo": [84, 173, 185], "py": [84, 101, 104, 108, 167, 169, 170, 172, 173, 174, 176, 185, 186, 187, 188, 189, 190, 192, 196], "further": [84, 169, 177, 185, 186, 191], "qdg": 84, "o": [84, 86, 148, 172, 176], "cpu_count": 84, "whichev": 84, "smaller": [84, 122, 147], "remove_guiding_shap": 84, "box_map": 84, "mask_map": 84, "nxn": 84, "mxm": 84, "mnxmn": 84, "usual": [85, 118, 120, 158, 172, 177, 184, 185, 186, 188, 189, 191], "instanti": [85, 162, 167, 173, 191], "extra_param": 85, "modul": [86, 104, 147, 151, 155, 167, 168, 171, 172, 174, 175, 176, 177, 180, 186, 188], "import": [86, 101, 154, 155, 159, 167, 169, 170, 173, 174, 176, 177, 180, 181, 184, 185, 186, 191, 192], "api": [86, 160, 166, 170, 173, 175, 177, 181, 182, 184, 186, 189, 190, 191, 192, 194], "usag": [86, 155, 171, 175, 177, 181, 183, 184, 185, 189, 190, 191, 192], "db": [86, 167], "execut": [86, 101, 104, 109, 121, 143, 169, 174, 176, 184, 185, 189, 192, 193], "session": 86, "found": [86, 110, 143, 146, 154, 165, 169, 176, 180, 186, 189, 190, 196], "transmon": [88, 89], "josephson": [88, 89], "r_island": 88, "squid_angl": [88, 89], "couplers_r": [88, 89], "couplers_a": [88, 89], "couplers_b": [88, 89], "couplers_angl": [88, 89], "340": [88, 89], "210": [88, 89], "couplers_width": [88, 89], "couplers_arc_amplitud": [88, 89], "45": [88, 89, 117, 122], "drive_angl": [88, 89], "drive_dist": [88, 89], "concentr": 89, "290": 89, "rectangl": [90, 91, 118, 167, 181], "shunt": [90, 91], "north": [90, 91, 93], "join": [90, 91], "700": 90, "ground_gap_r": 90, "coupler_r": 90, "coupler_a": 90, "coupler_offset": 90, "squid_offset": 90, "island1_r": 90, "island2_r": 90, "450": 90, "island1_taper_width": 90, "island1_taper_junction_width": 90, "island2_taper_width": 90, "island2_taper_junction_width": 90, "70": 90, "with_squid": 90, "spline": [91, 147], "construct": [91, 109, 147, 163, 185, 191], "island_splin": 91, "island_spline_sampl": 91, "collect": [92, 146, 181, 186], "routin": 92, "beam": 92, "customari": 92, "probepoint": [92, 146], "simpli": [92, 148, 169, 191], "appropri": [92, 162, 166, 167, 186], "probe_ground": 92, "probe_island": 92, "probe_island_1": 92, "probe_island_2": 92, "transf": [92, 132], "only_arm": [92, 132], "base_metal_gap_for_ebl": [92, 132], "right_sid": [92, 132], "help": [92, 132, 172, 173, 174, 175, 181, 184], "dcplxtran": [92, 132, 163], "rot": 92, "flux": [92, 102, 110, 126], "flux_corn": 92, "origin_fluxlin": 92, "origin_squid": 92, "port_common": 92, "howev": [92, 122, 173, 176, 177, 181, 185, 186, 189], "might": [92, 101, 104, 105, 169, 172, 176, 177, 189], "tweak": 92, "south": 93, "gap_width": [93, 191], "wne": 93, "cpl_width": [93, 127], "cpl_length": 93, "cpl_gap": 93, "102": 93, "port_width": 93, "cl_offset": 93, "island_r": 93, "arg": [94, 106, 108, 139, 146, 148, 163, 169], "args_for_script": 94, "entri": [94, 146, 163, 176, 177, 185], "consol": [94, 108, 156, 176, 185, 188], "pars": [96, 97, 98, 106, 122, 124, 125, 126, 127, 150], "readi": [96, 98, 122, 124, 125, 126, 127], "co": 97, "intend": [97, 122, 191, 196], "materi": [97, 105, 118, 122, 189, 190], "don": [97, 167, 172, 173, 176], "obei": 97, "vacuum": [97, 105, 117, 118, 119, 122, 191], "word": [97, 155, 177], "result": [97, 102, 136, 146, 147, 148, 187, 189, 190, 193], "matric": [97, 102, 190], "introduc": [97, 118, 122, 191], "dielectr": [97, 122, 191], "permitt": [97, 117, 118, 122], "regist": [97, 161, 167, 179], "reset": 97, "param_nam": [97, 160, 170], "cast": [97, 122], "simulation_lay": 97, "relev": [97, 122, 162, 190, 191], "london": [97, 118, 190], "penetr": [97, 118, 190], "depth": [97, 118, 190], "m": [97, 117, 122, 173, 189], "xsection_source_class": 97, "schema": [97, 163], "ignore_process_lay": 97, "boundari": [97, 105, 122, 190], "extra_json_data": [97, 122], "store": [97, 122, 139, 163, 185, 190, 191], "virtual": [97, 122, 173, 176], "program": [99, 175, 182, 184, 188], "hfss": [99, 102, 190, 191, 193], "q3d": [99, 102, 190, 191, 193], "write": [101, 104, 109, 114, 146, 167, 169, 170, 172, 173, 174, 176, 186, 189, 191, 195, 196], "json_filenam": [101, 104, 109, 121], "file_prefix": [101, 104, 109], "exit_after_run": 101, "execution_script": 101, "import_and_simul": 101, "use_rel_path": 101, "batch": [101, 121, 180, 192], "bat": [101, 109, 192], "electron": [101, 143, 190, 192, 193], "desktop": [101, 189, 190, 192, 193], "sequenc": [101, 104, 135, 147], "script_fold": [101, 104], "bool": [101, 102, 104, 105, 106, 108, 113, 120, 122, 146, 147, 157, 163], "import_script": 101, "skip_error": [101, 104], "solution_param": [101, 102, 104, 105], "skip": [101, 104, 105, 148], "caus": [101, 104, 123, 147, 148, 172], "carefulli": [101, 104, 166, 191], "sens": [101, 104, 182, 184], "wast": [101, 104], "bad": [101, 104], "ghz": [102, 105, 190], "percentag": [102, 190], "mesh": [102, 105, 114, 189, 190], "refin": [102, 105, 190], "how": [102, 122, 163, 167, 173, 176, 177, 181, 186, 187, 190, 191], "mani": [102, 122, 165, 172, 173, 175, 176, 180, 181, 185, 186, 189, 190, 191], "meet": [102, 181, 190], "criterion": [102, 105, 190], "maxim": [102, 105], "templat": [102, 170, 175], "classvar": [102, 105, 111], "101": [102, 190], "interpol": [102, 105, 190], "multifrequ": [102, 190], "sweep": [102, 105, 109, 114, 118, 163, 183, 189, 190, 193], "lowest": [102, 122, 190, 191], "highest": [102, 122, 190], "discret": [102, 190], "fast": [102, 166, 190], "energi": [102, 104, 105, 183, 193], "save": [102, 121, 163, 177, 186, 187, 190, 191], "magnet": [102, 110], "pec": 102, "sheet": [102, 117, 122, 191], "matrix": [102, 105, 147, 183, 189, 193], "nomin": 102, "moment": [102, 182], "eigenmod": [102, 183, 193], "eigenfrequ": [102, 190], "solv": [102, 190], "excit": [102, 120, 190], "voltag": 102, "induct": [102, 105, 113, 120, 127, 162, 190], "workflow": [104, 114, 169, 175, 177, 181, 183, 184, 189, 193], "script_fil": 104, "compile_elmer_modul": 104, "launch": [104, 172, 176, 185, 186, 195], "compil": [104, 105, 173, 176, 187], "runtim": [104, 169], "model": [104, 120, 122, 173, 189, 190, 191], "005": 105, "factori": 105, "adapt": [105, 191], "fraction": 105, "outlier": 105, "symmetr": 105, "big": [105, 185], "larger": [105, 122, 189], "finer": 105, "divid": [105, 167, 173, 180, 186, 189], "dim": [105, 119], "term": [105, 119, 122, 174, 190, 191], "entiti": 105, "expans": [105, 119, 122, 147, 162], "constant": [105, 122, 167, 190], "slope": 105, "increas": [105, 118, 135, 169, 189], "global_max": 105, "global": 105, "less": [105, 114, 167, 176], "awai": [105, 119, 120, 122, 147, 150, 186], "vtu": 105, "paraview": [105, 169, 188, 189, 192], "off": [105, 122, 184], "slightli": [105, 176], "faster": [105, 114, 163], "explicit": 105, "wave": [105, 122, 191], "equat": 105, "converg": 105, "supercurr": 105, "flow": 105, "thick": [105, 117, 118, 122, 191], "finit": 105, "nedelec": 105, "kind": [105, 173, 186], "formul": [105, 123], "vectorhelmholtz": 105, "potenti": [105, 120, 186], "v": [105, 113, 166], "electr": [105, 190], "nic": 105, "funet": 105, "fi": 105, "pub": 105, "sci": 105, "elmermodelsmanu": 105, "pdf": [105, 114], "warn": [105, 156, 176], "experiment": [105, 194], "poor": [105, 189], "film": 105, "nest": [105, 122], "solver": [105, 189, 190, 192], "calc": 105, "wave_equ": [105, 190], "mg": 105, "09": 105, "ilu0": 105, "polynomi": [105, 147], "p": [105, 145], "multigrid": 105, "bicgstab": 105, "mention": [105, 122, 169], "elmersolv": [105, 169, 189], "umfpack": 105, "mump": 105, "pardiso": 105, "superlu": 105, "softwar": [105, 165, 169, 179, 189, 192], "redund": 105, "precondition": 105, "linear": [105, 166], "condit": [105, 190], "xmin": [105, 113], "xmax": [105, 113], "ymin": [105, 113], "ymax": [105, 113], "just": [105, 167, 169, 172, 173, 177, 186, 191], "impend": 105, "electrostat": 105, "epr_3d": 105, "export_script": 106, "quiet": [106, 108], "export_onli": 106, "basenam": [106, 187], "dialog": [106, 108, 177, 181, 188], "describ": [106, 122, 141, 147, 154, 168, 173, 181, 186, 188, 190, 191, 193], "stdout": [106, 156], "print": [106, 148, 154, 155, 156, 185], "export_path_identifi": 106, "script_export_path": 106, "remote_host": 107, "singularity_remote_path": 107, "ssh_login": 108, "kqc_remote_tmp_path": [108, 187], "detach_simul": 108, "poll_interv": 108, "export_path_basenam": 108, "local": [108, 166, 169, 170, 173, 176, 177, 182, 184, 187], "remot": [108, 183, 189, 193], "host": [108, 171, 173, 187, 189], "froce": 108, "q": [108, 173, 182, 188], "ssh": [108, 187], "login": 108, "hostnam": 108, "detach": [108, 187], "wait": 108, "finish": [108, 182, 187, 189], "poll": [108, 187], "interv": [108, 187], "export_tmp_dir": 108, "could": [108, 114, 148, 166, 168, 169, 186, 189, 191], "source_path": 109, "content": [109, 146, 175, 177, 189], "sh": [109, 169, 187, 189, 192], "json_data": 109, "json_file_path": 109, "sim_class": [109, 191, 192], "sim_paramet": [109, 191], "vari": [109, 186, 189, 191], "sol_class": 109, "sol_paramet": 109, "analys": 110, "inconsist": 110, "criteria": 110, "met": 110, "check": [110, 144, 148, 163, 172, 173, 180, 186, 190, 195], "least": [110, 147, 150, 163, 172, 176, 181, 184, 186], "presenc": 110, "validation_typ": 110, "handl": [110, 139, 167, 181, 186, 189, 193], "filename_templ": 113, "filename_output": 113, "rule": [113, 122, 170, 180], "nvertic": 113, "debugid": 113, "ilevel": 113, "mtype": 113, "filltyp": 113, "conmax": 113, "edge_mesh": 113, "sym": 113, "xwidth": 113, "ywidth": 113, "xcell": 113, "ycell": 113, "materials_typ": 113, "si": 113, "bt": 113, "port_ipoli": 113, "portnum": 113, "ipolygon": 113, "ivertex": 113, "port_typ": 113, "std": 113, "xcord": 113, "ycord": 113, "resist": [113, 120, 162], "react": 113, "capac": 113, "control_typ": 113, "dbu": [113, 114, 115, 118, 119, 139], "fill_typ": [113, 114], "poli": 113, "detailed_reson": 114, "lower_accuraci": 114, "ab": 114, "staircas": 114, "simulation_safeti": 114, "son": [114, 192], "sonnetsoftwar": 114, "download": [114, 169, 176], "techdoc": 114, "enhanced_resonance_detection_featur": 114, "fine": [114, 160], "coars": 114, "accur": 114, "good": [114, 185], "everyth": [114, 177, 181, 186], "output_format": [115, 154], "intersect": 115, "override_arg": 117, "correction_cut": 117, "ma_eps_r": 117, "ms_eps_r": 117, "sa_eps_r": 117, "ma_thick": [117, 118], "0048": 117, "ms_thick": [117, 118], "0003": 117, "sa_thick": [117, 118], "0024": 117, "ma_bg_eps_r": 117, "ms_bg_eps_r": 117, "sa_bg_eps_r": 117, "metal_height": [117, 122, 191], "cut": [117, 118, 196], "p1": [117, 118, 122], "p2": [117, 118, 122], "metal_edg": 117, "later": [117, 119, 137, 163, 174, 177, 186], "mer": 117, "x_revers": 117, "closer": [117, 122, 147, 154], "z": [117, 119, 122, 169, 195], "z_revers": 117, "partit": [117, 119, 122, 189], "ma": [117, 122], "sa": [117, 122], "approxim": [117, 122], "input_oa": 118, "output_oa": 118, "cut1": 118, "cut2": 118, "process_path": 118, "kqc_process": [118, 196], "parameters_path": 118, "plugin": [118, 145, 161, 168, 172, 196], "down": [118, 120, 122, 181, 182, 184, 186], "output_path": 118, "pathlib": 118, "pyacor": 118, "post_processing_funct": 118, "callabl": [118, 123], "oxidise_layers_funct": 118, "_oxidise_lay": 118, "ma_permitt": 118, "ms_permitt": 118, "sa_permitt": 118, "vertical_cul": 118, "mer_box": 118, "magnification_ord": 118, "perform": [118, 122, 163, 169, 173, 189, 190], "oxid": 118, "expect": [118, 166, 176], "signatur": 118, "pyhint": 118, "air": 118, "cull": 118, "retain": 118, "_mer": 118, "suffix": [118, 119, 146, 159], "magnif": [118, 181], "accomod": 118, "spacial": 118, "10x": 118, "100x": 118, "thin": [118, 122, 191], "sort_kei": [118, 148], "sort": [118, 148], "pick": 118, "tie": 118, "break": [118, 166, 169], "slot": 118, "cut_label": 118, "width_ratio": 118, "visualis": [118, 119, 122, 173], "request": [118, 156, 163, 169, 187, 189], "xsection_cut": 118, "_1": 118, "_2": 118, "recommend": [118, 172, 173, 176, 181, 185, 189, 190], "differenti": 118, "multipli": 118, "scalar": [119, 122], "vertical_dimens": 119, "metal_edge_dimens": 119, "domain": [119, 122, 191], "preview": [119, 122], "databas": [119, 147, 149, 194], "sign": 119, "metal_region": [119, 136], "etch_region": 119, "reactanc": [120, 162], "renorm": [120, 190], "ideal": 120, "rlc": [120, 190], "lump": [120, 122, 190, 191], "real": 120, "ohm": 120, "omega": 120, "imaginari": 120, "henri": 120, "farad": 120, "signal_loc": [120, 190, 191], "ground_loc": [120, 190, 191], "signal_lay": [120, 162], "etch_width": 120, "deembed_len": [120, 162, 190], "embed": 120, "micron": [120, 153], "port_siz": [120, 122], "repeat_for_each": 121, "data_file_prefix": 121, "dimension": [122, 175, 190, 191], "basic": [122, 171, 172, 180, 181, 182, 183, 184, 194], "built": [122, 169, 170, 177, 181, 186, 191, 195], "principl": [122, 150], "imagin": [122, 191], "surfac": [122, 190, 191], "touch": [122, 186], "face_stack": [122, 191], "lower_box_height": [122, 191], "account": [122, 152, 154, 167, 187, 189, 191], "pile": [122, 191], "That": [122, 190, 191], "leav": [122, 191], "substrate_height": [122, 191], "chip_dist": [122, 191], "infinit": [122, 148, 191], "insul": 122, "dielectric_height": [122, 191], "grid_siz": [122, 149], "expand": [122, 147], "resolut": 122, "forc": [122, 190], "list_or_const": 122, "ordin": 122, "short": [122, 181, 194], "duplic": [122, 147, 157, 172], "ascend": 122, "simplifi": 122, "polygon_toler": 122, "shrink": 122, "minimum_point_spac": 122, "z0": 122, "z1": 122, "split": [122, 147], "opp_i": 122, "__init__": 122, "hole": [122, 149], "subtract_kei": 122, "port_kwarg": 122, "engin": 122, "infer": [122, 146, 163], "brought": [122, 162], "at_edg": 122, "signal_edg": 122, "ground_edg": 122, "material_dict": 122, "delet": [122, 155, 157, 177, 181], "access": [122, 173, 176, 181, 183], "append": [122, 147, 156, 158, 159, 191], "dtext": 122, "ground_grid_box": 122, "use_port": 122, "upper_box_height": 122, "fixed_level_stackup": 122, "375": 122, "substrate_box": 122, "correspondingsubstr": 122, "fulli": [122, 173, 190], "substrate_materi": 122, "electromagnet": 122, "dielectric_loss_tang": 122, "airbridge_height": 122, "dielectric_materi": 122, "stub": [122, 127], "vertical_over_etch": 122, "hollow_tsv": 122, "hollow": 122, "constructor": [122, 148, 191], "tls_layer_thick": 122, "tl": [122, 190], "tls_layer_materi": 122, "tls_sheet_approxim": 122, "detach_tls_sheets_from_bodi": 122, "significantli": 122, "improv": [122, 173, 174, 176], "element_class": 123, "ignore_port": [123, 191], "transformation_from_cent": 123, "xs1": 124, "xs2": 124, "cpw_length": 125, "n_guid": 125, "guide_face_id": 125, "add_bump": 125, "port_termination_end": 125, "use_edge_port": 125, "etch_whole_opposite_fac": 125, "qubit_cel": 126, "center_x": 126, "center_i": 126, "wn": [126, 186], "en": 126, "sw": [126, 146], "se": [126, 146], "nw": [126, 146], "ne": [126, 146], "enable_flux_lin": 126, "enable_drive_lin": 126, "enable_transmission_lin": 126, "transmit": 126, "66": 127, "junction_induct": 127, "35e": 127, "junction_capacit": 127, "16": [127, 186], "num_cross": 130, "cross_width": 130, "cross_length": 130, "cross_spac": 130, "cross_box_dist": 130, "stripe_width": 134, "stripe_length": [134, 135], "stripe_spac": [134, 135], "min_stripe_width": 135, "stripe_step": 135, "widen": 135, "pads_region": 136, "pad_spacing_x": 136, "pad_spacing_i": 136, "connect_pad": 136, "refpoint_prefix": 136, "refpoint_dist": 136, "resembl": 137, "fenc": 137, "profil": [137, 187], "tsv_array_form": 137, "tileoutputreceiv": 139, "tilingprocessor": 139, "brief": [139, 145], "ix": 139, "ii": 139, "tile": 139, "obj": [139, 147], "clip": 139, "layer_info": 139, "rho": 139, "frac": 139, "pcell_class": 140, "isinst": 140, "pcell_declar": 140, "coupler_typ": 141, "element_kei": 141, "useless": 141, "accept": [141, 150, 166, 172, 190], "latest": [143, 169, 173, 176, 192], "instal": [143, 144, 169, 171, 175, 180, 182, 186, 188, 189, 192, 193, 195, 196], "against": [144, 180], "txt": [144, 172, 173, 176, 189, 192], "upgrad": [144, 172, 173, 175, 176], "stand": [144, 154, 180, 193], "alon": [144, 154, 180, 193], "pip": [144, 172, 173, 176, 188, 189, 192], "sync": [144, 173], "venv": [144, 172, 173], "startup": [144, 150, 173], "button": [145, 182, 184], "prio": 145, "__": 145, "pluginfactori": 145, "flip_fac": 146, "default_probe_typ": 146, "default_probe_suffix": 146, "millimet": 146, "tell": 146, "site": [146, 173, 176], "cell_fil": 146, "dir_nam": 146, "tri": [146, 169], "write_versions_fil": 146, "commit_refer": [146, 189], "git": [146, 166, 171, 172, 173, 176, 180], "revis": [146, 194], "written": [146, 192], "export_machine_vers": 146, "filepath": 146, "maco": [146, 171, 176, 182], "linux": [146, 169, 171, 173, 176, 180, 182, 185, 189, 192], "drc_script": 146, "name_drc_report": 146, "lyrdb": 146, "1t1_waveguide_path": 147, "2b1_waveguide_path": 147, "sum": 147, "children": 147, "objectinstpath": 147, "outward": 147, "whenev": [147, 166, 184], "elimin": [147, 148], "simple_polygon": 147, "polygon_point": 147, "counterclockwis": 147, "283185307179586": 147, "pi": 147, "control_point": 147, "sample_point": 147, "startpoint": 147, "uniformli": 147, "cubic": 147, "subsequ": 147, "slide": 147, "unlik": 147, "bezier": 147, "guarante": [147, 148, 177], "kaihuai": 147, "qin": 147, "proceed": 147, "pacif": 147, "98": 147, "sixth": 147, "confer": 147, "singapor": 147, "1998": 147, "pp": 147, "37": 147, "43": [147, 167], "doi": [147, 165], "1109": 147, "pccga": 147, "731996": 147, "uniform": [147, 191], "prepend": 147, "tangent": 147, "third": [147, 176, 189], "fourth": 147, "skipkei": 148, "ensure_ascii": 148, "check_circular": 148, "allow_nan": 148, "jsonencod": 148, "sensibl": 148, "typeerror": 148, "incom": 148, "ascii": 148, "charact": [148, 152, 153, 166], "escap": 148, "prevent": [148, 176], "recursionerror": 148, "nan": 148, "infin": 148, "compliant": 148, "javascript": 148, "decod": 148, "regress": 148, "dai": 148, "basi": [148, 167, 191], "member": 148, "pretti": 148, "newlin": 148, "item_separ": 148, "key_separ": 148, "whitespac": 148, "serializ": 148, "def": [148, 186, 191], "try": [148, 172, 173, 176], "let": [148, 173, 186], "jsondecod": 148, "object_hook": 148, "rpc": 148, "hint": 148, "object_pairs_hook": 148, "prioriti": [148, 181], "parse_float": 148, "num_str": 148, "datatyp": 148, "decim": 148, "parse_int": 148, "parse_const": 148, "invalid": 148, "encount": [148, 169], "strict": [148, 167], "context": [148, 163], "parseabl": 148, "boundbox": 149, "avoid_region": 149, "grid_step": 149, "group_n": 149, "speed": [149, 153, 162, 174, 189], "box_siz": 150, "require_gui_editing_en": 150, "search": [150, 175], "captur": 150, "invers": 150, "treat": [150, 158, 167], "strip": 150, "liter": 150, "namespac": [150, 160], "comma": [150, 154], "multilin": 150, "waveguide_inst": 150, "usabl": 150, "x_corner": 150, "slow": [150, 184, 185], "clumsi": 150, "curat": 150, "node_editor_valid_el": 150, "kept": 150, "file_path": 151, "enum": 152, "origin_offset": 152, "layer_protect": 152, "350": 152, "nearest": 153, "lai": 153, "font_polygon": 153, "cach": 153, "reus": 153, "print_waveguides_as_composit": 154, "add_instance_nam": 154, "refpoint_snap": 154, "grid_snap": 154, "include_import": 154, "create_cod": 154, "past": 154, "statement": [154, 177], "node_param": 154, "complet": [154, 170, 173, 177, 186, 189], "flatten": 154, "flush": 155, "src_path": 155, "memori": [155, 169, 189], "_kqc_librari": 155, "class_nam": 155, "pascalcas": [155, 167], "lowercas": [155, 177], "module_nam": 155, "_to_module_nam": 155, "titl": [155, 165], "qualiti": 155, "lowest_visible_level": 156, "remove_old_handl": 156, "log": [156, 185], "logfil": 156, "monitor": 156, "handler": 156, "root": [156, 169, 174, 180, 186], "logger": 156, "critic": 156, "cell_list": 157, "layer_1": 157, "layer_2": 157, "layer_merg": 157, "only_el": 157, "prune": 157, "contrast": 157, "convert_to_stat": 157, "anywher": [157, 177], "net": 158, "subcircuit": [158, 159], "terminologi": [158, 175, 183], "eda": 158, "resistor": 158, "pin": [158, 173], "wire": 158, "conceptu": 158, "analog": 158, "exactli": 158, "subcircuit_id": [158, 159], "unconnect": 158, "cell_nam": [158, 159], "subcircuit_loc": 158, "_pya_typ": 158, "subcircuit_origin": 158, "breakdown": 158, "regadless": 158, "absolut": [158, 173, 186], "cell_map": 158, "internal_cel": 158, "network": 159, "networkx": [159, 176], "graph": [159, 167, 173, 180], "cell_typ": 159, "instance_nam": 159, "obtain": [159, 191], "with_label": 159, "with_posit": 159, "figsiz": 159, "spring": 159, "matplotlib": 159, "interact": [159, 183], "plot": 159, "param_with_default_valu": 160, "wildcard": 160, "simplic": [160, 167], "grain": 160, "pcellparameterdeclar": 160, "data_typ": 160, "plain": [160, 167, 177], "docstr": [160, 168, 170, 181], "sphinx": [160, 170], "owner": 160, "registr": [161, 186], "happen": 161, "demand": 162, "builder": [162, 191], "ground_refpoint": 162, "port_squid_a": [162, 191], "port_squid_b": [162, 191], "separate_island_internal_port": 162, "commonli": [162, 186], "export_tuned_junct": 163, "class_typ": 163, "parent_nam": 163, "tuned_junction_paramet": 163, "qb1": 163, "testarray_nw": 163, "squid_0": 163, "squid_3": 163, "testarrai": 163, "even": [163, 167, 169, 173, 176, 184], "quick": [163, 186], "jsonabl": 163, "exhaust": 163, "read": [163, 169, 176, 177, 181, 186], "write_path": 163, "layer_str": 163, "visual": [163, 173, 186, 189], "again": [163, 169, 172, 184, 185], "parameter_nam": 163, "parameter_start": 163, "parameter_step": 163, "parameter_end": 163, "swept": 163, "squid_index": 163, "mirror_tran": 164, "project": [165, 167, 174, 176, 187, 189], "public": [165, 166, 169, 174], "citat": 165, "bib": 165, "zenodo": 165, "click": [165, 172, 175, 176, 177, 181, 183, 184, 185, 186, 195], "badg": 165, "cucurachi": 165, "daniel": 165, "da": 165, "soumya": 165, "ranjan": 165, "giri": 165, "rakshyakar": 165, "gusenkova": 165, "daria": 165, "guthri": 165, "andrew": 165, "inel": 165, "sinan": 165, "janzs\u00f3": 165, "d\u00e1vid": 165, "jenei": 165, "m\u00e1t\u00e9": 165, "juliusson": 165, "kristinn": 165, "kotilahti": 165, "jann": 165, "landra": 165, "alessandro": 165, "moretti": 165, "roberto": 165, "myll\u00e4ri": 165, "tuoma": 165, "ockeloen": 165, "korppi": 165, "caspar": 165, "r\u00e4bin\u00e4": 165, "jukka": 165, "savola": [165, 190], "niko": 165, "smirnov": 165, "pavel": 165, "takala": 165, "eeli": 165, "wubben": 165, "leon": 165, "month": 165, "jun": 165, "year": 165, "2021": 165, "publish": [165, 169], "5281": 165, "4944796": 165, "url": 165, "welcom": 166, "commun": [166, 189], "contributor": 166, "licens": [166, 190], "agreement": 166, "websit": [166, 169], "review": 166, "approv": 166, "pr": 166, "forward": [166, 189], "strategi": 166, "histori": 166, "pleas": [166, 172, 173, 174, 178, 179, 189, 190, 191, 192, 196], "organ": [166, 174, 184, 186], "commit": [166, 173], "meaning": [166, 186], "black": [166, 167, 168], "permit": [166, 186], "pep": [166, 167], "440": 166, "scheme": 166, "miniv": 166, "major": 166, "micro": 166, "offici": 166, "releas": [166, 169, 175, 196], "salt": [166, 172, 173, 175, 176, 180, 186], "incompat": 166, "backward": [166, 173], "seriou": 166, "cosmet": 166, "affect": [166, 175, 176, 189], "explain": [167, 168, 172, 181, 184, 186, 192], "diagram": 167, "oval": 167, "concret": 167, "leaf": 167, "green": [167, 184, 191], "natur": 167, "ever": 167, "live": 167, "create_cel": 167, "properli": [167, 172, 174, 177], "variabl": [167, 169, 173, 180, 184, 186, 187, 189, 190], "descriptor": 167, "hierarch": 167, "transpar": 167, "caller": 167, "default_parameter_valu": 167, "technic": [167, 186, 190], "intent": 167, "otherclass": 167, "param_a": 167, "param_b": 167, "myclass": 167, "param_c": 167, "42": 167, "param_d": 167, "41": 167, "syntax": [167, 186, 191], "bit": [167, 176, 182, 186], "revers": 167, "why": [167, 168], "bodi": 167, "kqc_library_nam": 167, "downstream": 167, "discov": 167, "convent": [167, 174, 176, 186], "comment": [168, 176, 181, 184, 186], "someth": [168, 189], "feel": 168, "probabl": [168, 176], "rewritten": 168, "clearli": 168, "builtin": 168, "googl": 168, "dockerfil": 169, "addition": [169, 189, 191], "kl_file": 169, "md5": 169, "hash": [169, 173, 180, 186], "kl_hash": 169, "klayout_0": 169, "29": [169, 176], "1_amd64": 169, "deb": 169, "421df42661a3d795b534da5048261044": 169, "ubuntu": [169, 172, 176], "quickli": 169, "m00x": 169, "volum": 169, "pwd": 169, "ghcr": 169, "io": [169, 196], "mount": 169, "run_script": 169, "nc": 169, "rx": [169, 186], "cours": [169, 186], "wd": 169, "older": [169, 173, 182], "hyperv": 169, "backend": 169, "ram": 169, "1gb": 169, "entrypoint": 169, "push": [169, 187], "branch": [169, 177, 184], "pipelin": [169, 174], "pull": [169, 172], "registri": 169, "sylab": 169, "quick_start": 169, "better": [169, 174, 191], "hpc": 169, "tutori": [169, 175, 177, 183, 184], "libexec": 169, "kqclib": [169, 189], "repo": 169, "ora": 169, "pem": 169, "rsa": 169, "encrypt": 169, "successfulli": [169, 172, 173, 195], "singularity_priv": 169, "privat": [169, 174], "now": [169, 177, 184, 186], "create_link": 169, "among": [169, 175], "elmersolver_mpi": 169, "elmergrid": [169, 189], "symbol": [169, 180, 184, 186, 187, 189], "link": [169, 172, 176, 177, 180, 184, 186, 187, 189], "rememb": [169, 172, 181], "bin": [169, 187], "prepar": [169, 189], "klayout_packag": [169, 172, 173, 180, 184, 186, 187, 188, 189, 190, 192, 196], "And": [169, 186], "waveguides_sim_compar": [169, 173, 188, 189], "sure": [169, 172, 173, 174, 177, 181, 184, 186, 187, 192, 196], "ride": 169, "python_execut": [169, 189], "subsystem": 169, "wsl": 169, "problem": [169, 172, 173, 176, 177, 178, 190], "stuck": 169, "workload": [169, 187, 189], "simple_workload_manag": 169, "subfold": [169, 186], "kqc_tmp_path": [169, 173], "waveguides_sim_elm": [169, 189], "affor": 169, "gmsh": [169, 183, 187, 188, 192, 193], "rst": 170, "rebuild": 170, "clean": 170, "apidoc": 170, "sphinxext": 170, "make_pcell_imag": 170, "pcell_imag": 170, "markers_for_png": 170, "x_2": 170, "y_2": 170, "ruler": [170, 196], "illustr": [170, 181, 191], "satisfactori": 170, "x2": 170, "y2": 170, "setup": [171, 175, 176, 177, 181, 182, 186, 187, 188, 193, 195, 196], "prerequisit": 171, "unlink": 171, "secondari": [171, 196], "symlink": 171, "reproduc": 171, "secur": [171, 189, 192], "exclus": 171, "pypi": [171, 180], "cli": 171, "docker": 171, "ci": [171, 173, 174, 180], "singular": [171, 180, 187, 189], "contribut": [171, 175], "come": [172, 186], "pre": [172, 191], "04": [172, 176], "platform": [172, 173, 176], "lt": [172, 176], "clone": [172, 173, 176], "cd": [172, 173, 174], "python3": 172, "setup_within_klayout": [172, 173, 180], "virtualenv": 172, "libpython": 172, "dll": 172, "known": [172, 175, 177], "issu": [172, 175, 177, 178], "downgrad": [172, 177], "ask": 172, "restart": [172, 177, 181, 182, 184, 195], "afterward": [172, 173], "evolv": [172, 186], "realli": [172, 185], "simultan": 172, "kqc_2nd": 172, "know": [172, 173, 176, 182], "klayout_hom": 172, "klayout_alt": 172, "mix": 172, "subsect": 172, "ln": 172, "path_to_kqcircuit": 172, "kqcircuits_script": [172, 180, 184, 185, 186], "kqcircuits_requir": [172, 180, 186], "prompt": [172, 173], "administr": 172, "privileg": 172, "homepath": [172, 176], "mklink": 172, "powershel": 172, "ye": 172, "mayb": 172, "won": [172, 173], "bulk": 172, "win": [172, 173, 180], "mac": [172, 173, 176, 180, 185], "debugg": [173, 183], "autom": [173, 175, 193, 196], "suitabl": [173, 176, 190, 191], "viewer": [173, 182, 192], "compat": [173, 176], "safe": 173, "interfer": 173, "yet": [173, 181, 196], "bracket": 173, "trust": 173, "easier": 173, "troubleshoot": 173, "subsitut": 173, "dep": 173, "rewrit": 173, "wipe": 173, "advanc": [173, 181, 184], "categori": 173, "core": [173, 174, 189], "linter": 173, "netlist_as_graph": [173, 176, 180], "publicli": 173, "abl": [173, 184], "upload": 173, "double_pads_sim": [173, 190], "elsewher": [173, 185], "ipynb": [173, 190], "tofu": 173, "rare": [173, 186], "verifi": [173, 176, 185], "legitim": 173, "constraint": 173, "unsaf": 173, "substitut": 173, "tox": 174, "pytest": [174, 180], "pylint": 174, "lint": 174, "ini": 174, "framework": [174, 175, 190, 193], "num": 174, "reflect": 174, "propos": 174, "test_load_librari": 174, "test_invalid_nam": 174, "approach": [174, 177, 189, 191], "u": [174, 186], "our": [174, 177, 186], "understand": [174, 184], "unfortun": 174, "repetit": 174, "consider": 174, "cov": 174, "comprehens": 174, "happi": 174, "failur": 174, "similarli": [174, 191, 192], "bug": [174, 184], "fail": 174, "prior": 174, "wil": 174, "reintroduc": 174, "conftest": 174, "reduc": [175, 190], "effort": 175, "processor": 175, "instantli": 175, "exchang": 175, "qpu": 175, "assembl": 175, "fabric": [175, 176], "miscellan": [175, 183, 186], "trademark": 175, "page": [175, 186, 196], "simplest": [176, 191], "instant": 176, "rather": 176, "codebas": 176, "simulation_script": 176, "parti": 176, "mask_script": 176, "yourself": 176, "homebrew": 176, "brew": 176, "cask": 176, "becaus": [176, 184, 185], "app": 176, "finder": 176, "bugfix": 176, "stabil": 176, "27": [176, 182], "17": 176, "microsoft": 176, "server": 176, "2022": 176, "talk": 176, "mental": 176, "appdata": [176, 188], "klayout_app": 176, "st": 176, "dynam": [176, 191], "sonoma": 176, "still": [176, 185], "higher": 176, "heavyweight": 176, "hw": 176, "proce": 176, "bigsur": 176, "setuptool": 176, "_distutils_hack": 176, "v52": 176, "v57": 176, "instruct": [176, 181], "sometim": [176, 184], "dir": 176, "binari": [176, 188], "__path__": 176, "queri": 176, "sy": 176, "version_info": 176, "x86_64": 176, "modern": 176, "macbook": 176, "henc": [176, 192], "numpi": 176, "scipi": 176, "macosx_10_9_x86_64": 176, "fetch": 176, "macosx_10_9_arm64": 176, "notic": [176, 185], "whatev": 176, "easiest": [177, 186], "migrat": 177, "uninstal": 177, "recent": 177, "menu": [177, 182, 183, 184, 186, 194], "panel": [177, 181, 182, 183, 186], "drag": [177, 181, 182, 184, 195], "press": [177, 181, 182, 184], "f2": [177, 181, 182], "underscor": 177, "f5": [177, 184, 185], "my": 177, "my_el": 177, "myelement": [177, 186], "capit": 177, "ctrl": 177, "reload": [177, 181, 183, 186], "drop": [177, 181, 182, 195], "canva": 177, "my_packag": 177, "safest": 177, "quirk": 177, "broken": 177, "reinstal": 177, "earlier": 177, "reloc": 177, "behind": 177, "tqdm": 177, "question": 178, "idea": 178, "discuss": 178, "polici": 179, "high": [180, 196], "pictur": 180, "console_script": 180, "mainli": [180, 186, 191], "meant": [180, 186], "librair": [180, 186], "variou": 180, "check_layer_prop": 180, "create_element_from_path": [180, 186], "gdiff": 180, "get_klayout_python_info": 180, "oas2dxf": 180, "dxf": 180, "mostli": [181, 186], "highlight": 181, "navig": [181, 182], "shift": [181, 182, 184, 185], "block": [181, 186], "toolbox": 181, "toolbar": [181, 182], "evok": 181, "anim": 181, "bring": 181, "few": [181, 189], "situat": 181, "accid": 181, "confirm": 181, "del": 181, "video": 181, "flexibl": [181, 191], "enter": 181, "export_cells_as_cod": 181, "nearbi": 181, "hardcod": [181, 186], "nice": 181, "x_port_a": 181, "x_port_a_corn": 181, "anywai": [181, 186], "unhid": [181, 182], "1t1_ground_grid": 181, "arrang": 181, "minut": 181, "anyth": 181, "quit": 182, "power": 182, "shortcut": 182, "ok": 182, "chiplibrari": 182, "mous": 182, "scroll": [182, 196], "littl": 182, "esc": 182, "hotkei": 183, "introduct": 183, "samplehold": 183, "particip": [183, 193], "pyepr": [183, 193], "demo_placing_a_pcel": 184, "icon": 184, "plai": 184, "exclam": 184, "often": [184, 186], "task": [184, 189, 195], "toggl": 184, "breakpoint": 184, "red": 184, "f9": 184, "stage": 184, "pop": 184, "cancel": 184, "asterisk": 184, "caught": 184, "unrespons": 184, "heavi": 184, "though": 184, "demo_pya_bas": 184, "test_wgc_airbridg": 184, "learn": 184, "photomask": 185, "product": 185, "effici": [185, 189], "observ": 185, "multiprocess": 185, "test_mask": 185, "de1": 185, "roughli": 185, "logging_setup": 185, "spcifi": 185, "de2": 185, "5700": 185, "dt1": 185, "qf1": 185, "my_chip": 185, "mcf": 185, "suppos": [185, 191], "proper": 185, "complic": [185, 189, 195], "mdemo": 185, "ch2": 185, "45000": 185, "30000": 185, "ch1": 185, "sx1": 185, "jt1": 185, "ac1": 185, "st1": 185, "jt2": 185, "65000": 185, "interest": 185, "fragment": 185, "fragmet": 185, "centerd": 185, "exploit": 185, "tip": 186, "trick": 186, "unlock": 186, "myelement2": 186, "offer": [186, 190], "nicer": 186, "myqubit": 186, "my_qubit": 186, "rubi": 186, "hide": 186, "simplecross": 186, "hold": 186, "len1": 186, "len2": 186, "cross_poli": 186, "simple_cross": 186, "scratch": 186, "especi": 186, "explan": [186, 187], "newchip1": 186, "default_samplehold": 186, "half_width": 186, "cross_cel": 186, "new_chip1": 186, "rf16": 186, "12000": 186, "refpoint_nam": 186, "cap_refpoint": 186, "wn_port": 186, "wn_port_corn": 186, "port_b_corn": 186, "perhap": 186, "someel": 186, "refpoint_of_some_el": 186, "existing_ref": 186, "everywher": 186, "something_port": 186, "something_port_corn": 186, "wherev": 186, "logic": [186, 190], "hard": 186, "tree": 186, "strictli": 186, "aptli": 186, "wo": 186, "laid": 186, "encompass": 186, "plu": 186, "groud": 186, "formula": 186, "intuit": 186, "2nd": 186, "indium_bump": 186, "swap": 186, "layer_config_path": 186, "simpler": 186, "x_base_metal_gap_wo_grid": 186, "x_ground_grid_avoid": 186, "133": 186, "x_port": 186, "154": 186, "x_new_lay": 186, "999": 186, "new_lay": 186, "although": 186, "newli": 186, "default_layer_prop": 186, "rm": 186, "rd": 186, "element_path": 186, "incorpor": 186, "pycharm": 186, "studio": 186, "vim": 186, "neovim": 186, "slurm": [187, 189], "password": 187, "openmpi": 187, "install_softwar": 187, "mpi": [187, 189], "machin": [187, 189], "send": 187, "singularity_path": 187, "bash": 187, "sbatch_paramet": [187, 189], "kqc_remote_account": [187, 189], "sim_1": 187, "sim_2": 187, "sim_n": 187, "job": 187, "sim_i_tmp_fold": 187, "nohup_runid": 187, "runid": 187, "watch": 187, "cat": 187, "shell": [188, 189], "liner": 188, "initialis": 188, "admin": 188, "priviledg": 188, "elmer_help": 189, "gmsh_helper": 189, "sif": 189, "capacitancematrix": 189, "electric_potenti": 189, "pvsm": 189, "waveguides_n_guides_1": 189, "waveguides_n_guides_2": 189, "n_worker": 189, "elmer_n_process": 189, "thread": 189, "openmp": 189, "elmer_n_thread": 189, "benefici": 189, "relationship": 189, "independentprocess": 189, "parallelizationsecond": 189, "ofparallel": 189, "sequenti": 189, "worker": 189, "floor": 189, "run_gmsh_gui": 189, "run_elmergrid": 189, "run_elm": 189, "run_paraview": 189, "omp": 189, "gmsh_n_thread": 189, "bsd": 189, "benefit": 189, "multithread": 189, "sbatch": 189, "max_threads_per_nod": 189, "max": 189, "elmer_mem": 189, "64g": 189, "elmer_tim": 189, "00": 189, "gmsh_mem": 189, "alloc": 189, "gmsh_time": 189, "project_0": 189, "bill": 189, "simulation_mesh": 189, "afterok": 189, "sent": 189, "queue": 189, "elmerfem": [189, 192], "elmercsc": [189, 192], "org": [189, 192], "suffic": 189, "scatter": 190, "snp": 190, "touchston": 190, "s1p": 190, "s2p": 190, "s3p": 190, "forth": 190, "emploi": 190, "export_paramet": [190, 192], "extractor": [190, 193], "consult": [190, 191], "estim": 190, "mutual": 190, "c_i_j": 190, "c_i_i": 190, "lifetim": 190, "eig": 190, "eigenvalu": 190, "_energi": 190, "cv": 190, "export_epr": 190, "post_process_script": 190, "_epr": 190, "csv": 190, "accuraci": 190, "cpw_cross_section_sim": 190, "waveguides_sim_xsect": [190, 196], "xmons_direct_coupling_pyepr": 190, "pyepr_exampl": 190, "t_1": 190, "intermediate_processing_command": 190, "t1_estim": 190, "queu": 190, "lossi": 190, "coher": 190, "master": 190, "thesi": 190, "2023": 190, "focus": 191, "distinguish": 191, "snippet": 191, "refp": 191, "mandatori": [191, 192], "100um": 191, "port_2": 191, "port_2_corn": 191, "port_3": 191, "port_3_corn": 191, "multipurpos": 191, "airbridge_flyov": 191, "joint": 191, "parameter": [191, 192], "purpl": 191, "troubl": 191, "port_cplr0": 191, "port_cplr1": 191, "port_cplr2": 191, "revert": 191, "essenti": 191, "swissmonsimul": 191, "port_cplr0_corn": 191, "port_cplr1_corn": 191, "port_cplr2_corn": 191, "squid_port_squid_a": 191, "squid_port_squid_b": 191, "portion": 191, "variat": 191, "procedur": 191, "eas": 191, "arm_length_500": 191, "gap_sweep": 191, "ansys_execut": 192, "swissmon_simulation_output": 192, "dir_path": 192, "ironpython": 192, "gdsii": 192, "meta": 192, "occurr": 192, "incomplet": 192, "manner": 192, "dev": 192, "abil": 193, "until": 193, "guidanc": 193, "summari": 194, "parameteriz": 194, "primit": 194, "emb": 194, "onto": 194, "archiv": 194, "traceabl": 194, "thought": 194, "manipul": 195, "interpret": 195, "browser": 195, "low": 196, "7": 196, "newest": 196, "lightweight": 196, "klayoutmatthia": 196, "docintro": 196, "docrefer": 196, "docgrow": 196, "docetch": 196}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [69, 0, 0, "-", "junctions"], [76, 0, 0, "-", "klayout_view"], [77, 0, 0, "-", "layer_cluster"], [78, 0, 0, "-", "layer_config"], [81, 0, 0, "-", "masks"], [86, 0, 0, "-", "pya_resolver"], [87, 0, 0, "-", "qubits"], [94, 0, 0, "-", "run"], [95, 0, 0, "-", "simulations"], [128, 0, 0, "-", "test_structures"], [138, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_resonator_polygon"], [59, 0, 0, "-", "tsvs"], [63, 0, 0, "-", "waveguide_composite"], [64, 0, 0, "-", "waveguide_coplanar"], [65, 0, 0, "-", "waveguide_coplanar_curved"], [66, 0, 0, "-", "waveguide_coplanar_splitter"], [67, 0, 0, "-", "waveguide_coplanar_straight"], [68, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, 1, 1, "", "SpiralResonatorPolygon"], [58, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[58, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[60, 0, 0, "-", "tsv"], [61, 0, 0, "-", "tsv_ellipse"], [62, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[60, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[60, 2, 1, "", "create"], [60, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[61, 2, 1, "", "create_tsv_connector"], [61, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[62, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[63, 1, 1, "", "Node"], [63, 1, 1, "", "WaveguideComposite"], [63, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[63, 3, 1, "", "align"], [63, 3, 1, "", "angle"], [63, 2, 1, "", "deserialize"], [63, 3, 1, "", "element"], [63, 3, 1, "", "inst_name"], [63, 3, 1, "", "length_before"], [63, 3, 1, "", "length_increment"], [63, 2, 1, "", "nodes_from_string"], [63, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[63, 2, 1, "", "build"], [63, 2, 1, "", "check_node_type"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create"], [63, 2, 1, "", "get_segment_cells"], [63, 2, 1, "", "get_segment_lengths"], [63, 2, 1, "", "produce_fixed_length_waveguide"], [63, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[64, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[64, 2, 1, "", "build"], [64, 2, 1, "", "can_create_from_shape_impl"], [64, 2, 1, "", "get_corner_data"], [64, 2, 1, "", "is_continuous"], [64, 2, 1, "", "parameters_from_shape_impl"], [64, 2, 1, "", "produce_end_termination"], [64, 2, 1, "", "produce_waveguide"], [64, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, 1, 1, "", "WaveguideCoplanarCurved"], [65, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[65, 2, 1, "", "build"], [65, 2, 1, "", "build_geometry"], [65, 2, 1, "", "coerce_parameters_impl"], [65, 2, 1, "", "create_curve_arcs"], [65, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, 1, 1, "", "WaveguideCoplanarSplitter"], [66, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[67, 2, 1, "", "build"], [67, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[68, 2, 1, "", "build"]], "kqcircuits.junctions": [[70, 0, 0, "-", "junction"], [71, 0, 0, "-", "manhattan"], [72, 0, 0, "-", "manhattan_single_junction"], [73, 0, 0, "-", "no_squid"], [74, 0, 0, "-", "sim"], [75, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[70, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[70, 3, 1, "", "LIBRARY_DESCRIPTION"], [70, 3, 1, "", "LIBRARY_NAME"], [70, 3, 1, "", "LIBRARY_PATH"], [70, 2, 1, "", "coerce_parameters_impl"], [70, 2, 1, "", "create"], [70, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[71, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_contact_pads"], [71, 2, 1, "", "produce_manhattan_squid"], [71, 2, 1, "", "produce_tp_large"], [71, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[72, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[73, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[74, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[75, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[76, 1, 1, "", "KLayoutView"], [76, 6, 1, "", "MissingUILibraryException"], [76, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[76, 5, 1, "", "active_cell"], [76, 2, 1, "", "add_default_layers"], [76, 5, 1, "", "cell_view"], [76, 2, 1, "", "clear_layers"], [76, 2, 1, "", "close"], [76, 2, 1, "", "create_top_cell"], [76, 2, 1, "", "export_all_layers_bitmap"], [76, 2, 1, "", "export_layers_bitmaps"], [76, 2, 1, "", "export_pcell_png"], [76, 2, 1, "", "focus"], [76, 2, 1, "", "get_active_cell"], [76, 2, 1, "", "get_active_cell_view"], [76, 2, 1, "", "get_active_layout"], [76, 2, 1, "", "get_pixels"], [76, 2, 1, "", "insert_cell"], [76, 5, 1, "", "layout"], [76, 3, 1, "", "layout_view"], [76, 2, 1, "", "show"], [76, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[77, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[77, 2, 1, "", "all_layers"], [77, 3, 1, "", "extra_layers"], [77, 3, 1, "", "face_id"], [77, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[79, 0, 0, "-", "default_layer_config"], [80, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[82, 0, 0, "-", "mask_export"], [83, 0, 0, "-", "mask_layout"], [84, 0, 0, "-", "mask_set"], [85, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[82, 4, 1, "", "export_bitmaps"], [82, 4, 1, "", "export_chip"], [82, 4, 1, "", "export_designs"], [82, 4, 1, "", "export_docs"], [82, 4, 1, "", "export_junction_parameters"], [82, 4, 1, "", "export_mask"], [82, 4, 1, "", "export_mask_set"], [82, 4, 1, "", "export_masks_of_face"], [82, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[83, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "added_chips"], [83, 3, 1, "", "align_to"], [83, 3, 1, "", "bbox_face_ids"], [83, 2, 1, "", "build"], [83, 3, 1, "", "chip_box_offset"], [83, 3, 1, "", "chip_copies"], [83, 3, 1, "", "chip_size"], [83, 3, 1, "", "chip_trans"], [83, 3, 1, "", "chips_map"], [83, 3, 1, "", "chips_map_legend"], [83, 3, 1, "", "chips_map_offset"], [83, 3, 1, "", "chips_placed_by_position_label"], [83, 3, 1, "", "covered_region_excluded_layers"], [83, 3, 1, "", "dice_width"], [83, 3, 1, "", "edge_clearance"], [83, 3, 1, "", "extra_chips"], [83, 3, 1, "", "extra_id"], [83, 2, 1, "", "face"], [83, 3, 1, "", "face_id"], [83, 2, 1, "", "insert_chip_copy_labels"], [83, 2, 1, "", "insert_chips"], [83, 3, 1, "", "layers_to_mask"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_density_layers"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_marker_offset"], [83, 3, 1, "", "mask_markers_dict"], [83, 3, 1, "", "mask_name_box_margin"], [83, 3, 1, "", "mask_name_offset"], [83, 3, 1, "", "mask_name_scale"], [83, 3, 1, "", "mask_text_scale"], [83, 3, 1, "", "mirror_labels"], [83, 3, 1, "", "name"], [83, 2, 1, "", "overwrite_chips_by_position_label"], [83, 2, 1, "", "position_label_to_two_coordinates"], [83, 3, 1, "", "remove_chips"], [83, 3, 1, "", "submasks"], [83, 3, 1, "", "text_margin"], [83, 3, 1, "", "top_cell"], [83, 2, 1, "", "two_coordinates_to_position_label"], [83, 3, 1, "", "version"], [83, 3, 1, "", "wafer_bottom_flat_length"], [83, 3, 1, "", "wafer_center"], [83, 3, 1, "", "wafer_rad"], [83, 3, 1, "", "wafer_top_flat_length"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[84, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[84, 2, 1, "", "add_chip"], [84, 2, 1, "", "add_mask_layout"], [84, 2, 1, "", "add_multi_face_mask_layout"], [84, 2, 1, "", "build"], [84, 2, 1, "", "chips_map_from_box_map"], [84, 3, 1, "", "chips_map_legend"], [84, 2, 1, "", "export"], [84, 3, 1, "", "export_drc"], [84, 3, 1, "", "export_path"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_layouts"], [84, 3, 1, "", "name"], [84, 3, 1, "", "used_chips"], [84, 3, 1, "", "version"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[85, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "face_ids"], [85, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[86, 4, 1, "", "is_standalone_session"], [86, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[88, 0, 0, "-", "circular_transmon_single_island"], [89, 0, 0, "-", "concentric_transmon"], [90, 0, 0, "-", "double_pads"], [91, 0, 0, "-", "double_pads_splines"], [92, 0, 0, "-", "qubit"], [93, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[91, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[92, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[92, 3, 1, "", "LIBRARY_DESCRIPTION"], [92, 3, 1, "", "LIBRARY_NAME"], [92, 3, 1, "", "LIBRARY_PATH"], [92, 2, 1, "", "coerce_parameters_impl"], [92, 2, 1, "", "produce_fluxline"], [92, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[93, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[93, 2, 1, "", "build"], [93, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[94, 4, 1, "", "argument_parser"], [94, 4, 1, "", "run"], [94, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[96, 0, 0, "-", "airbridges_sim"], [97, 0, 0, "-", "cross_section_simulation"], [98, 0, 0, "-", "empty_simulation"], [99, 0, 0, "-", "export"], [119, 0, 0, "-", "partition_region"], [120, 0, 0, "-", "port"], [121, 0, 0, "-", "post_process"], [122, 0, 0, "-", "simulation"], [123, 0, 0, "-", "single_element_simulation"], [124, 0, 0, "-", "single_xmons_full_chip_sim"], [125, 0, 0, "-", "waveguides_sim"], [126, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [127, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[96, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[96, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[97, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[97, 3, 1, "", "LIBRARY_NAME"], [97, 2, 1, "", "build"], [97, 2, 1, "", "get_dict_by_layers"], [97, 2, 1, "", "get_layers"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_schema"], [97, 2, 1, "", "get_sim_layer"], [97, 2, 1, "", "get_simulation_data"], [97, 2, 1, "", "process_layers"], [97, 2, 1, "", "register_cell_layers_as_sim_layers"], [97, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[98, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.export": [[100, 0, 0, "-", "ansys"], [103, 0, 0, "-", "elmer"], [106, 0, 0, "-", "export_and_run"], [107, 0, 0, "-", "export_singularity"], [108, 0, 0, "-", "remote_export_and_run"], [109, 0, 0, "-", "simulation_export"], [110, 0, 0, "-", "simulation_validate"], [111, 0, 0, "-", "solution"], [112, 0, 0, "-", "sonnet"], [115, 0, 0, "-", "util"], [116, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[101, 0, 0, "-", "ansys_export"], [102, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[101, 4, 1, "", "export_ansys"], [101, 4, 1, "", "export_ansys_bat"], [101, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[102, 1, 1, "", "AnsysCrossSectionSolution"], [102, 1, 1, "", "AnsysCurrentSolution"], [102, 1, 1, "", "AnsysEigenmodeSolution"], [102, 1, 1, "", "AnsysHfssSolution"], [102, 1, 1, "", "AnsysQ3dSolution"], [102, 1, 1, "", "AnsysSolution"], [102, 1, 1, "", "AnsysVoltageSolution"], [102, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "frequency"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "integrate_energies"], [102, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "frequency"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "integrate_energies"], [102, 3, 1, "", "integrate_magnetic_flux"], [102, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[102, 3, 1, "", "ansys_tool"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "integrate_energies"], [102, 3, 1, "", "integrate_magnetic_flux"], [102, 3, 1, "", "max_delta_f"], [102, 3, 1, "", "min_frequency"], [102, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "capacitance_export"], [102, 3, 1, "", "frequency"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "integrate_energies"], [102, 3, 1, "", "integrate_magnetic_flux"], [102, 3, 1, "", "max_delta_s"], [102, 3, 1, "", "sweep_count"], [102, 3, 1, "", "sweep_enabled"], [102, 3, 1, "", "sweep_end"], [102, 3, 1, "", "sweep_start"], [102, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "frequency"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[102, 3, 1, "", "ansys_project_template"], [102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "frequency_units"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "maximum_passes"], [102, 3, 1, "", "mesh_size"], [102, 3, 1, "", "minimum_converged_passes"], [102, 3, 1, "", "minimum_passes"], [102, 3, 1, "", "percent_refinement"], [102, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[102, 3, 1, "", "ansys_tool"], [102, 3, 1, "", "frequency"], [102, 2, 1, "", "get_solution_data"], [102, 3, 1, "", "integrate_energies"], [102, 3, 1, "", "integrate_magnetic_flux"], [102, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[104, 0, 0, "-", "elmer_export"], [105, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[104, 4, 1, "", "export_elmer"], [104, 4, 1, "", "export_elmer_json"], [104, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[105, 1, 1, "", "ElmerCapacitanceSolution"], [105, 1, 1, "", "ElmerCrossSectionSolution"], [105, 1, 1, "", "ElmerEPR3DSolution"], [105, 1, 1, "", "ElmerSolution"], [105, 1, 1, "", "ElmerVectorHelmholtzSolution"], [105, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[105, 3, 1, "", "convergence_tolerance"], [105, 3, 1, "", "integrate_energies"], [105, 3, 1, "", "linear_system_method"], [105, 3, 1, "", "linear_system_preconditioning"], [105, 3, 1, "", "max_iterations"], [105, 3, 1, "", "p_element_order"], [105, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[105, 3, 1, "", "boundary_conditions"], [105, 3, 1, "", "convergence_tolerance"], [105, 3, 1, "", "integrate_energies"], [105, 3, 1, "", "linear_system_method"], [105, 3, 1, "", "linear_system_preconditioning"], [105, 3, 1, "", "max_iterations"], [105, 3, 1, "", "p_element_order"], [105, 3, 1, "", "run_inductance_sim"], [105, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[105, 3, 1, "", "convergence_tolerance"], [105, 3, 1, "", "linear_system_method"], [105, 3, 1, "", "linear_system_preconditioning"], [105, 3, 1, "", "max_iterations"], [105, 3, 1, "", "p_element_order"], [105, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[105, 2, 1, "", "get_solution_data"], [105, 3, 1, "", "is_axisymmetric"], [105, 3, 1, "", "max_error_scale"], [105, 3, 1, "", "max_outlier_fraction"], [105, 3, 1, "", "maximum_passes"], [105, 3, 1, "", "mesh_levels"], [105, 3, 1, "", "mesh_size"], [105, 3, 1, "", "minimum_passes"], [105, 3, 1, "", "percent_error"], [105, 3, 1, "", "tool"], [105, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[105, 3, 1, "", "conductivity"], [105, 3, 1, "", "convergence_tolerance"], [105, 3, 1, "", "frequency"], [105, 3, 1, "", "frequency_batch"], [105, 3, 1, "", "london_penetration_depth"], [105, 3, 1, "", "max_delta_s"], [105, 3, 1, "", "max_iterations"], [105, 3, 1, "", "nested_iteration"], [105, 3, 1, "", "quadratic_approximation"], [105, 3, 1, "", "second_kind_basis"], [105, 3, 1, "", "sweep_type"], [105, 3, 1, "", "tool"], [105, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[106, 4, 1, "", "export_and_run"], [106, 4, 1, "", "run_export_script"], [106, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[107, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[108, 4, 1, "", "remote_export_and_run"], [108, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[109, 4, 1, "", "copy_content_into_directory"], [109, 4, 1, "", "cross_combine"], [109, 4, 1, "", "cross_sweep_simulation"], [109, 4, 1, "", "cross_sweep_solution"], [109, 4, 1, "", "export_simulation_json"], [109, 4, 1, "", "export_simulation_oas"], [109, 4, 1, "", "get_combined_parameters"], [109, 4, 1, "", "get_post_process_command_lines"], [109, 4, 1, "", "sweep_simulation"], [109, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[110, 6, 1, "", "ValidateSimError"], [110, 4, 1, "", "flux_integration_layer_exists_if_needed"], [110, 4, 1, "", "get_port_names"], [110, 4, 1, "", "has_edgeport_when_forbidden"], [110, 4, 1, "", "has_no_ports_when_required"], [110, 4, 1, "", "simulation_and_solution_types_match"], [110, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[111, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[111, 2, 1, "", "get_parameters"], [111, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[113, 0, 0, "-", "parser"], [114, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[113, 4, 1, "", "apply_template"], [113, 4, 1, "", "box"], [113, 4, 1, "", "control"], [113, 4, 1, "", "polygon_head"], [113, 4, 1, "", "polygons"], [113, 4, 1, "", "port"], [113, 4, 1, "", "refplane"], [113, 4, 1, "", "refplanes"], [113, 4, 1, "", "symmetry"], [113, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[114, 4, 1, "", "export_sonnet"], [114, 4, 1, "", "export_sonnet_son"], [114, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[115, 4, 1, "", "export_layers"], [115, 4, 1, "", "find_edge_from_point_in_cell"], [115, 4, 1, "", "find_edge_from_point_in_polygons"], [115, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[117, 0, 0, "-", "epr_correction_export"], [118, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[117, 4, 1, "", "get_epr_correction_elmer_solution"], [117, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.xsection_export": [[118, 4, 1, "", "create_xsections_from_simulations"], [118, 4, 1, "", "find_layer_by_name"], [118, 4, 1, "", "free_layer_slots"], [118, 4, 1, "", "separate_signal_layer_shapes"], [118, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [118, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[119, 1, 1, "", "PartitionRegion"], [119, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[119, 2, 1, "", "limit_box"], [119, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[120, 1, 1, "", "EdgePort"], [120, 1, 1, "", "InternalPort"], [120, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[120, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[120, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[121, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[121, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[122, 1, 1, "", "Simulation"], [122, 4, 1, "", "get_simulation_layer_by_name"], [122, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[122, 3, 1, "", "LIBRARY_NAME"], [122, 2, 1, "", "add_element"], [122, 2, 1, "", "build"], [122, 2, 1, "", "create_simulation_layers"], [122, 2, 1, "", "delete_instances"], [122, 2, 1, "", "etched_line"], [122, 2, 1, "", "face"], [122, 2, 1, "", "face_stack_list_of_lists"], [122, 2, 1, "", "face_z_levels"], [122, 2, 1, "", "from_cell"], [122, 2, 1, "", "get_layer"], [122, 2, 1, "", "get_layers"], [122, 2, 1, "", "get_parameters"], [122, 2, 1, "", "get_port_data"], [122, 2, 1, "", "get_refpoints"], [122, 2, 1, "", "get_schema"], [122, 2, 1, "", "get_simulation_data"], [122, 2, 1, "", "ground_grid_region"], [122, 2, 1, "", "insert_cell"], [122, 2, 1, "", "insert_layer"], [122, 2, 1, "", "insert_layers_between_faces"], [122, 2, 1, "", "insert_stacked_up_layers"], [122, 2, 1, "", "ith_value"], [122, 2, 1, "", "pcell_params_by_name"], [122, 3, 1, "", "ports"], [122, 2, 1, "", "produce_layers"], [122, 2, 1, "", "produce_waveguide_to_port"], [122, 2, 1, "", "region_from_layer"], [122, 2, 1, "", "simplified_region"], [122, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[123, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[124, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[124, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[125, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[125, 2, 1, "", "build"], [125, 2, 1, "", "produce_ground_bumps"], [125, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[126, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[126, 2, 1, "", "build"], [126, 2, 1, "", "produce_launcher"], [126, 2, 1, "", "produce_launchers_SMA8"], [126, 2, 1, "", "produce_qubit"], [126, 2, 1, "", "produce_readout_resonator"], [126, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[127, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[127, 2, 1, "", "build"], [127, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[129, 0, 0, "-", "airbridge_dc"], [130, 0, 0, "-", "cross_test"], [131, 0, 0, "-", "junction_test_pads"], [134, 0, 0, "-", "stripes_test"], [135, 0, 0, "-", "stripes_test_increasing_width"], [136, 0, 0, "-", "test_structure"], [137, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[129, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[129, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[130, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[130, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[132, 0, 0, "-", "junction_test_pads"], [133, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[132, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[132, 2, 1, "", "coerce_parameters_impl"], [132, 2, 1, "", "create"], [132, 3, 1, "", "default_type"], [132, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[133, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[133, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[134, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[134, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[135, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[135, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[136, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[136, 3, 1, "", "LIBRARY_DESCRIPTION"], [136, 3, 1, "", "LIBRARY_NAME"], [136, 3, 1, "", "LIBRARY_PATH"], [136, 2, 1, "", "produce_etched_region"], [136, 2, 1, "", "produce_four_point_pads"], [136, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[137, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[137, 2, 1, "", "build"]], "kqcircuits.util": [[139, 0, 0, "-", "area"], [140, 0, 0, "-", "count_instances"], [141, 0, 0, "-", "coupler_lib"], [142, 0, 0, "-", "deep_delete"], [143, 0, 0, "-", "defaults_helper"], [144, 0, 0, "-", "dependencies"], [145, 0, 0, "-", "edit_node_plugin"], [146, 0, 0, "-", "export_helper"], [147, 0, 0, "-", "geometry_helper"], [148, 0, 0, "-", "geometry_json_encoder"], [149, 0, 0, "-", "groundgrid"], [150, 0, 0, "-", "gui_helper"], [151, 0, 0, "-", "import_helper"], [152, 0, 0, "-", "label"], [153, 0, 0, "-", "label_polygons"], [154, 0, 0, "-", "layout_to_code"], [155, 0, 0, "-", "library_helper"], [156, 0, 0, "-", "log_router"], [157, 0, 0, "-", "merge"], [158, 0, 0, "-", "netlist_extraction"], [159, 0, 0, "-", "netlist_graph"], [160, 0, 0, "-", "parameters"], [161, 0, 0, "-", "plugin_startup"], [162, 0, 0, "-", "refpoints"], [163, 0, 0, "-", "replace_junctions"], [164, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[139, 1, 1, "", "AreaReceiver"], [139, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[139, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[140, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[141, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[142, 4, 1, "", "deep_delete_all"], [142, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[143, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[144, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[145, 1, 1, "", "EditNodePlugin"], [145, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[145, 2, 1, "", "activated"], [145, 2, 1, "", "create_dialog"], [145, 2, 1, "", "deactivated"], [145, 2, 1, "", "deselect"], [145, 2, 1, "", "has_tracking_position"], [145, 2, 1, "", "mouse_click_event"], [145, 2, 1, "", "mouse_moved_event"], [145, 2, 1, "", "select"], [145, 2, 1, "", "tracking_position"], [145, 2, 1, "", "update"], [145, 2, 1, "", "update_form_from_node"], [145, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[145, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[146, 4, 1, "", "create_or_empty_tmp_directory"], [146, 4, 1, "", "export_drc_report"], [146, 4, 1, "", "generate_probepoints_from_file"], [146, 4, 1, "", "generate_probepoints_json"], [146, 4, 1, "", "get_active_or_new_layout"], [146, 4, 1, "", "get_klayout_version"], [146, 4, 1, "", "get_simulation_directory"], [146, 4, 1, "", "open_with_klayout_or_default_application"], [146, 4, 1, "", "write_commit_reference_file"], [146, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[147, 4, 1, "", "arc_points"], [147, 4, 1, "", "bezier_points"], [147, 4, 1, "", "bspline_points"], [147, 4, 1, "", "circle_polygon"], [147, 4, 1, "", "get_angle"], [147, 4, 1, "", "get_cell_path_length"], [147, 4, 1, "", "get_direction"], [147, 4, 1, "", "get_object_path_length"], [147, 4, 1, "", "is_clockwise"], [147, 4, 1, "", "merge_points_and_match_on_edges"], [147, 4, 1, "", "point_shift_along_vector"], [147, 4, 1, "", "region_with_merged_points"], [147, 4, 1, "", "region_with_merged_polygons"], [147, 4, 1, "", "simple_region"], [147, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[148, 1, 1, "", "GeometryJsonDecoder"], [148, 1, 1, "", "GeometryJsonEncoder"], [148, 4, 1, "", "decode_dict_as_python_obj"], [148, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[148, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[149, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[150, 4, 1, "", "get_all_node_elements"], [150, 4, 1, "", "get_nodes_near_position"], [150, 4, 1, "", "get_valid_node_elements"], [150, 4, 1, "", "node_from_text"], [150, 4, 1, "", "node_to_text"], [150, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[151, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[152, 1, 1, "", "LabelOrigin"], [152, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[152, 3, 1, "", "BOTTOMLEFT"], [152, 3, 1, "", "BOTTOMRIGHT"], [152, 3, 1, "", "TOPLEFT"], [152, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[153, 4, 1, "", "get_text_polygon"], [153, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[154, 4, 1, "", "convert_cells_to_code"], [154, 4, 1, "", "extract_pcell_data_from_views"], [154, 4, 1, "", "get_node_params"], [154, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[155, 4, 1, "", "delete_all_libraries"], [155, 4, 1, "", "delete_library"], [155, 4, 1, "", "element_by_class_name"], [155, 4, 1, "", "get_library_paths"], [155, 4, 1, "", "load_libraries"], [155, 4, 1, "", "to_library_name"], [155, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[156, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[157, 4, 1, "", "convert_child_instances_to_static"], [157, 4, 1, "", "merge_layers"], [157, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[158, 4, 1, "", "export_cell_netlist"], [158, 4, 1, "", "extract_circuits"], [158, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[159, 4, 1, "", "draw_graph"], [159, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[160, 1, 1, "", "Param"], [160, 4, 1, "", "add_parameter"], [160, 4, 1, "", "add_parameters_from"], [160, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[160, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[160, 3, 1, "", "TypeBoolean"], [160, 3, 1, "", "TypeDouble"], [160, 3, 1, "", "TypeInt"], [160, 3, 1, "", "TypeLayer"], [160, 3, 1, "", "TypeList"], [160, 3, 1, "", "TypeNone"], [160, 3, 1, "", "TypeShape"], [160, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[161, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[162, 1, 1, "", "JunctionSimPort"], [162, 1, 1, "", "RefpointToEdgePort"], [162, 1, 1, "", "RefpointToInternalPort"], [162, 1, 1, "", "RefpointToSimPort"], [162, 1, 1, "", "Refpoints"], [162, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[162, 3, 1, "", "face"], [162, 3, 1, "", "other_refpoint"], [162, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[162, 3, 1, "", "face"], [162, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[162, 3, 1, "", "cell"], [162, 2, 1, "", "dict"], [162, 2, 1, "", "items"], [162, 2, 1, "", "keys"], [162, 3, 1, "", "layer"], [162, 3, 1, "", "rec_levels"], [162, 3, 1, "", "trans"], [162, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[162, 3, 1, "", "a"], [162, 3, 1, "", "airbridge"], [162, 3, 1, "", "b"], [162, 3, 1, "", "face"], [162, 3, 1, "", "over_etching"], [162, 3, 1, "", "refpoint"], [162, 3, 1, "", "side"], [162, 3, 1, "", "term1"], [162, 3, 1, "", "towards"], [162, 3, 1, "", "turn_radius"], [162, 3, 1, "", "use_internal_ports"], [162, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[163, 1, 1, "", "JunctionEntry"], [163, 4, 1, "", "check_static_cell_has_junctions"], [163, 4, 1, "", "convert_cells_to_static"], [163, 4, 1, "", "copy_one_layer_of_cell"], [163, 4, 1, "", "extract_junctions"], [163, 4, 1, "", "get_tuned_junction_json"], [163, 4, 1, "", "place_junctions"], [163, 4, 1, "", "replace_squid"], [163, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[164, 4, 1, "", "polygon_with_hsym"], [164, 4, 1, "", "polygon_with_sym"], [164, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 170, 175], "modul": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 99, 100, 103, 112, 116, 128, 131, 138, 173], "content": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 99, 100, 103, 112, 116, 128, 131, 138], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 177, 186], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 177, 185, 186], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": 21, "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 167, 177, 181, 186, 191], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": 36, "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": 57, "spiral_resonator_polygon": 58, "tsv": [59, 60, 61, 62], "tsv_ellips": 61, "tsv_standard": 62, "waveguide_composit": 63, "waveguide_coplanar": 64, "waveguide_coplanar_curv": 65, "waveguide_coplanar_splitt": 66, "waveguide_coplanar_straight": 67, "waveguide_coplanar_tap": 68, "junction": [69, 70, 71, 72, 73, 74, 75], "manhattan": 71, "manhattan_single_junct": 72, "no_squid": 73, "sim": 74, "squid": 75, "klayout_view": 76, "layer_clust": 77, "layer_config": [78, 79, 80], "default_layer_config": 79, "example_layer_config": 80, "mask": [81, 82, 83, 84, 85, 185], "mask_export": 82, "mask_layout": 83, "mask_set": 84, "multi_face_mask_layout": 85, "pya_resolv": 86, "qubit": [87, 88, 89, 90, 91, 92, 93], "circular_transmon_single_island": 88, "concentric_transmon": 89, "double_pad": 90, "double_pads_splin": 91, "swissmon": 93, "run": [94, 184, 188], "simul": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 187, 190, 191, 193], "airbridges_sim": 96, "cross_section_simul": 97, "empty_simul": 98, "export": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 185, 188, 189, 192], "ansi": [100, 101, 102, 192], "ansys_export": 101, "ansys_solut": 102, "elmer": [103, 104, 105, 187, 189, 192], "elmer_export": 104, "elmer_solut": 105, "export_and_run": 106, "export_singular": 107, "remote_export_and_run": 108, "simulation_export": 109, "simulation_valid": 110, "solut": 111, "sonnet": [112, 113, 114, 192], "parser": 113, "sonnet_export": 114, "util": [115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 180], "xsection": [116, 117, 118, 196], "epr_correction_export": 117, "xsection_export": 118, "partition_region": 119, "port": [120, 191], "post_process": 121, "single_element_simul": 123, "single_xmons_full_chip_sim": 124, "waveguides_sim": 125, "xmons_direct_coupling_full_chip_sim": 126, "xmons_direct_coupling_sim": 127, "test_structur": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "airbridge_dc": 129, "cross_test": 130, "junction_test_pad": [131, 132, 133], "junction_test_pads_simpl": 133, "stripes_test": 134, "stripes_test_increasing_width": 135, "tsv_test_pattern": 137, "area": 139, "count_inst": 140, "coupler_lib": 141, "deep_delet": 142, "defaults_help": 143, "depend": [144, 172, 173], "edit_node_plugin": 145, "export_help": 146, "geometry_help": 147, "geometry_json_encod": 148, "groundgrid": 149, "gui_help": 150, "import_help": 151, "label": 152, "label_polygon": 153, "layout_to_cod": 154, "library_help": 155, "log_rout": 156, "merg": 157, "netlist_extract": 158, "netlist_graph": 159, "paramet": [160, 167, 181, 186, 190], "plugin_startup": 161, "refpoint": [162, 186], "replace_junct": 163, "symmetric_polygon": 164, "cite": 165, "contribut": 166, "version": [166, 176], "architectur": 167, "pcell": 167, "librari": [167, 184, 186], "pya": 167, "resolv": 167, "code": [168, 181, 186, 196], "style": 168, "contain": 169, "cli": 169, "usag": [169, 173, 195], "docker": 169, "ci": 169, "singular": 169, "develop": [171, 172, 173, 184], "guid": [171, 183], "gui": [172, 181, 192, 196], "setup": [172, 173], "prerequisit": [172, 173], "python": [172, 173, 176, 186], "sourc": 172, "instal": [172, 173, 176, 177], "unlink": 172, "updat": [172, 173], "secondari": 172, "manual": [172, 176], "symlink": 172, "linux": 172, "maco": 172, "window": 172, "standalon": 173, "1": 173, "basic": [173, 185], "2": 173, "reproduc": 173, "secur": 173, "3": 173, "exclus": 173, "environ": 173, "extens": 173, "pypi": 173, "jupyt": 173, "notebook": 173, "requir": 173, "test": 174, "unit": 174, "kqc": [175, 196], "logo": 175, "indic": 175, "tabl": 175, "klayout": [176, 184, 192, 196], "known": 176, "issu": 176, "differ": 176, "packag": [176, 177], "get": 177, "start": 177, "salt": 177, "first": [177, 184], "look": 177, "around": 177, "set": 177, "up": 177, "user": [177, 183], "directori": 177, "defin": [177, 186], "custom": 177, "upgrad": 177, "remov": 177, "releas": 177, "note": 177, "support": 178, "trademark": 179, "gener": [180, 191], "structur": [180, 186], "miscellan": 180, "file": [180, 186, 196], "system": [180, 186], "hierarchi": [180, 186], "featur": [181, 190], "us": [181, 184], "hotkei": 181, "introduct": 181, "place": 181, "modifi": [181, 185], "waveguid": 181, "edit": 181, "waveguidecomposit": 181, "node": 181, "convert": 181, "menu": 181, "command": 181, "point": 182, "click": 182, "workflow": [182, 186, 187], "tutori": [182, 185, 186], "macro": 184, "exampl": [184, 186], "interact": 184, "applic": 184, "creat": [184, 196], "new": [184, 186], "panel": 184, "access": 184, "current": 184, "activ": 184, "klayoutview": 184, "debugg": 184, "reload": 184, "script": 185, "ground": 185, "grid": 185, "ad": [185, 186], "multi": 185, "face": [185, 186, 191], "composit": 185, "map": 185, "class": [186, 191], "build": 186, "an": 186, "insert": 186, "samplehold": 186, "type": 186, "layer": 186, "configur": 186, "open": 186, "from": [186, 192], "id": 186, "remot": 187, "one": 188, "line": 188, "gmsh": 189, "": 190, "matrix": 190, "capacit": 190, "eigenmod": 190, "energi": 190, "integr": 190, "particip": 190, "ratio": 190, "cross": [190, 196], "section": [190, 196], "pyepr": 190, "object": 191, "The": 191, "box": 191, "stack": 191, "subclass": 191, "singl": 191, "geometri": [191, 192], "sweep": 191, "function": 192, "extern": 193, "tool": [193, 196], "terminologi": 194, "imag": 196, "call": 196, "process": 196, "x": 196}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [59, "module-kqcircuits.elements.tsvs"], [69, "module-kqcircuits.junctions"], [78, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.masks"], [87, "module-kqcircuits.qubits"], [95, "module-kqcircuits.simulations"], [99, "module-kqcircuits.simulations.export"], [100, "module-kqcircuits.simulations.export.ansys"], [103, "module-kqcircuits.simulations.export.elmer"], [112, "module-kqcircuits.simulations.export.sonnet"], [116, "module-kqcircuits.simulations.export.xsection"], [128, "module-kqcircuits.test_structures"], [131, "module-kqcircuits.test_structures.junction_test_pads"], [138, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[59, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[78, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "kqcircuits.simulations": [[95, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.export": [[99, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[100, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[101, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[102, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[103, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[104, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[105, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[106, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[107, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[108, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[109, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[110, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[111, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[112, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[113, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[114, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[115, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[116, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[117, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[118, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[119, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[120, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[121, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[122, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[123, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[124, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[125, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[126, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[127, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[128, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[129, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[130, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[131, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[132, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[133, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[134, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[135, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[136, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[137, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[138, "kqcircuits-util"]], "kqcircuits.util.area": [[139, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[140, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[141, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[142, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[143, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[144, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[145, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[146, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[147, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[148, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[149, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[150, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[151, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[152, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[153, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[154, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[155, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[156, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[157, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[158, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[159, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[160, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[161, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[162, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[163, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[164, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[165, "citing"]], "Contributing": [[166, "contributing"]], "Versioning": [[166, "versioning"]], "Architecture": [[167, "architecture"]], "Elements": [[167, "elements"]], "PCell parameters": [[167, "pcell-parameters"]], "Libraries": [[167, "libraries"], [186, "libraries"]], "pya resolver": [[167, "pya-resolver"]], "Coding Style": [[168, "coding-style"]], "Containers": [[169, "containers"]], "CLI usage": [[169, "cli-usage"]], "Docker CI usage": [[169, "docker-ci-usage"]], "Singularity usage": [[169, "singularity-usage"]], "Documentation": [[170, "documentation"], [175, "documentation"]], "Developer Guide": [[171, "developer-guide"]], "Developer GUI Setup": [[172, "developer-gui-setup"]], "Prerequisites": [[172, "prerequisites"], [173, "prerequisites"]], "Python": [[172, "python"]], "Sources": [[172, "sources"]], "Install": [[172, "install"]], "Unlinking": [[172, "unlinking"]], "Update": [[172, "update"]], "Secondary install": [[172, "secondary-install"]], "Manual installation": [[172, "manual-installation"]], "Symlinks in Linux or MacOS": [[172, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[172, "symlinks-in-windows"]], "Installing dependencies": [[172, "installing-dependencies"]], "Developer Standalone module Setup": [[173, "developer-standalone-module-setup"]], "Installation": [[173, "installation"], [176, "installation"]], "1. Basic installation": [[173, "basic-installation"]], "2. Reproducible, Secure Installation": [[173, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[173, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[173, "dependency-extensions"]], "PyPI Installation": [[173, "pypi-installation"]], "Usage": [[173, "usage"], [195, "usage"]], "Jupyter notebook usage": [[173, "jupyter-notebook-usage"]], "Updating the required dependencies": [[173, "updating-the-required-dependencies"]], "Testing": [[174, "testing"]], "Unit tests": [[174, "unit-tests"]], "KQC logo": [[175, "logo"]], "Indices and tables": [[175, "indices-and-tables"]], "KLayout": [[176, "klayout"]], "Known installation issues": [[176, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[176, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[177, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[177, "installing-kqcircuits-salt-package"]], "First look around": [[177, "first-look-around"]], "Setting up a user package directory": [[177, "setting-up-a-user-package-directory"]], "Defining a custom element": [[177, "defining-a-custom-element"]], "Defining a custom chip": [[177, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[177, "upgrading-or-removing-salt-package"]], "Release Notes": [[177, "release-notes"]], "Support": [[178, "support"]], "Trademarks": [[179, "trademarks"]], "General Structure and Miscellaneous Utilities": [[180, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[180, "file-system-hierarchy"], [186, "file-system-hierarchy"]], "Miscellaneous Utilities": [[180, "miscellaneous-utilities"]], "GUI Features": [[181, "gui-features"]], "Useful hotkeys": [[181, "useful-hotkeys"]], "Introduction to Elements": [[181, "introduction-to-elements"]], "Placing Elements": [[181, "placing-elements"]], "Modifying Element parameters": [[181, "modifying-element-parameters"]], "Modifying waveguides": [[181, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[181, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[181, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[181, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[182, "point-and-click-workflow-tutorial"]], "User Guide": [[183, "user-guide"]], "Macro development": [[184, "macro-development"]], "Running the first example": [[184, "running-the-first-example"]], "Interacting with the KLayout application": [[184, "interacting-with-the-klayout-application"]], "Creating a new panel": [[184, "creating-a-new-panel"]], "Accessing the currently active panel": [[184, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[184, "using-klayoutview"]], "Debugger": [[184, "debugger"]], "Reloading libraries": [[184, "reloading-libraries"]], "Examples": [[184, "examples"]], "Mask export": [[185, "mask-export"]], "Tutorial": [[185, "tutorial"]], "Basic mask script and export": [[185, "basic-mask-script-and-export"]], "Ground grid": [[185, "ground-grid"]], "Adding and modifying chips": [[185, "adding-and-modifying-chips"]], "Multi-face masks": [[185, "multi-face-masks"]], "Composite mask maps": [[185, "composite-mask-maps"]], "Python workflow tutorial": [[186, "python-workflow-tutorial"]], "Structure of Element code": [[186, "structure-of-element-code"]], "Element class": [[186, "element-class"]], "Parameters": [[186, "parameters"]], "Build": [[186, "build"]], "Example of defining an Element class": [[186, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[186, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[186, "defining-sampleholder-types"]], "Refpoints": [[186, "refpoints"]], "KQCircuits\u2019 Layers": [[186, "kqcircuits-layers"]], "Faces": [[186, "faces"]], "Layer configuration files": [[186, "layer-configuration-files"]], "Adding a new face": [[186, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[186, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[187, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[188, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[189, "gmsh-elmer-export"]], "Simulation features": [[190, "simulation-features"]], "S-parameter matrix": [[190, "s-parameter-matrix"]], "Capacitance matrix": [[190, "capacitance-matrix"]], "Eigenmode": [[190, "eigenmode"]], "Energy integrals and participation ratio": [[190, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[190, "cross-sectional-simulations"]], "pyEPR": [[190, "pyepr"]], "Simulation objects": [[191, "simulation-objects"]], "The Simulation class": [[191, "the-simulation-class"]], "Box": [[191, "box"]], "Ports": [[191, "ports"]], "Face stack": [[191, "face-stack"]], "Simulation subclass": [[191, "simulation-subclass"]], "Single element subclass": [[191, "single-element-subclass"]], "General subclass": [[191, "general-subclass"]], "Geometry sweeps": [[191, "geometry-sweeps"]], "Export functions": [[192, "export-functions"]], "Ansys export": [[192, "ansys-export"]], "Elmer export": [[192, "elmer-export"]], "Sonnet export": [[192, "sonnet-export"]], "Geometry from Klayout GUI": [[192, "geometry-from-klayout-gui"]], "External simulation tools": [[193, "external-simulation-tools"]], "Terminology": [[194, "terminology"]], "Creating cross section images": [[196, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[196, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[196, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[196, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_resonator_polygon"], [59, "module-kqcircuits.elements.tsvs"], [60, "module-kqcircuits.elements.tsvs.tsv"], [61, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [62, "module-kqcircuits.elements.tsvs.tsv_standard"], [63, "module-kqcircuits.elements.waveguide_composite"], [64, "module-kqcircuits.elements.waveguide_coplanar"], [65, "module-kqcircuits.elements.waveguide_coplanar_curved"], [66, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [67, "module-kqcircuits.elements.waveguide_coplanar_straight"], [68, "module-kqcircuits.elements.waveguide_coplanar_taper"], [69, "module-kqcircuits.junctions"], [70, "module-kqcircuits.junctions.junction"], [71, "module-kqcircuits.junctions.manhattan"], [72, "module-kqcircuits.junctions.manhattan_single_junction"], [73, "module-kqcircuits.junctions.no_squid"], [74, "module-kqcircuits.junctions.sim"], [75, "module-kqcircuits.junctions.squid"], [76, "module-kqcircuits.klayout_view"], [77, "module-kqcircuits.layer_cluster"], [78, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.layer_config.default_layer_config"], [80, "module-kqcircuits.layer_config.example_layer_config"], [81, "module-kqcircuits.masks"], [82, "module-kqcircuits.masks.mask_export"], [83, "module-kqcircuits.masks.mask_layout"], [84, "module-kqcircuits.masks.mask_set"], [85, "module-kqcircuits.masks.multi_face_mask_layout"], [86, "module-kqcircuits.pya_resolver"], [87, "module-kqcircuits.qubits"], [88, "module-kqcircuits.qubits.circular_transmon_single_island"], [89, "module-kqcircuits.qubits.concentric_transmon"], [90, "module-kqcircuits.qubits.double_pads"], [91, "module-kqcircuits.qubits.double_pads_splines"], [92, "module-kqcircuits.qubits.qubit"], [93, "module-kqcircuits.qubits.swissmon"], [94, "module-kqcircuits.run"], [95, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.airbridges_sim"], [97, "module-kqcircuits.simulations.cross_section_simulation"], [98, "module-kqcircuits.simulations.empty_simulation"], [99, "module-kqcircuits.simulations.export"], [100, "module-kqcircuits.simulations.export.ansys"], [101, "module-kqcircuits.simulations.export.ansys.ansys_export"], [102, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [103, "module-kqcircuits.simulations.export.elmer"], [104, "module-kqcircuits.simulations.export.elmer.elmer_export"], [105, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [106, "module-kqcircuits.simulations.export.export_and_run"], [107, "module-kqcircuits.simulations.export.export_singularity"], [108, "module-kqcircuits.simulations.export.remote_export_and_run"], [109, "module-kqcircuits.simulations.export.simulation_export"], [110, "module-kqcircuits.simulations.export.simulation_validate"], [111, "module-kqcircuits.simulations.export.solution"], [112, "module-kqcircuits.simulations.export.sonnet"], [113, "module-kqcircuits.simulations.export.sonnet.parser"], [114, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [115, "module-kqcircuits.simulations.export.util"], [116, "module-kqcircuits.simulations.export.xsection"], [117, "module-kqcircuits.simulations.export.xsection.epr_correction_export"], [118, "module-kqcircuits.simulations.export.xsection.xsection_export"], [119, "module-kqcircuits.simulations.partition_region"], [120, "module-kqcircuits.simulations.port"], [121, "module-kqcircuits.simulations.post_process"], [122, "module-kqcircuits.simulations.simulation"], [123, "module-kqcircuits.simulations.single_element_simulation"], [124, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [125, "module-kqcircuits.simulations.waveguides_sim"], [126, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [127, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [128, "module-kqcircuits.test_structures"], [129, "module-kqcircuits.test_structures.airbridge_dc"], [130, "module-kqcircuits.test_structures.cross_test"], [131, "module-kqcircuits.test_structures.junction_test_pads"], [132, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [133, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [134, "module-kqcircuits.test_structures.stripes_test"], [135, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [136, "module-kqcircuits.test_structures.test_structure"], [137, "module-kqcircuits.test_structures.tsv_test_pattern"], [138, "module-kqcircuits.util"], [139, "module-kqcircuits.util.area"], [140, "module-kqcircuits.util.count_instances"], [141, "module-kqcircuits.util.coupler_lib"], [142, "module-kqcircuits.util.deep_delete"], [143, "module-kqcircuits.util.defaults_helper"], [144, "module-kqcircuits.util.dependencies"], [145, "module-kqcircuits.util.edit_node_plugin"], [146, "module-kqcircuits.util.export_helper"], [147, "module-kqcircuits.util.geometry_helper"], [148, "module-kqcircuits.util.geometry_json_encoder"], [149, "module-kqcircuits.util.groundgrid"], [150, "module-kqcircuits.util.gui_helper"], [151, "module-kqcircuits.util.import_helper"], [152, "module-kqcircuits.util.label"], [153, "module-kqcircuits.util.label_polygons"], [154, "module-kqcircuits.util.layout_to_code"], [155, "module-kqcircuits.util.library_helper"], [156, "module-kqcircuits.util.log_router"], [157, "module-kqcircuits.util.merge"], [158, "module-kqcircuits.util.netlist_extraction"], [159, "module-kqcircuits.util.netlist_graph"], [160, "module-kqcircuits.util.parameters"], [161, "module-kqcircuits.util.plugin_startup"], [162, "module-kqcircuits.util.refpoints"], [163, "module-kqcircuits.util.replace_junctions"], [164, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[59, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[63, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[63, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[70, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[70, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[70, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[71, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[73, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[73, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[74, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[74, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[75, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[76, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[76, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[77, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[77, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[78, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[83, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "overwrite_chips_by_position_label() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.overwrite_chips_by_position_label"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[84, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[90, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[91, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[92, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[93, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[94, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[94, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[94, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[95, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.export": [[99, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[100, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[101, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[101, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[101, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[101, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[102, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[102, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[103, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[104, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[104, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[104, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[104, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[105, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[105, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[106, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[106, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[106, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[106, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[107, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[107, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[108, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[108, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[108, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[109, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[109, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[110, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[110, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[110, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[111, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[111, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[111, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[111, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[112, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[113, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[113, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[114, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[114, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[114, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[114, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[115, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[115, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[115, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[115, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[115, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[116, "module-kqcircuits.simulations.export.xsection"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[117, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[117, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[117, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[118, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[118, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[119, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[119, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[119, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[119, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[119, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[120, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[120, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[120, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[120, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[120, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[120, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[121, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[121, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[121, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[122, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[122, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[122, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[122, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[122, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[122, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[122, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[122, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[122, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[122, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[123, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[123, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[124, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[124, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[124, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[125, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[125, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[125, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[125, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[125, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[126, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[126, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[127, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[127, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[127, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[127, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[128, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[129, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[129, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[129, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[130, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[130, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[130, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[131, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[132, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[132, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[132, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[132, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[132, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[132, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[133, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[133, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[133, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[134, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[134, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[134, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[135, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[135, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[135, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[136, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[136, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[136, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[137, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[137, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[137, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[138, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[139, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[139, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[139, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[139, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[140, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[140, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[141, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[141, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[142, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[142, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[142, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[143, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[143, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[144, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[144, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[145, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[145, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[146, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[146, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[147, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[147, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[148, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[148, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[148, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[148, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[148, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[148, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[149, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[149, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[150, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[150, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[151, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[151, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[152, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[152, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[152, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[152, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[152, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[152, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[152, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[153, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[153, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[153, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[154, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[154, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[154, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[154, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[154, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[155, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[155, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[156, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[156, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[157, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[157, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[157, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[157, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[158, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[158, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[158, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[158, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[159, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[159, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[159, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[160, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[160, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[160, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[160, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[160, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[160, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[160, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[161, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[161, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[162, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[162, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[162, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[162, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[162, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[162, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[162, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[162, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[162, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[162, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[162, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[162, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[162, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[162, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[162, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[163, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[163, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[164, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[164, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[164, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[164, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})